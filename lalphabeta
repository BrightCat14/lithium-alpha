local playerName = game:GetService("Players").LocalPlayer.Name
print("Player Name:", playerName)  -- Отладочная печать

if playerName == "DeuSCeLiR" or playerName == "BrightCat1950" or playerName == "GhaNgeTeCh" or playerName == "TwinkBC1950" then
	--[=[
	 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
	88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
	88      88    88    88            odD'      88      88    88 88ooo88 
	88  ooo 88    88    88          .88'        88      88    88 88~~~88 
	88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
	 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
	]=]

	-- Instances: 332 | Scripts: 65 | Modules: 4
	local G2L = {};

	-- StarterGui.LithiumAlpha
	G2L["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"));
	G2L["1"]["Name"] = [[LithiumAlpha]];
	G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

	-- StarterGui.LithiumAlpha.Main
	G2L["2"] = Instance.new("Frame", G2L["1"]);
	G2L["2"]["BorderSizePixel"] = 0;
	G2L["2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["2"]["Size"] = UDim2.new(0, 500, 0, 310);
	G2L["2"]["Position"] = UDim2.new(0.30909, 0, 0.25426, 0);
	G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["2"]["Name"] = [[Main]];

	-- StarterGui.LithiumAlpha.Main.UIGradient
	G2L["3"] = Instance.new("UIGradient", G2L["2"]);
	G2L["3"]["Rotation"] = 40;
	G2L["3"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(86, 171, 255)),ColorSequenceKeypoint.new(0.474, Color3.fromRGB(86, 171, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};

	-- StarterGui.LithiumAlpha.Main.UICorner
	G2L["4"] = Instance.new("UICorner", G2L["2"]);
	G2L["4"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar
	G2L["5"] = Instance.new("Frame", G2L["2"]);
	G2L["5"]["BorderSizePixel"] = 0;
	G2L["5"]["BackgroundColor3"] = Color3.fromRGB(126, 180, 245);
	G2L["5"]["Size"] = UDim2.new(0, 500, 0, 45);
	G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["5"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Bar.UICorner
	G2L["6"] = Instance.new("UICorner", G2L["5"]);
	G2L["6"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab1
	G2L["7"] = Instance.new("ImageButton", G2L["5"]);
	G2L["7"]["BorderSizePixel"] = 0;
	G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["7"]["Image"] = [[rbxassetid://18619893474]];
	G2L["7"]["Size"] = UDim2.new(0, 50, 0, 48);
	G2L["7"]["BackgroundTransparency"] = 1;
	G2L["7"]["Name"] = [[Tab1]];
	G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["7"]["Position"] = UDim2.new(0.32795, 0, 0.02222, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab1.UICorner
	G2L["8"] = Instance.new("UICorner", G2L["7"]);
	G2L["8"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab2
	G2L["9"] = Instance.new("ImageButton", G2L["5"]);
	G2L["9"]["BorderSizePixel"] = 0;
	G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["9"]["Image"] = [[rbxassetid://18619850280]];
	G2L["9"]["Size"] = UDim2.new(0, 50, 0, 51);
	G2L["9"]["BackgroundTransparency"] = 1;
	G2L["9"]["Name"] = [[Tab2]];
	G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["9"]["Position"] = UDim2.new(0.22755, 0, -0.08889, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab2.UICorner
	G2L["a"] = Instance.new("UICorner", G2L["9"]);
	G2L["a"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab3
	G2L["b"] = Instance.new("ImageButton", G2L["5"]);
	G2L["b"]["BorderSizePixel"] = 0;
	G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["b"]["Image"] = [[rbxassetid://18619995896]];
	G2L["b"]["Size"] = UDim2.new(0, 55, 0, 45);
	G2L["b"]["BackgroundTransparency"] = 1;
	G2L["b"]["Name"] = [[Tab3]];
	G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["b"]["Position"] = UDim2.new(0.44779, 0, 0.02222, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab3.UICorner
	G2L["c"] = Instance.new("UICorner", G2L["b"]);
	G2L["c"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.Logo
	G2L["d"] = Instance.new("ImageLabel", G2L["5"]);
	G2L["d"]["Active"] = true;
	G2L["d"]["BorderSizePixel"] = 0;
	G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["d"]["Image"] = [[rbxassetid://18619803784]];
	G2L["d"]["Size"] = UDim2.new(0, 130, 0, 117);
	G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["d"]["BackgroundTransparency"] = 1;
	G2L["d"]["Selectable"] = true;
	G2L["d"]["Name"] = [[Logo]];
	G2L["d"]["Position"] = UDim2.new(-0.032, 0, -0.8, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Logo.UICorner
	G2L["e"] = Instance.new("UICorner", G2L["d"]);
	G2L["e"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab4
	G2L["f"] = Instance.new("TextButton", G2L["5"]);
	G2L["f"]["BorderSizePixel"] = 0;
	G2L["f"]["TextSize"] = 30;
	G2L["f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f"]["Size"] = UDim2.new(0, 55, 0, 45);
	G2L["f"]["BackgroundTransparency"] = 1;
	G2L["f"]["Name"] = [[Tab4]];
	G2L["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["f"]["Text"] = [[?]];
	G2L["f"]["Position"] = UDim2.new(0.55801, 0, 0.04444, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab4.UICorner
	G2L["10"] = Instance.new("UICorner", G2L["f"]);
	G2L["10"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.DragManager
	G2L["11"] = Instance.new("LocalScript", G2L["5"]);
	G2L["11"]["Name"] = [[DragManager]];

	-- StarterGui.LithiumAlpha.Main.Bar.Close
	G2L["12"] = Instance.new("ImageButton", G2L["5"]);
	G2L["12"]["BorderSizePixel"] = 0;
	G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12"]["Image"] = [[rbxassetid://18631459897]];
	G2L["12"]["Size"] = UDim2.new(0, 27, 0, 27);
	G2L["12"]["BackgroundTransparency"] = 1;
	G2L["12"]["Name"] = [[Close]];
	G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["12"]["Position"] = UDim2.new(0.91, 0, 0.2, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Close.UICorner
	G2L["13"] = Instance.new("UICorner", G2L["12"]);
	G2L["13"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.Close.Close
	G2L["14"] = Instance.new("LocalScript", G2L["12"]);
	G2L["14"]["Name"] = [[Close]];

	-- StarterGui.LithiumAlpha.Main.Bar.Minimize
	G2L["15"] = Instance.new("ImageButton", G2L["5"]);
	G2L["15"]["BorderSizePixel"] = 0;
	G2L["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["15"]["Image"] = [[rbxassetid://18631458459]];
	G2L["15"]["Size"] = UDim2.new(0, 27, 0, 27);
	G2L["15"]["BackgroundTransparency"] = 1;
	G2L["15"]["Name"] = [[Minimize]];
	G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["15"]["Position"] = UDim2.new(0.83804, 0, 0.2, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Minimize.UICorner
	G2L["16"] = Instance.new("UICorner", G2L["15"]);
	G2L["16"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Bar.Minimize.LocalScript
	G2L["17"] = Instance.new("LocalScript", G2L["15"]);


	-- StarterGui.LithiumAlpha.Main.Bar.Tab5
	G2L["18"] = Instance.new("ImageButton", G2L["5"]);
	G2L["18"]["BorderSizePixel"] = 0;
	G2L["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["18"]["Image"] = [[rbxassetid://18632295564]];
	G2L["18"]["Size"] = UDim2.new(0, 49, 0, 44);
	G2L["18"]["BackgroundTransparency"] = 1;
	G2L["18"]["Name"] = [[Tab5]];
	G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["18"]["Position"] = UDim2.new(0.66823, 0, -0.02222, 0);

	-- StarterGui.LithiumAlpha.Main.Bar.Tab5.UICorner
	G2L["19"] = Instance.new("UICorner", G2L["18"]);
	G2L["19"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual
	G2L["1a"] = Instance.new("Folder", G2L["2"]);
	G2L["1a"]["Name"] = [[Visual]];

	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair
	G2L["1b"] = Instance.new("ImageButton", G2L["1a"]);
	G2L["1b"]["BorderSizePixel"] = 0;
	G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["1b"]["Image"] = [[rbxassetid://18631459897]];
	G2L["1b"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["1b"]["BackgroundTransparency"] = 1;
	G2L["1b"]["Name"] = [[Crosshair]];
	G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["1b"]["Visible"] = false;
	G2L["1b"]["Position"] = UDim2.new(0.03, 0, 0.22903, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.UICorner
	G2L["1c"] = Instance.new("UICorner", G2L["1b"]);
	G2L["1c"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.LocalScript
	G2L["1d"] = Instance.new("LocalScript", G2L["1b"]);


	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.TextLabel
	G2L["1e"] = Instance.new("TextLabel", G2L["1b"]);
	G2L["1e"]["TextWrapped"] = true;
	G2L["1e"]["BorderSizePixel"] = 0;
	G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["1e"]["TextSize"] = 30;
	G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["1e"]["BackgroundTransparency"] = 1;
	G2L["1e"]["Size"] = UDim2.new(0, 200, 0, 50);
	G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["1e"]["Text"] = [[Crosshair]];
	G2L["1e"]["Position"] = UDim2.new(0.23077, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.TextBox
	G2L["1f"] = Instance.new("TextBox", G2L["1b"]);
	G2L["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["1f"]["TextWrapped"] = true;
	G2L["1f"]["TextSize"] = 20;
	G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
	G2L["1f"]["Size"] = UDim2.new(0, 152, 0, 31);
	G2L["1f"]["Position"] = UDim2.new(4.79487, 0, 0.08108, 0);
	G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["1f"]["Text"] = [[18619850280]];

	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.TextBox.UICorner
	G2L["20"] = Instance.new("UICorner", G2L["1f"]);


	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.TextButton
	G2L["21"] = Instance.new("TextButton", G2L["1b"]);
	G2L["21"]["TextSize"] = 20;
	G2L["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["21"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
	G2L["21"]["Size"] = UDim2.new(0, 83, 0, 31);
	G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["21"]["Text"] = [[Default]];
	G2L["21"]["Position"] = UDim2.new(9.1282, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.TextButton.LocalScript
	G2L["22"] = Instance.new("LocalScript", G2L["21"]);


	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.TextButton.UICorner
	G2L["23"] = Instance.new("UICorner", G2L["21"]);


	-- StarterGui.LithiumAlpha.Main.Visual.ESP
	G2L["24"] = Instance.new("ImageButton", G2L["1a"]);
	G2L["24"]["BorderSizePixel"] = 0;
	G2L["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["24"]["Image"] = [[rbxassetid://18631459897]];
	G2L["24"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["24"]["BackgroundTransparency"] = 1;
	G2L["24"]["Name"] = [[ESP]];
	G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["24"]["Visible"] = false;
	G2L["24"]["Position"] = UDim2.new(0.03, 0, 0.40323, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.ESP.UICorner
	G2L["25"] = Instance.new("UICorner", G2L["24"]);
	G2L["25"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.ESP.LocalScript
	G2L["26"] = Instance.new("LocalScript", G2L["24"]);


	-- StarterGui.LithiumAlpha.Main.Visual.ESP.TextLabel
	G2L["27"] = Instance.new("TextLabel", G2L["24"]);
	G2L["27"]["TextWrapped"] = true;
	G2L["27"]["BorderSizePixel"] = 0;
	G2L["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["27"]["TextSize"] = 30;
	G2L["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["27"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["27"]["BackgroundTransparency"] = 1;
	G2L["27"]["Size"] = UDim2.new(0, 200, 0, 50);
	G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["27"]["Text"] = [[ESP]];
	G2L["27"]["Position"] = UDim2.new(-0.61538, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.watermark
	G2L["28"] = Instance.new("ImageButton", G2L["1a"]);
	G2L["28"]["BorderSizePixel"] = 0;
	G2L["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["28"]["Image"] = [[rbxassetid://18631459897]];
	G2L["28"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["28"]["BackgroundTransparency"] = 1;
	G2L["28"]["Name"] = [[watermark]];
	G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["28"]["Visible"] = false;
	G2L["28"]["Position"] = UDim2.new(0.03, 0, 0.57742, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.watermark.LocalScript
	G2L["29"] = Instance.new("LocalScript", G2L["28"]);


	-- StarterGui.LithiumAlpha.Main.Visual.watermark.TextLabel
	G2L["2a"] = Instance.new("TextLabel", G2L["28"]);
	G2L["2a"]["TextWrapped"] = true;
	G2L["2a"]["BorderSizePixel"] = 0;
	G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["2a"]["TextSize"] = 30;
	G2L["2a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["2a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["2a"]["BackgroundTransparency"] = 1;
	G2L["2a"]["Size"] = UDim2.new(0, 200, 0, 50);
	G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["2a"]["Text"] = [[Watermark]];
	G2L["2a"]["Position"] = UDim2.new(0.58974, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.watermark.UICorner
	G2L["2b"] = Instance.new("UICorner", G2L["28"]);
	G2L["2b"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.watermark.Type2
	G2L["2c"] = Instance.new("TextButton", G2L["28"]);
	G2L["2c"]["BorderSizePixel"] = 0;
	G2L["2c"]["TextSize"] = 14;
	G2L["2c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(112, 167, 221);
	G2L["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["2c"]["Size"] = UDim2.new(0, 118, 0, 24);
	G2L["2c"]["Name"] = [[Type2]];
	G2L["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["2c"]["Text"] = [[Type 2]];
	G2L["2c"]["Position"] = UDim2.new(8.92308, 0, 0.16216, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.watermark.Type2.UICorner
	G2L["2d"] = Instance.new("UICorner", G2L["2c"]);
	G2L["2d"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.watermark.Type1
	G2L["2e"] = Instance.new("TextButton", G2L["28"]);
	G2L["2e"]["BorderSizePixel"] = 0;
	G2L["2e"]["TextSize"] = 14;
	G2L["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["2e"]["Size"] = UDim2.new(0, 118, 0, 24);
	G2L["2e"]["Name"] = [[Type1]];
	G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["2e"]["Text"] = [[Type 1]];
	G2L["2e"]["Position"] = UDim2.new(5.66667, 0, 0.16216, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.watermark.Type1.UICorner
	G2L["2f"] = Instance.new("UICorner", G2L["2e"]);
	G2L["2f"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.snow
	G2L["30"] = Instance.new("ImageButton", G2L["1a"]);
	G2L["30"]["BorderSizePixel"] = 0;
	G2L["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["30"]["Image"] = [[rbxassetid://18631459897]];
	G2L["30"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["30"]["BackgroundTransparency"] = 1;
	G2L["30"]["Name"] = [[snow]];
	G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["30"]["Visible"] = false;
	G2L["30"]["Position"] = UDim2.new(0.03, 0, 0.76129, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.UICorner
	G2L["31"] = Instance.new("UICorner", G2L["30"]);
	G2L["31"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.LocalScript
	G2L["32"] = Instance.new("LocalScript", G2L["30"]);


	-- StarterGui.LithiumAlpha.Main.Visual.snow.TextLabel
	G2L["33"] = Instance.new("TextLabel", G2L["30"]);
	G2L["33"]["TextWrapped"] = true;
	G2L["33"]["BorderSizePixel"] = 0;
	G2L["33"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["33"]["TextSize"] = 30;
	G2L["33"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["33"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["33"]["BackgroundTransparency"] = 1;
	G2L["33"]["Size"] = UDim2.new(0, 76, 0, 50);
	G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["33"]["Text"] = [[Snow]];
	G2L["33"]["Position"] = UDim2.new(1.20595, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius
	G2L["34"] = Instance.new("Frame", G2L["30"]);
	G2L["34"]["BorderSizePixel"] = 0;
	G2L["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["34"]["Size"] = UDim2.new(0, 165, 0, 14);
	G2L["34"]["Position"] = UDim2.new(3.45418, 0, 0.29712, 0);
	G2L["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["34"]["Name"] = [[Radius]];

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.UICorner
	G2L["35"] = Instance.new("UICorner", G2L["34"]);
	G2L["35"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.Bar
	G2L["36"] = Instance.new("Frame", G2L["34"]);
	G2L["36"]["BorderSizePixel"] = 0;
	G2L["36"]["BackgroundColor3"] = Color3.fromRGB(74, 148, 221);
	G2L["36"]["Size"] = UDim2.new(0, 165, 0, 14);
	G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["36"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.Bar.UICorner
	G2L["37"] = Instance.new("UICorner", G2L["36"]);
	G2L["37"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.Bar.Thumb
	G2L["38"] = Instance.new("Frame", G2L["36"]);
	G2L["38"]["BorderSizePixel"] = 0;
	G2L["38"]["BackgroundColor3"] = Color3.fromRGB(23, 112, 171);
	G2L["38"]["Size"] = UDim2.new(0, 23, 0, 23);
	G2L["38"]["Position"] = UDim2.new(0.85802, 0, -0.35714, 0);
	G2L["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["38"]["Name"] = [[Thumb]];

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.Bar.Thumb.UICorner
	G2L["39"] = Instance.new("UICorner", G2L["38"]);
	G2L["39"]["CornerRadius"] = UDim.new(1000, 24);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.Bar.Thumb.SliderManager
	G2L["3a"] = Instance.new("LocalScript", G2L["38"]);
	G2L["3a"]["Name"] = [[SliderManager]];

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.Bar.Thumb.percentage
	G2L["3b"] = Instance.new("TextLabel", G2L["38"]);
	G2L["3b"]["BorderSizePixel"] = 0;
	G2L["3b"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["3b"]["TextTransparency"] = 1;
	G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["3b"]["TextSize"] = 30;
	G2L["3b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["3b"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
	G2L["3b"]["BackgroundTransparency"] = 1;
	G2L["3b"]["Size"] = UDim2.new(0, 90, 0, 50);
	G2L["3b"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["3b"]["Text"] = [[15]];
	G2L["3b"]["Name"] = [[percentage]];
	G2L["3b"]["Position"] = UDim2.new(-1.52174, 0, -2, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Type2
	G2L["3c"] = Instance.new("TextButton", G2L["30"]);
	G2L["3c"]["BorderSizePixel"] = 0;
	G2L["3c"]["TextSize"] = 14;
	G2L["3c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(112, 167, 221);
	G2L["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["3c"]["Size"] = UDim2.new(0, 118, 0, 24);
	G2L["3c"]["Name"] = [[Type2]];
	G2L["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["3c"]["Text"] = [[New snow]];
	G2L["3c"]["Position"] = UDim2.new(8, 0, 0.2973, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Type2.UICorner
	G2L["3d"] = Instance.new("UICorner", G2L["3c"]);
	G2L["3d"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Type1
	G2L["3e"] = Instance.new("TextButton", G2L["30"]);
	G2L["3e"]["BorderSizePixel"] = 0;
	G2L["3e"]["TextSize"] = 14;
	G2L["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["3e"]["Size"] = UDim2.new(0, 118, 0, 24);
	G2L["3e"]["Name"] = [[Type1]];
	G2L["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["3e"]["Text"] = [[Old snow]];
	G2L["3e"]["Position"] = UDim2.new(8, 0, -0.54054, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Type1.UICorner
	G2L["3f"] = Instance.new("UICorner", G2L["3e"]);
	G2L["3f"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Type3
	G2L["40"] = Instance.new("TextButton", G2L["30"]);
	G2L["40"]["BorderSizePixel"] = 0;
	G2L["40"]["TextSize"] = 14;
	G2L["40"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["40"]["BackgroundColor3"] = Color3.fromRGB(112, 167, 221);
	G2L["40"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["40"]["Size"] = UDim2.new(0, 118, 0, 24);
	G2L["40"]["Name"] = [[Type3]];
	G2L["40"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["40"]["Text"] = [[Star]];
	G2L["40"]["Position"] = UDim2.new(8, 0, 1.10811, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.snow.Type3.UICorner
	G2L["41"] = Instance.new("UICorner", G2L["40"]);
	G2L["41"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.Frame
	G2L["42"] = Instance.new("Frame", G2L["1a"]);
	G2L["42"]["Visible"] = false;
	G2L["42"]["BorderSizePixel"] = 0;
	G2L["42"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["42"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["42"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Visual.Frame.UICorner
	G2L["43"] = Instance.new("UICorner", G2L["42"]);
	G2L["43"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual.Frame.page2
	G2L["44"] = Instance.new("TextButton", G2L["42"]);
	G2L["44"]["BorderSizePixel"] = 0;
	G2L["44"]["TextSize"] = 21;
	G2L["44"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["44"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["44"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["44"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["44"]["BackgroundTransparency"] = 1;
	G2L["44"]["Name"] = [[page2]];
	G2L["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["44"]["Text"] = [[>]];
	G2L["44"]["Position"] = UDim2.new(0.67, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Movement
	G2L["45"] = Instance.new("Folder", G2L["2"]);
	G2L["45"]["Name"] = [[Movement]];

	-- StarterGui.LithiumAlpha.Main.Movement.speed
	G2L["46"] = Instance.new("ImageButton", G2L["45"]);
	G2L["46"]["BorderSizePixel"] = 0;
	G2L["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["46"]["Image"] = [[rbxassetid://18631459897]];
	G2L["46"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["46"]["BackgroundTransparency"] = 1;
	G2L["46"]["Name"] = [[speed]];
	G2L["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["46"]["Visible"] = false;
	G2L["46"]["Position"] = UDim2.new(0.03, 0, 0.19677, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.speed.LocalScript
	G2L["47"] = Instance.new("LocalScript", G2L["46"]);


	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed
	G2L["48"] = Instance.new("Frame", G2L["46"]);
	G2L["48"]["BorderSizePixel"] = 0;
	G2L["48"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["48"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["48"]["Position"] = UDim2.new(5.32597, 0, 0.2701, 0);
	G2L["48"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["48"]["Name"] = [[Speed]];

	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.UICorner
	G2L["49"] = Instance.new("UICorner", G2L["48"]);
	G2L["49"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.Bar
	G2L["4a"] = Instance.new("Frame", G2L["48"]);
	G2L["4a"]["BorderSizePixel"] = 0;
	G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(74, 148, 221);
	G2L["4a"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["4a"]["Position"] = UDim2.new(0, 0, 0, 0);
	G2L["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["4a"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.Bar.UICorner
	G2L["4b"] = Instance.new("UICorner", G2L["4a"]);
	G2L["4b"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.Bar.Thumb
	G2L["4c"] = Instance.new("Frame", G2L["4a"]);
	G2L["4c"]["BorderSizePixel"] = 0;
	G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(23, 112, 171);
	G2L["4c"]["Size"] = UDim2.new(0, 23, 0, 23);
	G2L["4c"]["Position"] = UDim2.new(0.85802, 0, -0.35714, 0);
	G2L["4c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["4c"]["Name"] = [[Thumb]];

	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.Bar.Thumb.UICorner
	G2L["4d"] = Instance.new("UICorner", G2L["4c"]);
	G2L["4d"]["CornerRadius"] = UDim.new(1000, 24);

	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.Bar.Thumb.SliderManager
	G2L["4e"] = Instance.new("LocalScript", G2L["4c"]);
	G2L["4e"]["Name"] = [[SliderManager]];

	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.Bar.Thumb.percentage
	G2L["4f"] = Instance.new("TextLabel", G2L["4c"]);
	G2L["4f"]["BorderSizePixel"] = 0;
	G2L["4f"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["4f"]["TextTransparency"] = 1;
	G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["4f"]["TextSize"] = 30;
	G2L["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["4f"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
	G2L["4f"]["BackgroundTransparency"] = 1;
	G2L["4f"]["Size"] = UDim2.new(0, 90, 0, 50);
	G2L["4f"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["4f"]["Text"] = [[1000]];
	G2L["4f"]["Name"] = [[percentage]];
	G2L["4f"]["Position"] = UDim2.new(-1.52174, 0, -2, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.speed.TextLabel
	G2L["50"] = Instance.new("TextLabel", G2L["46"]);
	G2L["50"]["BorderSizePixel"] = 0;
	G2L["50"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["50"]["TextSize"] = 28;
	G2L["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["50"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["50"]["BackgroundTransparency"] = 1;
	G2L["50"]["Size"] = UDim2.new(0, 158, 0, 50);
	G2L["50"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["50"]["Text"] = [[WalkSpeed]];
	G2L["50"]["Position"] = UDim2.new(1.07692, 0, -0.16216, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower
	G2L["51"] = Instance.new("ImageButton", G2L["45"]);
	G2L["51"]["BorderSizePixel"] = 0;
	G2L["51"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["51"]["Image"] = [[rbxassetid://18631459897]];
	G2L["51"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["51"]["BackgroundTransparency"] = 1;
	G2L["51"]["Name"] = [[Jumppower]];
	G2L["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["51"]["Visible"] = false;
	G2L["51"]["Position"] = UDim2.new(0.03, 0, 0.33871, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.LocalScript
	G2L["52"] = Instance.new("LocalScript", G2L["51"]);


	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.TextLabel
	G2L["53"] = Instance.new("TextLabel", G2L["51"]);
	G2L["53"]["TextWrapped"] = true;
	G2L["53"]["BorderSizePixel"] = 0;
	G2L["53"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["53"]["TextSize"] = 28;
	G2L["53"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["53"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["53"]["BackgroundTransparency"] = 1;
	G2L["53"]["Size"] = UDim2.new(0, 163, 0, 50);
	G2L["53"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["53"]["Text"] = [[JumpPower]];
	G2L["53"]["Position"] = UDim2.new(1.07692, 0, -0.16216, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump
	G2L["54"] = Instance.new("Frame", G2L["51"]);
	G2L["54"]["BorderSizePixel"] = 0;
	G2L["54"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["54"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["54"]["Position"] = UDim2.new(5.32597, 0, 0.2701, 0);
	G2L["54"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["54"]["Name"] = [[Jump]];

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.UICorner
	G2L["55"] = Instance.new("UICorner", G2L["54"]);
	G2L["55"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.Bar
	G2L["56"] = Instance.new("Frame", G2L["54"]);
	G2L["56"]["BorderSizePixel"] = 0;
	G2L["56"]["BackgroundColor3"] = Color3.fromRGB(74, 148, 221);
	G2L["56"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["56"]["Position"] = UDim2.new(0, 0, 0, 0);
	G2L["56"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["56"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.Bar.UICorner
	G2L["57"] = Instance.new("UICorner", G2L["56"]);
	G2L["57"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.Bar.Thumb
	G2L["58"] = Instance.new("Frame", G2L["56"]);
	G2L["58"]["BorderSizePixel"] = 0;
	G2L["58"]["BackgroundColor3"] = Color3.fromRGB(23, 112, 171);
	G2L["58"]["Size"] = UDim2.new(0, 23, 0, 23);
	G2L["58"]["Position"] = UDim2.new(0.85802, 0, -0.35714, 0);
	G2L["58"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["58"]["Name"] = [[Thumb]];

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.Bar.Thumb.UICorner
	G2L["59"] = Instance.new("UICorner", G2L["58"]);
	G2L["59"]["CornerRadius"] = UDim.new(1000, 24);

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.Bar.Thumb.SliderManager
	G2L["5a"] = Instance.new("LocalScript", G2L["58"]);
	G2L["5a"]["Name"] = [[SliderManager]];

	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.Bar.Thumb.percentage
	G2L["5b"] = Instance.new("TextLabel", G2L["58"]);
	G2L["5b"]["BorderSizePixel"] = 0;
	G2L["5b"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["5b"]["TextTransparency"] = 1;
	G2L["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["5b"]["TextSize"] = 30;
	G2L["5b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["5b"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
	G2L["5b"]["BackgroundTransparency"] = 1;
	G2L["5b"]["Size"] = UDim2.new(0, 90, 0, 50);
	G2L["5b"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["5b"]["Text"] = [[1000]];
	G2L["5b"]["Name"] = [[percentage]];
	G2L["5b"]["Position"] = UDim2.new(-1.52174, 0, -2, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.clicktp
	G2L["5c"] = Instance.new("ImageButton", G2L["45"]);
	G2L["5c"]["BorderSizePixel"] = 0;
	G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["5c"]["Image"] = [[rbxassetid://18631459897]];
	G2L["5c"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["5c"]["BackgroundTransparency"] = 1;
	G2L["5c"]["Name"] = [[clicktp]];
	G2L["5c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["5c"]["Visible"] = false;
	G2L["5c"]["Position"] = UDim2.new(0.03, 0, 0.48065, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.clicktp.UICorner
	G2L["5d"] = Instance.new("UICorner", G2L["5c"]);
	G2L["5d"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Movement.clicktp.LocalScript
	G2L["5e"] = Instance.new("LocalScript", G2L["5c"]);


	-- StarterGui.LithiumAlpha.Main.Movement.clicktp.TextLabel
	G2L["5f"] = Instance.new("TextLabel", G2L["5c"]);
	G2L["5f"]["TextWrapped"] = true;
	G2L["5f"]["BorderSizePixel"] = 0;
	G2L["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["5f"]["TextSize"] = 30;
	G2L["5f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["5f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["5f"]["BackgroundTransparency"] = 1;
	G2L["5f"]["Size"] = UDim2.new(0, 109, 0, 50);
	G2L["5f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["5f"]["Text"] = [[Clicktp]];
	G2L["5f"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly
	G2L["60"] = Instance.new("ImageButton", G2L["45"]);
	G2L["60"]["BorderSizePixel"] = 0;
	G2L["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["60"]["Image"] = [[rbxassetid://18631459897]];
	G2L["60"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["60"]["BackgroundTransparency"] = 1;
	G2L["60"]["Name"] = [[fly]];
	G2L["60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["60"]["Visible"] = false;
	G2L["60"]["Position"] = UDim2.new(0.036, 0, 0.61935, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed
	G2L["61"] = Instance.new("Frame", G2L["60"]);
	G2L["61"]["BorderSizePixel"] = 0;
	G2L["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["61"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["61"]["Position"] = UDim2.new(2.57692, 0, 0.29703, 0);
	G2L["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["61"]["Name"] = [[Speed]];

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.UICorner
	G2L["62"] = Instance.new("UICorner", G2L["61"]);
	G2L["62"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.Bar
	G2L["63"] = Instance.new("Frame", G2L["61"]);
	G2L["63"]["BorderSizePixel"] = 0;
	G2L["63"]["BackgroundColor3"] = Color3.fromRGB(74, 148, 221);
	G2L["63"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["63"]["Position"] = UDim2.new(0, 0, 0, 0);
	G2L["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["63"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.Bar.UICorner
	G2L["64"] = Instance.new("UICorner", G2L["63"]);
	G2L["64"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.Bar.Thumb
	G2L["65"] = Instance.new("Frame", G2L["63"]);
	G2L["65"]["BorderSizePixel"] = 0;
	G2L["65"]["BackgroundColor3"] = Color3.fromRGB(23, 112, 171);
	G2L["65"]["Size"] = UDim2.new(0, 23, 0, 23);
	G2L["65"]["Position"] = UDim2.new(0.85802, 0, -0.35714, 0);
	G2L["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["65"]["Name"] = [[Thumb]];

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.Bar.Thumb.UICorner
	G2L["66"] = Instance.new("UICorner", G2L["65"]);
	G2L["66"]["CornerRadius"] = UDim.new(1000, 24);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.Bar.Thumb.SliderManager
	G2L["67"] = Instance.new("LocalScript", G2L["65"]);
	G2L["67"]["Name"] = [[SliderManager]];

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.Bar.Thumb.percentage
	G2L["68"] = Instance.new("TextLabel", G2L["65"]);
	G2L["68"]["BorderSizePixel"] = 0;
	G2L["68"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["68"]["TextTransparency"] = 1;
	G2L["68"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["68"]["TextSize"] = 30;
	G2L["68"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["68"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
	G2L["68"]["BackgroundTransparency"] = 1;
	G2L["68"]["Size"] = UDim2.new(0, 90, 0, 50);
	G2L["68"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["68"]["Text"] = [[100]];
	G2L["68"]["Name"] = [[percentage]];
	G2L["68"]["Position"] = UDim2.new(-1.52174, 0, -2, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.TextLabel
	G2L["69"] = Instance.new("TextLabel", G2L["60"]);
	G2L["69"]["TextWrapped"] = true;
	G2L["69"]["BorderSizePixel"] = 0;
	G2L["69"]["TextScaled"] = true;
	G2L["69"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["69"]["TextSize"] = 23;
	G2L["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["69"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["69"]["BackgroundTransparency"] = 1;
	G2L["69"]["Size"] = UDim2.new(0, 53, 0, 30);
	G2L["69"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["69"]["Text"] = [[Fly]];
	G2L["69"]["Position"] = UDim2.new(1.07692, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Type1
	G2L["6a"] = Instance.new("TextButton", G2L["60"]);
	G2L["6a"]["BorderSizePixel"] = 0;
	G2L["6a"]["TextSize"] = 14;
	G2L["6a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["6a"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["6a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["6a"]["Size"] = UDim2.new(0, 118, 0, 24);
	G2L["6a"]["Name"] = [[Type1]];
	G2L["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["6a"]["Text"] = [[Type 1]];
	G2L["6a"]["Position"] = UDim2.new(6.69231, 0, -0.32432, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Type1.UICorner
	G2L["6b"] = Instance.new("UICorner", G2L["6a"]);
	G2L["6b"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Type2
	G2L["6c"] = Instance.new("TextButton", G2L["60"]);
	G2L["6c"]["BorderSizePixel"] = 0;
	G2L["6c"]["TextSize"] = 14;
	G2L["6c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["6c"]["BackgroundColor3"] = Color3.fromRGB(112, 167, 221);
	G2L["6c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["6c"]["Size"] = UDim2.new(0, 118, 0, 24);
	G2L["6c"]["Name"] = [[Type2]];
	G2L["6c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["6c"]["Text"] = [[Type 2]];
	G2L["6c"]["Position"] = UDim2.new(6.69231, 0, 0.54054, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.Type2.UICorner
	G2L["6d"] = Instance.new("UICorner", G2L["6c"]);
	G2L["6d"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Movement.fly.LocalScript
	G2L["6e"] = Instance.new("LocalScript", G2L["60"]);


	-- StarterGui.LithiumAlpha.Main.Movement.airstuck
	G2L["6f"] = Instance.new("ImageButton", G2L["45"]);
	G2L["6f"]["BorderSizePixel"] = 0;
	G2L["6f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["6f"]["Image"] = [[rbxassetid://18631459897]];
	G2L["6f"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["6f"]["BackgroundTransparency"] = 1;
	G2L["6f"]["Name"] = [[airstuck]];
	G2L["6f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["6f"]["Visible"] = false;
	G2L["6f"]["Position"] = UDim2.new(0.036, 0, 0.76129, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.airstuck.LocalScript
	G2L["70"] = Instance.new("LocalScript", G2L["6f"]);


	-- StarterGui.LithiumAlpha.Main.Movement.airstuck.TextLabel
	G2L["71"] = Instance.new("TextLabel", G2L["6f"]);
	G2L["71"]["TextWrapped"] = true;
	G2L["71"]["BorderSizePixel"] = 0;
	G2L["71"]["TextScaled"] = true;
	G2L["71"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["71"]["TextSize"] = 23;
	G2L["71"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["71"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["71"]["BackgroundTransparency"] = 1;
	G2L["71"]["Size"] = UDim2.new(0, 130, 0, 30);
	G2L["71"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["71"]["Text"] = [[AirStuck]];
	G2L["71"]["Position"] = UDim2.new(1.07692, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.Frame
	G2L["72"] = Instance.new("Frame", G2L["45"]);
	G2L["72"]["Visible"] = false;
	G2L["72"]["BorderSizePixel"] = 0;
	G2L["72"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["72"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["72"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Movement.Frame.UICorner
	G2L["73"] = Instance.new("UICorner", G2L["72"]);
	G2L["73"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Movement.Frame.page2
	G2L["74"] = Instance.new("TextButton", G2L["72"]);
	G2L["74"]["BorderSizePixel"] = 0;
	G2L["74"]["TextSize"] = 21;
	G2L["74"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["74"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["74"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["74"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["74"]["BackgroundTransparency"] = 1;
	G2L["74"]["Name"] = [[page2]];
	G2L["74"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["74"]["Text"] = [[>]];
	G2L["74"]["Position"] = UDim2.new(0.67, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Rage
	G2L["75"] = Instance.new("Folder", G2L["2"]);
	G2L["75"]["Name"] = [[Rage]];

	-- StarterGui.LithiumAlpha.Main.Rage.Aimbot
	G2L["76"] = Instance.new("ImageButton", G2L["75"]);
	G2L["76"]["BorderSizePixel"] = 0;
	G2L["76"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["76"]["Image"] = [[rbxassetid://18631459897]];
	G2L["76"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["76"]["BackgroundTransparency"] = 1;
	G2L["76"]["Name"] = [[Aimbot]];
	G2L["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["76"]["Visible"] = false;
	G2L["76"]["Position"] = UDim2.new(0.03, 0, 0.22903, 0);

	-- StarterGui.LithiumAlpha.Main.Rage.Aimbot.UICorner
	G2L["77"] = Instance.new("UICorner", G2L["76"]);
	G2L["77"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Rage.Aimbot.LocalScript
	G2L["78"] = Instance.new("LocalScript", G2L["76"]);


	-- StarterGui.LithiumAlpha.Main.Rage.Aimbot.TextLabel
	G2L["79"] = Instance.new("TextLabel", G2L["76"]);
	G2L["79"]["TextWrapped"] = true;
	G2L["79"]["BorderSizePixel"] = 0;
	G2L["79"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["79"]["TextSize"] = 30;
	G2L["79"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["79"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["79"]["BackgroundTransparency"] = 1;
	G2L["79"]["Size"] = UDim2.new(0, 200, 0, 50);
	G2L["79"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["79"]["Text"] = [[Aimbot]];
	G2L["79"]["Position"] = UDim2.new(0, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Rage.hitbox
	G2L["7a"] = Instance.new("ImageButton", G2L["75"]);
	G2L["7a"]["BorderSizePixel"] = 0;
	G2L["7a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["7a"]["Image"] = [[rbxassetid://18631459897]];
	G2L["7a"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["7a"]["BackgroundTransparency"] = 1;
	G2L["7a"]["Name"] = [[hitbox]];
	G2L["7a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["7a"]["Visible"] = false;
	G2L["7a"]["Position"] = UDim2.new(0.03, 0, 0.36774, 0);

	-- StarterGui.LithiumAlpha.Main.Rage.hitbox.UICorner
	G2L["7b"] = Instance.new("UICorner", G2L["7a"]);
	G2L["7b"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Rage.hitbox.LocalScript
	G2L["7c"] = Instance.new("LocalScript", G2L["7a"]);


	-- StarterGui.LithiumAlpha.Main.Rage.hitbox.TextLabel
	G2L["7d"] = Instance.new("TextLabel", G2L["7a"]);
	G2L["7d"]["TextWrapped"] = true;
	G2L["7d"]["BorderSizePixel"] = 0;
	G2L["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["7d"]["TextSize"] = 28;
	G2L["7d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["7d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["7d"]["BackgroundTransparency"] = 1;
	G2L["7d"]["Size"] = UDim2.new(0, 185, 0, 50);
	G2L["7d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["7d"]["Text"] = [[Hitboxes]];
	G2L["7d"]["Position"] = UDim2.new(0.17949, 0, -0.16216, 0);

	-- StarterGui.LithiumAlpha.Main.Rage.aa
	G2L["7e"] = Instance.new("ImageButton", G2L["75"]);
	G2L["7e"]["BorderSizePixel"] = 0;
	G2L["7e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["7e"]["Image"] = [[rbxassetid://18631459897]];
	G2L["7e"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["7e"]["BackgroundTransparency"] = 1;
	G2L["7e"]["Name"] = [[aa]];
	G2L["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["7e"]["Visible"] = false;
	G2L["7e"]["Position"] = UDim2.new(0.03, 0, 0.50968, 0);

	-- StarterGui.LithiumAlpha.Main.Rage.aa.UICorner
	G2L["7f"] = Instance.new("UICorner", G2L["7e"]);
	G2L["7f"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Rage.aa.LocalScript
	G2L["80"] = Instance.new("LocalScript", G2L["7e"]);


	-- StarterGui.LithiumAlpha.Main.Rage.aa.TextLabel
	G2L["81"] = Instance.new("TextLabel", G2L["7e"]);
	G2L["81"]["TextWrapped"] = true;
	G2L["81"]["BorderSizePixel"] = 0;
	G2L["81"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["81"]["TextSize"] = 28;
	G2L["81"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["81"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["81"]["BackgroundTransparency"] = 1;
	G2L["81"]["Size"] = UDim2.new(0, 175, 0, 50);
	G2L["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["81"]["Text"] = [[SpinBot]];
	G2L["81"]["Position"] = UDim2.new(0.17949, 0, -0.16216, 0);

	-- StarterGui.LithiumAlpha.Main.Info
	G2L["82"] = Instance.new("Folder", G2L["2"]);
	G2L["82"]["Name"] = [[Info]];

	-- StarterGui.LithiumAlpha.Main.Info.Frame
	G2L["83"] = Instance.new("Frame", G2L["82"]);
	G2L["83"]["Visible"] = false;
	G2L["83"]["BorderSizePixel"] = 0;
	G2L["83"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["83"]["Size"] = UDim2.new(0, 482, 0, 239);
	G2L["83"]["Position"] = UDim2.new(0.012, 0, 0.17742, 0);
	G2L["83"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["83"]["BackgroundTransparency"] = 0.99;

	-- StarterGui.LithiumAlpha.Main.Info.Frame.Build
	G2L["84"] = Instance.new("TextLabel", G2L["83"]);
	G2L["84"]["BorderSizePixel"] = 0;
	G2L["84"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["84"]["TextSize"] = 37;
	G2L["84"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["84"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["84"]["BackgroundTransparency"] = 1;
	G2L["84"]["Size"] = UDim2.new(0, 147, 0, 50);
	G2L["84"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["84"]["Text"] = [[Build: #]];
	G2L["84"]["Name"] = [[Build]];
	G2L["84"]["Position"] = UDim2.new(0.01245, 0, -0.0018, 0);

	-- StarterGui.LithiumAlpha.Main.Info.Frame.Build.init
	G2L["85"] = Instance.new("LocalScript", G2L["84"]);
	G2L["85"]["Name"] = [[init]];

	-- StarterGui.LithiumAlpha.Main.Info.Frame.Version
	G2L["86"] = Instance.new("TextLabel", G2L["83"]);
	G2L["86"]["BorderSizePixel"] = 0;
	G2L["86"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["86"]["TextSize"] = 37;
	G2L["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["86"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["86"]["BackgroundTransparency"] = 1;
	G2L["86"]["Size"] = UDim2.new(0, 236, 0, 50);
	G2L["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["86"]["Text"] = [[Version: ]];
	G2L["86"]["Name"] = [[Version]];
	G2L["86"]["Position"] = UDim2.new(0.01382, 0, 0.16368, 0);

	-- StarterGui.LithiumAlpha.Main.Info.Frame.Version.init
	G2L["87"] = Instance.new("LocalScript", G2L["86"]);
	G2L["87"]["Name"] = [[init]];

	-- StarterGui.LithiumAlpha.Main.Info.Frame.Coder
	G2L["88"] = Instance.new("TextLabel", G2L["83"]);
	G2L["88"]["BorderSizePixel"] = 0;
	G2L["88"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["88"]["TextSize"] = 37;
	G2L["88"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["88"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["88"]["BackgroundTransparency"] = 1;
	G2L["88"]["Size"] = UDim2.new(0, 196, 0, 50);
	G2L["88"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["88"]["Text"] = [[Coder: va1dy]];
	G2L["88"]["Name"] = [[Coder]];
	G2L["88"]["Position"] = UDim2.new(0.02834, 0, 0.33104, 0);

	-- StarterGui.LithiumAlpha.Main.Info.Frame.Designercoder
	G2L["89"] = Instance.new("TextLabel", G2L["83"]);
	G2L["89"]["BorderSizePixel"] = 0;
	G2L["89"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["89"]["TextSize"] = 37;
	G2L["89"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["89"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["89"]["BackgroundTransparency"] = 1;
	G2L["89"]["Size"] = UDim2.new(0, 255, 0, 50);
	G2L["89"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["89"]["Text"] = [[Designer/Coder: akaruineko]];
	G2L["89"]["Name"] = [[Designercoder]];
	G2L["89"]["Position"] = UDim2.new(0.22413, 0, 0.49004, 0);

	-- StarterGui.LithiumAlpha.Main.Misc
	G2L["8a"] = Instance.new("Folder", G2L["2"]);
	G2L["8a"]["Name"] = [[Misc]];

	-- StarterGui.LithiumAlpha.Main.Misc.animbreaker
	G2L["8b"] = Instance.new("ImageButton", G2L["8a"]);
	G2L["8b"]["BorderSizePixel"] = 0;
	G2L["8b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["8b"]["Image"] = [[rbxassetid://18693647882]];
	G2L["8b"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["8b"]["BackgroundTransparency"] = 1;
	G2L["8b"]["Name"] = [[animbreaker]];
	G2L["8b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["8b"]["Visible"] = false;
	G2L["8b"]["Position"] = UDim2.new(0.042, 0, 0.21613, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.animbreaker.LocalScript
	G2L["8c"] = Instance.new("LocalScript", G2L["8b"]);


	-- StarterGui.LithiumAlpha.Main.Misc.animbreaker.TextLabel
	G2L["8d"] = Instance.new("TextLabel", G2L["8b"]);
	G2L["8d"]["TextWrapped"] = true;
	G2L["8d"]["BorderSizePixel"] = 0;
	G2L["8d"]["TextScaled"] = true;
	G2L["8d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["8d"]["TextSize"] = 23;
	G2L["8d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["8d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["8d"]["BackgroundTransparency"] = 1;
	G2L["8d"]["Size"] = UDim2.new(0, 160, 0, 30);
	G2L["8d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["8d"]["Text"] = [[Animbreaker]];
	G2L["8d"]["Position"] = UDim2.new(1.07692, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.animbreaker.TextLabel
	G2L["8e"] = Instance.new("TextLabel", G2L["8b"]);
	G2L["8e"]["TextWrapped"] = true;
	G2L["8e"]["BorderSizePixel"] = 0;
	G2L["8e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["8e"]["TextSize"] = 12;
	G2L["8e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
	G2L["8e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["8e"]["BackgroundTransparency"] = 1;
	G2L["8e"]["Size"] = UDim2.new(0, 160, 0, 30);
	G2L["8e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["8e"]["Text"] = [[move or get crashed]];
	G2L["8e"]["Position"] = UDim2.new(1.07692, 0, 0.45946, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.lage
	G2L["8f"] = Instance.new("ImageButton", G2L["8a"]);
	G2L["8f"]["BorderSizePixel"] = 0;
	G2L["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["8f"]["Image"] = [[rbxassetid://18631459897]];
	G2L["8f"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["8f"]["BackgroundTransparency"] = 1;
	G2L["8f"]["Name"] = [[lage]];
	G2L["8f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["8f"]["Visible"] = false;
	G2L["8f"]["Position"] = UDim2.new(0.042, 0, 0.35806, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.lage.LocalScript
	G2L["90"] = Instance.new("LocalScript", G2L["8f"]);


	-- StarterGui.LithiumAlpha.Main.Misc.lage.TextLabel
	G2L["91"] = Instance.new("TextLabel", G2L["8f"]);
	G2L["91"]["TextWrapped"] = true;
	G2L["91"]["BorderSizePixel"] = 0;
	G2L["91"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["91"]["TextSize"] = 23;
	G2L["91"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["91"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["91"]["BackgroundTransparency"] = 1;
	G2L["91"]["Size"] = UDim2.new(0, 117, 0, 30);
	G2L["91"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["91"]["Text"] = [[LagExploit]];
	G2L["91"]["Position"] = UDim2.new(1.23077, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.nfd
	G2L["92"] = Instance.new("ImageButton", G2L["8a"]);
	G2L["92"]["BorderSizePixel"] = 0;
	G2L["92"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["92"]["Image"] = [[rbxassetid://18631459897]];
	G2L["92"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["92"]["BackgroundTransparency"] = 1;
	G2L["92"]["Name"] = [[nfd]];
	G2L["92"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["92"]["Visible"] = false;
	G2L["92"]["Position"] = UDim2.new(0.04, 0, 0.66452, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.nfd.TextLabel
	G2L["93"] = Instance.new("TextLabel", G2L["92"]);
	G2L["93"]["TextWrapped"] = true;
	G2L["93"]["BorderSizePixel"] = 0;
	G2L["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["93"]["TextSize"] = 23;
	G2L["93"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["93"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["93"]["BackgroundTransparency"] = 1;
	G2L["93"]["Size"] = UDim2.new(0, 190, 0, 30);
	G2L["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["93"]["Text"] = [[NoFriendDamage]];
	G2L["93"]["Position"] = UDim2.new(0.98928, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.nfd.LocalScript
	G2L["94"] = Instance.new("LocalScript", G2L["92"]);


	-- StarterGui.LithiumAlpha.Main.Misc.acsinfo
	G2L["95"] = Instance.new("ImageButton", G2L["8a"]);
	G2L["95"]["BorderSizePixel"] = 0;
	G2L["95"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["95"]["Image"] = [[rbxassetid://18693647882]];
	G2L["95"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["95"]["BackgroundTransparency"] = 1;
	G2L["95"]["Name"] = [[acsinfo]];
	G2L["95"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["95"]["Visible"] = false;
	G2L["95"]["Position"] = UDim2.new(0.038, 0, 0.82581, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.acsinfo.TextLabel
	G2L["96"] = Instance.new("TextLabel", G2L["95"]);
	G2L["96"]["TextWrapped"] = true;
	G2L["96"]["BorderSizePixel"] = 0;
	G2L["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["96"]["TextSize"] = 23;
	G2L["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["96"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["96"]["BackgroundTransparency"] = 1;
	G2L["96"]["Size"] = UDim2.new(0, 127, 0, 30);
	G2L["96"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["96"]["Text"] = [[AntiCheats]];
	G2L["96"]["Position"] = UDim2.new(0.98928, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.acsinfo.LocalScript
	G2L["97"] = Instance.new("LocalScript", G2L["95"]);


	-- StarterGui.LithiumAlpha.Main.Misc.Frame
	G2L["98"] = Instance.new("Frame", G2L["8a"]);
	G2L["98"]["Visible"] = false;
	G2L["98"]["BorderSizePixel"] = 0;
	G2L["98"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["98"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["98"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["98"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.Frame.UICorner
	G2L["99"] = Instance.new("UICorner", G2L["98"]);
	G2L["99"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc.Frame.page2
	G2L["9a"] = Instance.new("TextButton", G2L["98"]);
	G2L["9a"]["BorderSizePixel"] = 0;
	G2L["9a"]["TextSize"] = 21;
	G2L["9a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["9a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["9a"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["9a"]["BackgroundTransparency"] = 1;
	G2L["9a"]["Name"] = [[page2]];
	G2L["9a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["9a"]["Text"] = [[>]];
	G2L["9a"]["Position"] = UDim2.new(0.67, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.Console
	G2L["9b"] = Instance.new("ImageButton", G2L["8a"]);
	G2L["9b"]["BorderSizePixel"] = 0;
	G2L["9b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["9b"]["Image"] = [[rbxassetid://18631459897]];
	G2L["9b"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["9b"]["BackgroundTransparency"] = 1;
	G2L["9b"]["Name"] = [[Console]];
	G2L["9b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["9b"]["Visible"] = false;
	G2L["9b"]["Position"] = UDim2.new(0.042, 0, 0.51935, 0);

	-- StarterGui.LithiumAlpha.Main.Misc.Console.LocalScript
	G2L["9c"] = Instance.new("LocalScript", G2L["9b"]);


	-- StarterGui.LithiumAlpha.Main.Misc.Console.TextLabel
	G2L["9d"] = Instance.new("TextLabel", G2L["9b"]);
	G2L["9d"]["TextWrapped"] = true;
	G2L["9d"]["BorderSizePixel"] = 0;
	G2L["9d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["9d"]["TextSize"] = 23;
	G2L["9d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["9d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["9d"]["BackgroundTransparency"] = 1;
	G2L["9d"]["Size"] = UDim2.new(0, 104, 0, 30);
	G2L["9d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["9d"]["Text"] = [[Console]];
	G2L["9d"]["Position"] = UDim2.new(0.98928, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2
	G2L["9e"] = Instance.new("Folder", G2L["2"]);
	G2L["9e"]["Name"] = [[Visual2]];

	-- StarterGui.LithiumAlpha.Main.Visual2.Fog
	G2L["9f"] = Instance.new("ImageButton", G2L["9e"]);
	G2L["9f"]["BorderSizePixel"] = 0;
	G2L["9f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["9f"]["Image"] = [[rbxassetid://18631459897]];
	G2L["9f"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["9f"]["BackgroundTransparency"] = 1;
	G2L["9f"]["Name"] = [[Fog]];
	G2L["9f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["9f"]["Visible"] = false;
	G2L["9f"]["Position"] = UDim2.new(0.03, 0, 0.22903, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.Fog.UICorner
	G2L["a0"] = Instance.new("UICorner", G2L["9f"]);
	G2L["a0"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual2.Fog.LocalScript
	G2L["a1"] = Instance.new("LocalScript", G2L["9f"]);


	-- StarterGui.LithiumAlpha.Main.Visual2.Fog.TextLabel
	G2L["a2"] = Instance.new("TextLabel", G2L["9f"]);
	G2L["a2"]["TextWrapped"] = true;
	G2L["a2"]["BorderSizePixel"] = 0;
	G2L["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["a2"]["TextSize"] = 30;
	G2L["a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["a2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["a2"]["BackgroundTransparency"] = 1;
	G2L["a2"]["Size"] = UDim2.new(0, 200, 0, 50);
	G2L["a2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["a2"]["Text"] = [[Fog]];
	G2L["a2"]["Position"] = UDim2.new(-0.79487, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.Frame
	G2L["a3"] = Instance.new("Frame", G2L["9e"]);
	G2L["a3"]["Visible"] = false;
	G2L["a3"]["BorderSizePixel"] = 0;
	G2L["a3"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["a3"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["a3"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["a3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.Frame.UICorner
	G2L["a4"] = Instance.new("UICorner", G2L["a3"]);
	G2L["a4"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual2.Frame.page1
	G2L["a5"] = Instance.new("TextButton", G2L["a3"]);
	G2L["a5"]["BorderSizePixel"] = 0;
	G2L["a5"]["TextSize"] = 21;
	G2L["a5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["a5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["a5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["a5"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["a5"]["BackgroundTransparency"] = 1;
	G2L["a5"]["Name"] = [[page1]];
	G2L["a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["a5"]["Text"] = [[<]];
	G2L["a5"]["Position"] = UDim2.new(0.06, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.coords
	G2L["a6"] = Instance.new("ImageButton", G2L["9e"]);
	G2L["a6"]["BorderSizePixel"] = 0;
	G2L["a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["a6"]["Image"] = [[rbxassetid://18631459897]];
	G2L["a6"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["a6"]["BackgroundTransparency"] = 1;
	G2L["a6"]["Name"] = [[coords]];
	G2L["a6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["a6"]["Visible"] = false;
	G2L["a6"]["Position"] = UDim2.new(0.03, 0, 0.36774, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.coords.UICorner
	G2L["a7"] = Instance.new("UICorner", G2L["a6"]);
	G2L["a7"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual2.coords.LocalScript
	G2L["a8"] = Instance.new("LocalScript", G2L["a6"]);


	-- StarterGui.LithiumAlpha.Main.Visual2.coords.TextLabel
	G2L["a9"] = Instance.new("TextLabel", G2L["a6"]);
	G2L["a9"]["TextWrapped"] = true;
	G2L["a9"]["BorderSizePixel"] = 0;
	G2L["a9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["a9"]["TextSize"] = 30;
	G2L["a9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["a9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["a9"]["BackgroundTransparency"] = 1;
	G2L["a9"]["Size"] = UDim2.new(0, 205, 0, 50);
	G2L["a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["a9"]["Text"] = [[DisplayCoords]];
	G2L["a9"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.fov
	G2L["aa"] = Instance.new("ImageButton", G2L["9e"]);
	G2L["aa"]["BorderSizePixel"] = 0;
	G2L["aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["aa"]["Image"] = [[rbxassetid://18631459897]];
	G2L["aa"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["aa"]["BackgroundTransparency"] = 1;
	G2L["aa"]["Name"] = [[fov]];
	G2L["aa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["aa"]["Visible"] = false;
	G2L["aa"]["Position"] = UDim2.new(0.03, 0, 0.50645, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.UICorner
	G2L["ab"] = Instance.new("UICorner", G2L["aa"]);
	G2L["ab"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.LocalScript
	G2L["ac"] = Instance.new("LocalScript", G2L["aa"]);


	-- StarterGui.LithiumAlpha.Main.Visual2.fov.TextLabel
	G2L["ad"] = Instance.new("TextLabel", G2L["aa"]);
	G2L["ad"]["TextWrapped"] = true;
	G2L["ad"]["BorderSizePixel"] = 0;
	G2L["ad"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ad"]["TextSize"] = 30;
	G2L["ad"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["ad"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ad"]["BackgroundTransparency"] = 1;
	G2L["ad"]["Size"] = UDim2.new(0, 63, 0, 50);
	G2L["ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["ad"]["Text"] = [[FOV]];
	G2L["ad"]["Position"] = UDim2.new(0.98928, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov
	G2L["ae"] = Instance.new("Frame", G2L["aa"]);
	G2L["ae"]["BorderSizePixel"] = 0;
	G2L["ae"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ae"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["ae"]["Position"] = UDim2.new(2.89008, 0, 0.29712, 0);
	G2L["ae"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["ae"]["Name"] = [[fov]];

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.UICorner
	G2L["af"] = Instance.new("UICorner", G2L["ae"]);
	G2L["af"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.Bar
	G2L["b0"] = Instance.new("Frame", G2L["ae"]);
	G2L["b0"]["BorderSizePixel"] = 0;
	G2L["b0"]["BackgroundColor3"] = Color3.fromRGB(74, 148, 221);
	G2L["b0"]["Size"] = UDim2.new(0, 140, 0, 14);
	G2L["b0"]["Position"] = UDim2.new(0, 0, 0, 0);
	G2L["b0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["b0"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.Bar.UICorner
	G2L["b1"] = Instance.new("UICorner", G2L["b0"]);
	G2L["b1"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.Bar.Thumb
	G2L["b2"] = Instance.new("Frame", G2L["b0"]);
	G2L["b2"]["BorderSizePixel"] = 0;
	G2L["b2"]["BackgroundColor3"] = Color3.fromRGB(23, 112, 171);
	G2L["b2"]["Size"] = UDim2.new(0, 23, 0, 23);
	G2L["b2"]["Position"] = UDim2.new(0.85802, 0, -0.35714, 0);
	G2L["b2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["b2"]["Name"] = [[Thumb]];

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.Bar.Thumb.UICorner
	G2L["b3"] = Instance.new("UICorner", G2L["b2"]);
	G2L["b3"]["CornerRadius"] = UDim.new(1000, 24);

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.Bar.Thumb.SliderManager
	G2L["b4"] = Instance.new("LocalScript", G2L["b2"]);
	G2L["b4"]["Name"] = [[SliderManager]];

	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.Bar.Thumb.percentage
	G2L["b5"] = Instance.new("TextLabel", G2L["b2"]);
	G2L["b5"]["BorderSizePixel"] = 0;
	G2L["b5"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["b5"]["TextTransparency"] = 1;
	G2L["b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["b5"]["TextSize"] = 30;
	G2L["b5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["b5"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
	G2L["b5"]["BackgroundTransparency"] = 1;
	G2L["b5"]["Size"] = UDim2.new(0, 90, 0, 50);
	G2L["b5"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["b5"]["Text"] = [[120]];
	G2L["b5"]["Name"] = [[percentage]];
	G2L["b5"]["Position"] = UDim2.new(-1.52174, 0, -2, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.optimization
	G2L["b6"] = Instance.new("ImageButton", G2L["9e"]);
	G2L["b6"]["BorderSizePixel"] = 0;
	G2L["b6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["b6"]["Image"] = [[rbxassetid://18631459897]];
	G2L["b6"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["b6"]["BackgroundTransparency"] = 1;
	G2L["b6"]["Name"] = [[optimization]];
	G2L["b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["b6"]["Visible"] = false;
	G2L["b6"]["Position"] = UDim2.new(0.028, 0, 0.64516, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.optimization.UICorner
	G2L["b7"] = Instance.new("UICorner", G2L["b6"]);
	G2L["b7"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual2.optimization.LocalScript
	G2L["b8"] = Instance.new("LocalScript", G2L["b6"]);


	-- StarterGui.LithiumAlpha.Main.Visual2.optimization.TextLabel
	G2L["b9"] = Instance.new("TextLabel", G2L["b6"]);
	G2L["b9"]["TextWrapped"] = true;
	G2L["b9"]["BorderSizePixel"] = 0;
	G2L["b9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["b9"]["TextSize"] = 30;
	G2L["b9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["b9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["b9"]["BackgroundTransparency"] = 1;
	G2L["b9"]["Size"] = UDim2.new(0, 185, 0, 50);
	G2L["b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["b9"]["Text"] = [[Optimization]];
	G2L["b9"]["Position"] = UDim2.new(0.98928, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.jumpcircles
	G2L["ba"] = Instance.new("ImageButton", G2L["9e"]);
	G2L["ba"]["BorderSizePixel"] = 0;
	G2L["ba"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ba"]["Image"] = [[rbxassetid://18631459897]];
	G2L["ba"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["ba"]["BackgroundTransparency"] = 1;
	G2L["ba"]["Name"] = [[jumpcircles]];
	G2L["ba"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["ba"]["Visible"] = false;
	G2L["ba"]["Position"] = UDim2.new(0.028, 0, 0.78387, 0);

	-- StarterGui.LithiumAlpha.Main.Visual2.jumpcircles.UICorner
	G2L["bb"] = Instance.new("UICorner", G2L["ba"]);
	G2L["bb"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Visual2.jumpcircles.LocalScript
	G2L["bc"] = Instance.new("LocalScript", G2L["ba"]);


	-- StarterGui.LithiumAlpha.Main.Visual2.jumpcircles.TextLabel
	G2L["bd"] = Instance.new("TextLabel", G2L["ba"]);
	G2L["bd"]["TextWrapped"] = true;
	G2L["bd"]["BorderSizePixel"] = 0;
	G2L["bd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["bd"]["TextSize"] = 30;
	G2L["bd"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["bd"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["bd"]["BackgroundTransparency"] = 1;
	G2L["bd"]["Size"] = UDim2.new(0, 185, 0, 50);
	G2L["bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["bd"]["Text"] = [[JumpCircles]];
	G2L["bd"]["Position"] = UDim2.new(0.98928, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2
	G2L["be"] = Instance.new("Folder", G2L["2"]);
	G2L["be"]["Name"] = [[Movement2]];

	-- StarterGui.LithiumAlpha.Main.Movement2.Frame
	G2L["bf"] = Instance.new("Frame", G2L["be"]);
	G2L["bf"]["Visible"] = false;
	G2L["bf"]["BorderSizePixel"] = 0;
	G2L["bf"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["bf"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["bf"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["bf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.Frame.UICorner
	G2L["c0"] = Instance.new("UICorner", G2L["bf"]);
	G2L["c0"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Movement2.Frame.page1
	G2L["c1"] = Instance.new("TextButton", G2L["bf"]);
	G2L["c1"]["BorderSizePixel"] = 0;
	G2L["c1"]["TextSize"] = 21;
	G2L["c1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["c1"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["c1"]["BackgroundTransparency"] = 1;
	G2L["c1"]["Name"] = [[page1]];
	G2L["c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["c1"]["Text"] = [[<]];
	G2L["c1"]["Position"] = UDim2.new(0.06, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.Frame.page3
	G2L["c2"] = Instance.new("TextButton", G2L["bf"]);
	G2L["c2"]["BorderSizePixel"] = 0;
	G2L["c2"]["TextSize"] = 21;
	G2L["c2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["c2"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["c2"]["BackgroundTransparency"] = 1;
	G2L["c2"]["Name"] = [[page3]];
	G2L["c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["c2"]["Text"] = [[>]];
	G2L["c2"]["Position"] = UDim2.new(0.67, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.noclip
	G2L["c3"] = Instance.new("ImageButton", G2L["be"]);
	G2L["c3"]["BorderSizePixel"] = 0;
	G2L["c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c3"]["Image"] = [[rbxassetid://18631459897]];
	G2L["c3"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["c3"]["BackgroundTransparency"] = 1;
	G2L["c3"]["Name"] = [[noclip]];
	G2L["c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["c3"]["Visible"] = false;
	G2L["c3"]["Position"] = UDim2.new(0.03, 0, 0.19677, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.noclip.LocalScript
	G2L["c4"] = Instance.new("LocalScript", G2L["c3"]);


	-- StarterGui.LithiumAlpha.Main.Movement2.noclip.TextLabel
	G2L["c5"] = Instance.new("TextLabel", G2L["c3"]);
	G2L["c5"]["BorderSizePixel"] = 0;
	G2L["c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c5"]["TextSize"] = 28;
	G2L["c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["c5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c5"]["BackgroundTransparency"] = 1;
	G2L["c5"]["Size"] = UDim2.new(0, 87, 0, 50);
	G2L["c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["c5"]["Text"] = [[Noclip]];
	G2L["c5"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.levitation
	G2L["c6"] = Instance.new("ImageButton", G2L["be"]);
	G2L["c6"]["BorderSizePixel"] = 0;
	G2L["c6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c6"]["Image"] = [[rbxassetid://18631459897]];
	G2L["c6"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["c6"]["BackgroundTransparency"] = 1;
	G2L["c6"]["Name"] = [[levitation]];
	G2L["c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["c6"]["Visible"] = false;
	G2L["c6"]["Position"] = UDim2.new(0.03, 0, 0.33548, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.levitation.LocalScript
	G2L["c7"] = Instance.new("LocalScript", G2L["c6"]);


	-- StarterGui.LithiumAlpha.Main.Movement2.levitation.TextLabel
	G2L["c8"] = Instance.new("TextLabel", G2L["c6"]);
	G2L["c8"]["BorderSizePixel"] = 0;
	G2L["c8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c8"]["TextSize"] = 28;
	G2L["c8"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["c8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c8"]["BackgroundTransparency"] = 1;
	G2L["c8"]["Size"] = UDim2.new(0, 87, 0, 50);
	G2L["c8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["c8"]["Text"] = [[Levitation]];
	G2L["c8"]["Position"] = UDim2.new(1.5641, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.InfiniteJump
	G2L["c9"] = Instance.new("ImageButton", G2L["be"]);
	G2L["c9"]["BorderSizePixel"] = 0;
	G2L["c9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["c9"]["Image"] = [[rbxassetid://18631459897]];
	G2L["c9"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["c9"]["BackgroundTransparency"] = 1;
	G2L["c9"]["Name"] = [[InfiniteJump]];
	G2L["c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["c9"]["Visible"] = false;
	G2L["c9"]["Position"] = UDim2.new(0.03, 0, 0.47419, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.InfiniteJump.LocalScript
	G2L["ca"] = Instance.new("LocalScript", G2L["c9"]);


	-- StarterGui.LithiumAlpha.Main.Movement2.InfiniteJump.TextLabel
	G2L["cb"] = Instance.new("TextLabel", G2L["c9"]);
	G2L["cb"]["BorderSizePixel"] = 0;
	G2L["cb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["cb"]["TextSize"] = 28;
	G2L["cb"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["cb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["cb"]["BackgroundTransparency"] = 1;
	G2L["cb"]["Size"] = UDim2.new(0, 165, 0, 50);
	G2L["cb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["cb"]["Text"] = [[Infinite jump]];
	G2L["cb"]["Position"] = UDim2.new(1.10256, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.nws
	G2L["cc"] = Instance.new("ImageButton", G2L["be"]);
	G2L["cc"]["BorderSizePixel"] = 0;
	G2L["cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["cc"]["Image"] = [[rbxassetid://18631459897]];
	G2L["cc"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["cc"]["BackgroundTransparency"] = 1;
	G2L["cc"]["Name"] = [[nws]];
	G2L["cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["cc"]["Visible"] = false;
	G2L["cc"]["Position"] = UDim2.new(0.03, 0, 0.6129, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.nws.LocalScript
	G2L["cd"] = Instance.new("LocalScript", G2L["cc"]);


	-- StarterGui.LithiumAlpha.Main.Movement2.nws.TextLabel
	G2L["ce"] = Instance.new("TextLabel", G2L["cc"]);
	G2L["ce"]["BorderSizePixel"] = 0;
	G2L["ce"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ce"]["TextSize"] = 28;
	G2L["ce"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["ce"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ce"]["BackgroundTransparency"] = 1;
	G2L["ce"]["Size"] = UDim2.new(0, 241, 0, 50);
	G2L["ce"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["ce"]["Text"] = [[NoWaterSwimming]];
	G2L["ce"]["Position"] = UDim2.new(1.10256, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity
	G2L["cf"] = Instance.new("ImageButton", G2L["be"]);
	G2L["cf"]["BorderSizePixel"] = 0;
	G2L["cf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["cf"]["Image"] = [[rbxassetid://18631459897]];
	G2L["cf"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["cf"]["BackgroundTransparency"] = 1;
	G2L["cf"]["Name"] = [[gravity]];
	G2L["cf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["cf"]["Visible"] = false;
	G2L["cf"]["Position"] = UDim2.new(0.03, 0, 0.75161, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.LocalScript
	G2L["d0"] = Instance.new("LocalScript", G2L["cf"]);


	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.TextLabel
	G2L["d1"] = Instance.new("TextLabel", G2L["cf"]);
	G2L["d1"]["BorderSizePixel"] = 0;
	G2L["d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["d1"]["TextSize"] = 28;
	G2L["d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["d1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["d1"]["BackgroundTransparency"] = 1;
	G2L["d1"]["Size"] = UDim2.new(0, 95, 0, 50);
	G2L["d1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["d1"]["Text"] = [[Gravity]];
	G2L["d1"]["Position"] = UDim2.new(1.10256, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed
	G2L["d2"] = Instance.new("Frame", G2L["cf"]);
	G2L["d2"]["BorderSizePixel"] = 0;
	G2L["d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["d2"]["Size"] = UDim2.new(0, 185, 0, 14);
	G2L["d2"]["Position"] = UDim2.new(3.81315, 0, 0.29712, 0);
	G2L["d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["d2"]["Name"] = [[Speed]];

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.UICorner
	G2L["d3"] = Instance.new("UICorner", G2L["d2"]);
	G2L["d3"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.Bar
	G2L["d4"] = Instance.new("Frame", G2L["d2"]);
	G2L["d4"]["BorderSizePixel"] = 0;
	G2L["d4"]["BackgroundColor3"] = Color3.fromRGB(74, 148, 221);
	G2L["d4"]["Size"] = UDim2.new(0, 185, 0, 14);
	G2L["d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["d4"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.Bar.UICorner
	G2L["d5"] = Instance.new("UICorner", G2L["d4"]);
	G2L["d5"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.Bar.Thumb
	G2L["d6"] = Instance.new("Frame", G2L["d4"]);
	G2L["d6"]["BorderSizePixel"] = 0;
	G2L["d6"]["BackgroundColor3"] = Color3.fromRGB(23, 112, 171);
	G2L["d6"]["Size"] = UDim2.new(0, 23, 0, 23);
	G2L["d6"]["Position"] = UDim2.new(0.85802, 0, -0.35714, 0);
	G2L["d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["d6"]["Name"] = [[Thumb]];

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.Bar.Thumb.UICorner
	G2L["d7"] = Instance.new("UICorner", G2L["d6"]);
	G2L["d7"]["CornerRadius"] = UDim.new(1000, 24);

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.Bar.Thumb.SliderManager
	G2L["d8"] = Instance.new("LocalScript", G2L["d6"]);
	G2L["d8"]["Name"] = [[SliderManager]];

	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.Bar.Thumb.percentage
	G2L["d9"] = Instance.new("TextLabel", G2L["d6"]);
	G2L["d9"]["BorderSizePixel"] = 0;
	G2L["d9"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["d9"]["TextTransparency"] = 1;
	G2L["d9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["d9"]["TextSize"] = 30;
	G2L["d9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["d9"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
	G2L["d9"]["BackgroundTransparency"] = 1;
	G2L["d9"]["Size"] = UDim2.new(0, 90, 0, 50);
	G2L["d9"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["d9"]["Text"] = [[1000]];
	G2L["d9"]["Name"] = [[percentage]];
	G2L["d9"]["Position"] = UDim2.new(-1.52174, 0, -2, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3
	G2L["da"] = Instance.new("Folder", G2L["2"]);
	G2L["da"]["Name"] = [[Movement3]];

	-- StarterGui.LithiumAlpha.Main.Movement3.Frame
	G2L["db"] = Instance.new("Frame", G2L["da"]);
	G2L["db"]["Visible"] = false;
	G2L["db"]["BorderSizePixel"] = 0;
	G2L["db"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["db"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["db"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.Frame.UICorner
	G2L["dc"] = Instance.new("UICorner", G2L["db"]);
	G2L["dc"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Movement3.Frame.page2
	G2L["dd"] = Instance.new("TextButton", G2L["db"]);
	G2L["dd"]["BorderSizePixel"] = 0;
	G2L["dd"]["TextSize"] = 21;
	G2L["dd"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["dd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["dd"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["dd"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["dd"]["BackgroundTransparency"] = 1;
	G2L["dd"]["Name"] = [[page2]];
	G2L["dd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["dd"]["Text"] = [[<]];
	G2L["dd"]["Position"] = UDim2.new(0.06, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.tptoplayer
	G2L["de"] = Instance.new("ImageButton", G2L["da"]);
	G2L["de"]["BorderSizePixel"] = 0;
	G2L["de"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["de"]["Image"] = [[rbxassetid://18693647882]];
	G2L["de"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["de"]["BackgroundTransparency"] = 1;
	G2L["de"]["Name"] = [[tptoplayer]];
	G2L["de"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["de"]["Visible"] = false;
	G2L["de"]["Position"] = UDim2.new(0.03, 0, 0.19677, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.tptoplayer.LocalScript
	G2L["df"] = Instance.new("LocalScript", G2L["de"]);


	-- StarterGui.LithiumAlpha.Main.Movement3.tptoplayer.TextLabel
	G2L["e0"] = Instance.new("TextLabel", G2L["de"]);
	G2L["e0"]["BorderSizePixel"] = 0;
	G2L["e0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["e0"]["TextSize"] = 28;
	G2L["e0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["e0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["e0"]["BackgroundTransparency"] = 1;
	G2L["e0"]["Size"] = UDim2.new(0, 145, 0, 50);
	G2L["e0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["e0"]["Text"] = [[TpToPlayer]];
	G2L["e0"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.tptoplayer.TextBox
	G2L["e1"] = Instance.new("TextBox", G2L["de"]);
	G2L["e1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["e1"]["TextWrapped"] = true;
	G2L["e1"]["TextSize"] = 20;
	G2L["e1"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["e1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
	G2L["e1"]["Size"] = UDim2.new(0, 152, 0, 31);
	G2L["e1"]["Position"] = UDim2.new(4.79487, 0, 0.08108, 0);
	G2L["e1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["e1"]["Text"] = [[AkaruiNeko]];

	-- StarterGui.LithiumAlpha.Main.Movement3.tptoplayer.TextBox.UICorner
	G2L["e2"] = Instance.new("UICorner", G2L["e1"]);


	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk
	G2L["e3"] = Instance.new("ImageButton", G2L["da"]);
	G2L["e3"]["BorderSizePixel"] = 0;
	G2L["e3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["e3"]["Image"] = [[rbxassetid://18631459897]];
	G2L["e3"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["e3"]["BackgroundTransparency"] = 1;
	G2L["e3"]["Name"] = [[terrainwalk]];
	G2L["e3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["e3"]["Visible"] = false;
	G2L["e3"]["Position"] = UDim2.new(0.03, 0, 0.33548, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.LocalScript
	G2L["e4"] = Instance.new("LocalScript", G2L["e3"]);


	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.TextLabel
	G2L["e5"] = Instance.new("TextLabel", G2L["e3"]);
	G2L["e5"]["BorderSizePixel"] = 0;
	G2L["e5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["e5"]["TextSize"] = 28;
	G2L["e5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["e5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["e5"]["BackgroundTransparency"] = 1;
	G2L["e5"]["Size"] = UDim2.new(0, 184, 0, 50);
	G2L["e5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["e5"]["Text"] = [[TerrainWalker]];
	G2L["e5"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius
	G2L["e6"] = Instance.new("Frame", G2L["e3"]);
	G2L["e6"]["BorderSizePixel"] = 0;
	G2L["e6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["e6"]["Size"] = UDim2.new(0, 165, 0, 14);
	G2L["e6"]["Position"] = UDim2.new(6.12085, 0, 0.29712, 0);
	G2L["e6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["e6"]["Name"] = [[Radius]];

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.UICorner
	G2L["e7"] = Instance.new("UICorner", G2L["e6"]);
	G2L["e7"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.Bar
	G2L["e8"] = Instance.new("Frame", G2L["e6"]);
	G2L["e8"]["BorderSizePixel"] = 0;
	G2L["e8"]["BackgroundColor3"] = Color3.fromRGB(74, 148, 221);
	G2L["e8"]["Size"] = UDim2.new(0, 165, 0, 14);
	G2L["e8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["e8"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.Bar.UICorner
	G2L["e9"] = Instance.new("UICorner", G2L["e8"]);
	G2L["e9"]["CornerRadius"] = UDim.new(1, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.Bar.Thumb
	G2L["ea"] = Instance.new("Frame", G2L["e8"]);
	G2L["ea"]["BorderSizePixel"] = 0;
	G2L["ea"]["BackgroundColor3"] = Color3.fromRGB(23, 112, 171);
	G2L["ea"]["Size"] = UDim2.new(0, 23, 0, 23);
	G2L["ea"]["Position"] = UDim2.new(0.85802, 0, -0.35714, 0);
	G2L["ea"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["ea"]["Name"] = [[Thumb]];

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.Bar.Thumb.UICorner
	G2L["eb"] = Instance.new("UICorner", G2L["ea"]);
	G2L["eb"]["CornerRadius"] = UDim.new(1000, 24);

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.Bar.Thumb.SliderManager
	G2L["ec"] = Instance.new("LocalScript", G2L["ea"]);
	G2L["ec"]["Name"] = [[SliderManager]];

	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.Bar.Thumb.percentage
	G2L["ed"] = Instance.new("TextLabel", G2L["ea"]);
	G2L["ed"]["BorderSizePixel"] = 0;
	G2L["ed"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ed"]["TextTransparency"] = 1;
	G2L["ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ed"]["TextSize"] = 30;
	G2L["ed"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["ed"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
	G2L["ed"]["BackgroundTransparency"] = 1;
	G2L["ed"]["Size"] = UDim2.new(0, 90, 0, 50);
	G2L["ed"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ed"]["Text"] = [[15]];
	G2L["ed"]["Name"] = [[percentage]];
	G2L["ed"]["Position"] = UDim2.new(-1.52174, 0, -2, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.platform
	G2L["ee"] = Instance.new("ImageButton", G2L["da"]);
	G2L["ee"]["BorderSizePixel"] = 0;
	G2L["ee"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["ee"]["Image"] = [[rbxassetid://18631459897]];
	G2L["ee"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["ee"]["BackgroundTransparency"] = 1;
	G2L["ee"]["Name"] = [[platform]];
	G2L["ee"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["ee"]["Visible"] = false;
	G2L["ee"]["Position"] = UDim2.new(0.03, 0, 0.47419, 0);

	-- StarterGui.LithiumAlpha.Main.Movement3.platform.LocalScript
	G2L["ef"] = Instance.new("LocalScript", G2L["ee"]);


	-- StarterGui.LithiumAlpha.Main.Movement3.platform.TextLabel
	G2L["f0"] = Instance.new("TextLabel", G2L["ee"]);
	G2L["f0"]["BorderSizePixel"] = 0;
	G2L["f0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f0"]["TextSize"] = 28;
	G2L["f0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["f0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f0"]["BackgroundTransparency"] = 1;
	G2L["f0"]["Size"] = UDim2.new(0, 116, 0, 50);
	G2L["f0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["f0"]["Text"] = [[Platform]];
	G2L["f0"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.LoadGlobal
	G2L["f1"] = Instance.new("LocalScript", G2L["2"]);
	G2L["f1"]["Name"] = [[LoadGlobal]];

	-- StarterGui.LithiumAlpha.Main.Misc2
	G2L["f2"] = Instance.new("Folder", G2L["2"]);
	G2L["f2"]["Name"] = [[Misc2]];

	-- StarterGui.LithiumAlpha.Main.Misc2.Frame
	G2L["f3"] = Instance.new("Frame", G2L["f2"]);
	G2L["f3"]["Visible"] = false;
	G2L["f3"]["BorderSizePixel"] = 0;
	G2L["f3"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["f3"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["f3"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["f3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.Frame.UICorner
	G2L["f4"] = Instance.new("UICorner", G2L["f3"]);
	G2L["f4"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc2.Frame.page1
	G2L["f5"] = Instance.new("TextButton", G2L["f3"]);
	G2L["f5"]["BorderSizePixel"] = 0;
	G2L["f5"]["TextSize"] = 21;
	G2L["f5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["f5"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["f5"]["BackgroundTransparency"] = 1;
	G2L["f5"]["Name"] = [[page1]];
	G2L["f5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["f5"]["Text"] = [[<]];
	G2L["f5"]["Position"] = UDim2.new(0.06, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.Frame.page3
	G2L["f6"] = Instance.new("TextButton", G2L["f3"]);
	G2L["f6"]["BorderSizePixel"] = 0;
	G2L["f6"]["TextSize"] = 21;
	G2L["f6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f6"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["f6"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["f6"]["BackgroundTransparency"] = 1;
	G2L["f6"]["Name"] = [[page3]];
	G2L["f6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["f6"]["Text"] = [[>]];
	G2L["f6"]["Position"] = UDim2.new(0.65, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.anti-kick
	G2L["f7"] = Instance.new("ImageButton", G2L["f2"]);
	G2L["f7"]["BorderSizePixel"] = 0;
	G2L["f7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f7"]["Image"] = [[rbxassetid://18693647882]];
	G2L["f7"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["f7"]["BackgroundTransparency"] = 1;
	G2L["f7"]["Name"] = [[anti-kick]];
	G2L["f7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["f7"]["Visible"] = false;
	G2L["f7"]["Position"] = UDim2.new(0.042, 0, 0.2129, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.anti-kick.LocalScript
	G2L["f8"] = Instance.new("LocalScript", G2L["f7"]);


	-- StarterGui.LithiumAlpha.Main.Misc2.anti-kick.TextLabel
	G2L["f9"] = Instance.new("TextLabel", G2L["f7"]);
	G2L["f9"]["TextWrapped"] = true;
	G2L["f9"]["BorderSizePixel"] = 0;
	G2L["f9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f9"]["TextSize"] = 23;
	G2L["f9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["f9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["f9"]["BackgroundTransparency"] = 1;
	G2L["f9"]["Size"] = UDim2.new(0, 104, 0, 30);
	G2L["f9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["f9"]["Text"] = [[Anti-Kick]];
	G2L["f9"]["Position"] = UDim2.new(0.98928, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.anti-teleport
	G2L["fa"] = Instance.new("ImageButton", G2L["f2"]);
	G2L["fa"]["BorderSizePixel"] = 0;
	G2L["fa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["fa"]["Image"] = [[rbxassetid://18693647882]];
	G2L["fa"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["fa"]["BackgroundTransparency"] = 1;
	G2L["fa"]["Name"] = [[anti-teleport]];
	G2L["fa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["fa"]["Visible"] = false;
	G2L["fa"]["Position"] = UDim2.new(0.042, 0, 0.35806, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.anti-teleport.LocalScript
	G2L["fb"] = Instance.new("LocalScript", G2L["fa"]);


	-- StarterGui.LithiumAlpha.Main.Misc2.anti-teleport.TextLabel
	G2L["fc"] = Instance.new("TextLabel", G2L["fa"]);
	G2L["fc"]["TextWrapped"] = true;
	G2L["fc"]["BorderSizePixel"] = 0;
	G2L["fc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["fc"]["TextSize"] = 23;
	G2L["fc"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["fc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["fc"]["BackgroundTransparency"] = 1;
	G2L["fc"]["Size"] = UDim2.new(0, 145, 0, 30);
	G2L["fc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["fc"]["Text"] = [[Anti-Teleport]];
	G2L["fc"]["Position"] = UDim2.new(0.98928, 0, 0.08108, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.autorotate
	G2L["fd"] = Instance.new("ImageButton", G2L["f2"]);
	G2L["fd"]["BorderSizePixel"] = 0;
	G2L["fd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["fd"]["Image"] = [[rbxassetid://18631459897]];
	G2L["fd"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["fd"]["BackgroundTransparency"] = 1;
	G2L["fd"]["Name"] = [[autorotate]];
	G2L["fd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["fd"]["Visible"] = false;
	G2L["fd"]["Position"] = UDim2.new(0.042, 0, 0.51935, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.autorotate.UICorner
	G2L["fe"] = Instance.new("UICorner", G2L["fd"]);
	G2L["fe"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc2.autorotate.LocalScript
	G2L["ff"] = Instance.new("LocalScript", G2L["fd"]);


	-- StarterGui.LithiumAlpha.Main.Misc2.autorotate.TextLabel
	G2L["100"] = Instance.new("TextLabel", G2L["fd"]);
	G2L["100"]["TextWrapped"] = true;
	G2L["100"]["BorderSizePixel"] = 0;
	G2L["100"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["100"]["TextSize"] = 30;
	G2L["100"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["100"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["100"]["BackgroundTransparency"] = 1;
	G2L["100"]["Size"] = UDim2.new(0, 195, 0, 50);
	G2L["100"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["100"]["Text"] = [[NoAutoRotate]];
	G2L["100"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.sit
	G2L["101"] = Instance.new("ImageButton", G2L["f2"]);
	G2L["101"]["BorderSizePixel"] = 0;
	G2L["101"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["101"]["Image"] = [[rbxassetid://18631459897]];
	G2L["101"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["101"]["BackgroundTransparency"] = 1;
	G2L["101"]["Name"] = [[sit]];
	G2L["101"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["101"]["Visible"] = false;
	G2L["101"]["Position"] = UDim2.new(0.042, 0, 0.65806, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.sit.UICorner
	G2L["102"] = Instance.new("UICorner", G2L["101"]);
	G2L["102"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc2.sit.LocalScript
	G2L["103"] = Instance.new("LocalScript", G2L["101"]);


	-- StarterGui.LithiumAlpha.Main.Misc2.sit.TextLabel
	G2L["104"] = Instance.new("TextLabel", G2L["101"]);
	G2L["104"]["TextWrapped"] = true;
	G2L["104"]["BorderSizePixel"] = 0;
	G2L["104"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["104"]["TextSize"] = 30;
	G2L["104"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["104"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["104"]["BackgroundTransparency"] = 1;
	G2L["104"]["Size"] = UDim2.new(0, 41, 0, 50);
	G2L["104"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["104"]["Text"] = [[Sit]];
	G2L["104"]["Position"] = UDim2.new(0.98928, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.antiafk
	G2L["105"] = Instance.new("ImageButton", G2L["f2"]);
	G2L["105"]["BorderSizePixel"] = 0;
	G2L["105"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["105"]["Image"] = [[rbxassetid://18631459897]];
	G2L["105"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["105"]["BackgroundTransparency"] = 1;
	G2L["105"]["Name"] = [[antiafk]];
	G2L["105"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["105"]["Visible"] = false;
	G2L["105"]["Position"] = UDim2.new(0.04, 0, 0.79677, 0);

	-- StarterGui.LithiumAlpha.Main.Misc2.antiafk.UICorner
	G2L["106"] = Instance.new("UICorner", G2L["105"]);
	G2L["106"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc2.antiafk.LocalScript
	G2L["107"] = Instance.new("LocalScript", G2L["105"]);


	-- StarterGui.LithiumAlpha.Main.Misc2.antiafk.TextLabel
	G2L["108"] = Instance.new("TextLabel", G2L["105"]);
	G2L["108"]["TextWrapped"] = true;
	G2L["108"]["BorderSizePixel"] = 0;
	G2L["108"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["108"]["TextSize"] = 30;
	G2L["108"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["108"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["108"]["BackgroundTransparency"] = 1;
	G2L["108"]["Size"] = UDim2.new(0, 115, 0, 50);
	G2L["108"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["108"]["Text"] = [[Anti-Afk]];
	G2L["108"]["Position"] = UDim2.new(0.98928, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3
	G2L["109"] = Instance.new("Folder", G2L["2"]);
	G2L["109"]["Name"] = [[Misc3]];

	-- StarterGui.LithiumAlpha.Main.Misc3.Frame
	G2L["10a"] = Instance.new("Frame", G2L["109"]);
	G2L["10a"]["BorderSizePixel"] = 0;
	G2L["10a"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["10a"]["Size"] = UDim2.new(0, 100, 0, 28);
	G2L["10a"]["Position"] = UDim2.new(0.398, 0, 0.90968, 0);
	G2L["10a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3.Frame.UICorner
	G2L["10b"] = Instance.new("UICorner", G2L["10a"]);
	G2L["10b"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc3.Frame.page1
	G2L["10c"] = Instance.new("TextButton", G2L["10a"]);
	G2L["10c"]["BorderSizePixel"] = 0;
	G2L["10c"]["TextSize"] = 21;
	G2L["10c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["10c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["10c"]["Size"] = UDim2.new(0, 33, 0, 28);
	G2L["10c"]["BackgroundTransparency"] = 1;
	G2L["10c"]["Name"] = [[page1]];
	G2L["10c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["10c"]["Text"] = [[<]];
	G2L["10c"]["Position"] = UDim2.new(0.04, 0, 0, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3.nps
	G2L["10d"] = Instance.new("ImageButton", G2L["109"]);
	G2L["10d"]["BorderSizePixel"] = 0;
	G2L["10d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["10d"]["Image"] = [[rbxassetid://18631459897]];
	G2L["10d"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["10d"]["BackgroundTransparency"] = 1;
	G2L["10d"]["Name"] = [[nps]];
	G2L["10d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["10d"]["Position"] = UDim2.new(0.044, 0, 0.2, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3.nps.UICorner
	G2L["10e"] = Instance.new("UICorner", G2L["10d"]);
	G2L["10e"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc3.nps.LocalScript
	G2L["10f"] = Instance.new("LocalScript", G2L["10d"]);


	-- StarterGui.LithiumAlpha.Main.Misc3.nps.TextLabel
	G2L["110"] = Instance.new("TextLabel", G2L["10d"]);
	G2L["110"]["TextWrapped"] = true;
	G2L["110"]["BorderSizePixel"] = 0;
	G2L["110"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["110"]["TextSize"] = 30;
	G2L["110"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["110"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["110"]["BackgroundTransparency"] = 1;
	G2L["110"]["Size"] = UDim2.new(0, 237, 0, 50);
	G2L["110"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["110"]["Text"] = [[NoPlatformStand]];
	G2L["110"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3.autorotate
	G2L["111"] = Instance.new("ImageButton", G2L["109"]);
	G2L["111"]["BorderSizePixel"] = 0;
	G2L["111"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["111"]["Image"] = [[rbxassetid://18631459897]];
	G2L["111"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["111"]["BackgroundTransparency"] = 1;
	G2L["111"]["Name"] = [[autorotate]];
	G2L["111"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["111"]["Position"] = UDim2.new(0.044, 0, 0.33871, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3.autorotate.UICorner
	G2L["112"] = Instance.new("UICorner", G2L["111"]);
	G2L["112"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc3.autorotate.LocalScript
	G2L["113"] = Instance.new("LocalScript", G2L["111"]);


	-- StarterGui.LithiumAlpha.Main.Misc3.autorotate.TextLabel
	G2L["114"] = Instance.new("TextLabel", G2L["111"]);
	G2L["114"]["TextWrapped"] = true;
	G2L["114"]["BorderSizePixel"] = 0;
	G2L["114"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["114"]["TextSize"] = 30;
	G2L["114"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["114"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["114"]["BackgroundTransparency"] = 1;
	G2L["114"]["Size"] = UDim2.new(0, 78, 0, 50);
	G2L["114"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["114"]["Text"] = [[NoSit]];
	G2L["114"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3.noadguianymore
	G2L["115"] = Instance.new("ImageButton", G2L["109"]);
	G2L["115"]["BorderSizePixel"] = 0;
	G2L["115"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["115"]["Image"] = [[rbxassetid://18631459897]];
	G2L["115"]["Size"] = UDim2.new(0, 39, 0, 37);
	G2L["115"]["BackgroundTransparency"] = 1;
	G2L["115"]["Name"] = [[noadguianymore]];
	G2L["115"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["115"]["Position"] = UDim2.new(0.044, 0, 0.47742, 0);

	-- StarterGui.LithiumAlpha.Main.Misc3.noadguianymore.UICorner
	G2L["116"] = Instance.new("UICorner", G2L["115"]);
	G2L["116"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Main.Misc3.noadguianymore.LocalScript
	G2L["117"] = Instance.new("LocalScript", G2L["115"]);


	-- StarterGui.LithiumAlpha.Main.Misc3.noadguianymore.TextLabel
	G2L["118"] = Instance.new("TextLabel", G2L["115"]);
	G2L["118"]["TextWrapped"] = true;
	G2L["118"]["BorderSizePixel"] = 0;
	G2L["118"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["118"]["TextSize"] = 30;
	G2L["118"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["118"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["118"]["BackgroundTransparency"] = 1;
	G2L["118"]["Size"] = UDim2.new(0, 125, 0, 50);
	G2L["118"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["118"]["Text"] = [[NoAdGui]];
	G2L["118"]["Position"] = UDim2.new(1, 0, -0.18919, 0);

	-- StarterGui.LithiumAlpha.LithiumManager
	G2L["119"] = Instance.new("LocalScript", G2L["1"]);
	G2L["119"]["Name"] = [[LithiumManager]];

	-- StarterGui.LithiumAlpha.PageManager
	G2L["11a"] = Instance.new("LocalScript", G2L["1"]);
	G2L["11a"]["Name"] = [[PageManager]];

	-- StarterGui.LithiumAlpha.NotificationManager
	G2L["11b"] = Instance.new("ModuleScript", G2L["1"]);
	G2L["11b"]["Name"] = [[NotificationManager]];

	-- StarterGui.LithiumAlpha.NotificationFrame
	G2L["11c"] = Instance.new("Frame", G2L["1"]);
	G2L["11c"]["Visible"] = false;
	G2L["11c"]["BorderSizePixel"] = 0;
	G2L["11c"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["11c"]["Size"] = UDim2.new(0.3, 0, 0.1, 0);
	G2L["11c"]["Position"] = UDim2.new(0.35, 0, 0, 0);
	G2L["11c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["11c"]["Name"] = [[NotificationFrame]];

	-- StarterGui.LithiumAlpha.NotificationFrame.Icon
	G2L["11d"] = Instance.new("ImageLabel", G2L["11c"]);
	G2L["11d"]["BorderSizePixel"] = 0;
	G2L["11d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["11d"]["ScaleType"] = Enum.ScaleType.Crop;
	G2L["11d"]["Image"] = [[rbxasset://textures/ui/GuiImagePlaceholder.png]];
	G2L["11d"]["Size"] = UDim2.new(0.15417, 0, 0.8, 0);
	G2L["11d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["11d"]["BackgroundTransparency"] = 1;
	G2L["11d"]["Name"] = [[Icon]];
	G2L["11d"]["Position"] = UDim2.new(0.06856, 0, 0.0904, 0);

	-- StarterGui.LithiumAlpha.NotificationFrame.MessageLabel
	G2L["11e"] = Instance.new("TextLabel", G2L["11c"]);
	G2L["11e"]["TextWrapped"] = true;
	G2L["11e"]["BorderSizePixel"] = 0;
	G2L["11e"]["TextScaled"] = true;
	G2L["11e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["11e"]["TextSize"] = 14;
	G2L["11e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
	G2L["11e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["11e"]["BackgroundTransparency"] = 1;
	G2L["11e"]["Size"] = UDim2.new(0.7, 0, 0.8, 0);
	G2L["11e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["11e"]["Text"] = [[Notification Message]];
	G2L["11e"]["Name"] = [[MessageLabel]];
	G2L["11e"]["Position"] = UDim2.new(0.25, 0, 0.1, 0);

	-- StarterGui.LithiumAlpha.NotificationFrame.UICorner
	G2L["11f"] = Instance.new("UICorner", G2L["11c"]);


	-- StarterGui.LithiumAlpha.Constants
	G2L["120"] = Instance.new("ModuleScript", G2L["1"]);
	G2L["120"]["Name"] = [[Constants]];

	-- StarterGui.LithiumAlpha.WaterMarks
	G2L["121"] = Instance.new("Frame", G2L["1"]);
	G2L["121"]["BorderSizePixel"] = 0;
	G2L["121"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["121"]["Size"] = UDim2.new(0, 351, 0, 30);
	G2L["121"]["Position"] = UDim2.new(0.35066, 0, 0.01262, 0);
	G2L["121"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["121"]["Name"] = [[WaterMarks]];
	G2L["121"]["BackgroundTransparency"] = 1;

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2
	G2L["122"] = Instance.new("Frame", G2L["121"]);
	G2L["122"]["Visible"] = false;
	G2L["122"]["BorderSizePixel"] = 0;
	G2L["122"]["BackgroundColor3"] = Color3.fromRGB(86, 171, 255);
	G2L["122"]["Size"] = UDim2.new(0, 351, 0, 30);
	G2L["122"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["122"]["Name"] = [[watermark2]];

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.nickname
	G2L["123"] = Instance.new("TextLabel", G2L["122"]);
	G2L["123"]["TextWrapped"] = true;
	G2L["123"]["BorderSizePixel"] = 0;
	G2L["123"]["TextScaled"] = true;
	G2L["123"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["123"]["TextSize"] = 100;
	G2L["123"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["123"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["123"]["BackgroundTransparency"] = 1;
	G2L["123"]["Size"] = UDim2.new(0, 115, 0, 30);
	G2L["123"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["123"]["Text"] = [[nickname]];
	G2L["123"]["Name"] = [[nickname]];
	G2L["123"]["Position"] = UDim2.new(0.25438, 0, -0.03333, 0);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.nickname.init
	G2L["124"] = Instance.new("LocalScript", G2L["123"]);
	G2L["124"]["Name"] = [[init]];

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.UICorner
	G2L["125"] = Instance.new("UICorner", G2L["122"]);
	G2L["125"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.UIGradient
	G2L["126"] = Instance.new("UIGradient", G2L["122"]);
	G2L["126"]["Rotation"] = 40;
	G2L["126"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(86, 171, 255)),ColorSequenceKeypoint.new(0.474, Color3.fromRGB(86, 171, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.Logo
	G2L["127"] = Instance.new("ImageLabel", G2L["122"]);
	G2L["127"]["Active"] = true;
	G2L["127"]["BorderSizePixel"] = 0;
	G2L["127"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["127"]["Image"] = [[rbxassetid://18619803784]];
	G2L["127"]["Size"] = UDim2.new(0, 102, 0, 91);
	G2L["127"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["127"]["BackgroundTransparency"] = 1;
	G2L["127"]["Selectable"] = true;
	G2L["127"]["Name"] = [[Logo]];
	G2L["127"]["Position"] = UDim2.new(-0.04287, 0, -1.03333, 0);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.Logo.UICorner
	G2L["128"] = Instance.new("UICorner", G2L["127"]);
	G2L["128"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.fps
	G2L["129"] = Instance.new("TextLabel", G2L["122"]);
	G2L["129"]["TextWrapped"] = true;
	G2L["129"]["BorderSizePixel"] = 0;
	G2L["129"]["TextScaled"] = true;
	G2L["129"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["129"]["TextSize"] = 100;
	G2L["129"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["129"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["129"]["BackgroundTransparency"] = 1;
	G2L["129"]["Size"] = UDim2.new(0, 65, 0, 30);
	G2L["129"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["129"]["Text"] = [[Fps:]];
	G2L["129"]["Name"] = [[fps]];
	G2L["129"]["Position"] = UDim2.new(0.61906, 0, 0, 0);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.fpsvalue
	G2L["12a"] = Instance.new("TextLabel", G2L["122"]);
	G2L["12a"]["TextWrapped"] = true;
	G2L["12a"]["BorderSizePixel"] = 0;
	G2L["12a"]["TextScaled"] = true;
	G2L["12a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12a"]["TextSize"] = 100;
	G2L["12a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["12a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12a"]["BackgroundTransparency"] = 1;
	G2L["12a"]["Size"] = UDim2.new(0, 62, 0, 30);
	G2L["12a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["12a"]["Text"] = [[fps]];
	G2L["12a"]["Name"] = [[fpsvalue]];
	G2L["12a"]["Position"] = UDim2.new(0.79569, 0, 0, 0);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.fpsvalue.init
	G2L["12b"] = Instance.new("LocalScript", G2L["12a"]);
	G2L["12b"]["Name"] = [[init]];

	-- StarterGui.LithiumAlpha.WaterMarks.watermark1
	G2L["12c"] = Instance.new("Frame", G2L["121"]);
	G2L["12c"]["Visible"] = false;
	G2L["12c"]["BorderSizePixel"] = 0;
	G2L["12c"]["BackgroundColor3"] = Color3.fromRGB(86, 171, 255);
	G2L["12c"]["Size"] = UDim2.new(0, 276, 0, 30);
	G2L["12c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["12c"]["Name"] = [[watermark1]];

	-- StarterGui.LithiumAlpha.WaterMarks.watermark1.cheatname
	G2L["12d"] = Instance.new("TextLabel", G2L["12c"]);
	G2L["12d"]["BorderSizePixel"] = 0;
	G2L["12d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12d"]["TextSize"] = 25;
	G2L["12d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["12d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12d"]["BackgroundTransparency"] = 1;
	G2L["12d"]["Size"] = UDim2.new(0, 90, 0, 30);
	G2L["12d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["12d"]["Text"] = [[Lithium]];
	G2L["12d"]["Name"] = [[cheatname]];
	G2L["12d"]["Position"] = UDim2.new(0.01, 0, 0, 0);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark1.alpha
	G2L["12e"] = Instance.new("TextLabel", G2L["12c"]);
	G2L["12e"]["TextWrapped"] = true;
	G2L["12e"]["BorderSizePixel"] = 0;
	G2L["12e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12e"]["TextSize"] = 17;
	G2L["12e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["12e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12e"]["BackgroundTransparency"] = 1;
	G2L["12e"]["Size"] = UDim2.new(0, 64, 0, 19);
	G2L["12e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["12e"]["Text"] = [[alpha]];
	G2L["12e"]["Name"] = [[alpha]];
	G2L["12e"]["Position"] = UDim2.new(0.29935, 0, 0.36667, 0);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark1.nickname
	G2L["12f"] = Instance.new("TextLabel", G2L["12c"]);
	G2L["12f"]["TextWrapped"] = true;
	G2L["12f"]["BorderSizePixel"] = 0;
	G2L["12f"]["TextScaled"] = true;
	G2L["12f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12f"]["TextSize"] = 100;
	G2L["12f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Heavy, Enum.FontStyle.Normal);
	G2L["12f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["12f"]["BackgroundTransparency"] = 1;
	G2L["12f"]["Size"] = UDim2.new(0, 115, 0, 30);
	G2L["12f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["12f"]["Text"] = [[nickname]];
	G2L["12f"]["Name"] = [[nickname]];
	G2L["12f"]["Position"] = UDim2.new(0.58205, 0, 0, 0);

	-- StarterGui.LithiumAlpha.WaterMarks.watermark1.nickname.init
	G2L["130"] = Instance.new("LocalScript", G2L["12f"]);
	G2L["130"]["Name"] = [[init]];

	-- StarterGui.LithiumAlpha.WaterMarks.watermark1.UICorner
	G2L["131"] = Instance.new("UICorner", G2L["12c"]);
	G2L["131"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.WaterMarks.DragManager
	G2L["132"] = Instance.new("LocalScript", G2L["121"]);
	G2L["132"]["Name"] = [[DragManager]];

	-- StarterGui.LithiumAlpha.WaterMarks.WaterMarkManager
	G2L["133"] = Instance.new("LocalScript", G2L["121"]);
	G2L["133"]["Name"] = [[WaterMarkManager]];

	-- StarterGui.LithiumAlpha.Console
	G2L["134"] = Instance.new("Frame", G2L["1"]);
	G2L["134"]["Visible"] = false;
	G2L["134"]["BorderSizePixel"] = 0;
	G2L["134"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["134"]["Size"] = UDim2.new(0, 500, 0, 310);
	G2L["134"]["Position"] = UDim2.new(0.63422, 0, 0.24759, 0);
	G2L["134"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["134"]["Name"] = [[Console]];

	-- StarterGui.LithiumAlpha.Console.UIGradient
	G2L["135"] = Instance.new("UIGradient", G2L["134"]);
	G2L["135"]["Rotation"] = 40;
	G2L["135"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(86, 171, 255)),ColorSequenceKeypoint.new(0.474, Color3.fromRGB(86, 171, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};

	-- StarterGui.LithiumAlpha.Console.Bar
	G2L["136"] = Instance.new("Frame", G2L["134"]);
	G2L["136"]["BorderSizePixel"] = 0;
	G2L["136"]["BackgroundColor3"] = Color3.fromRGB(126, 180, 245);
	G2L["136"]["Size"] = UDim2.new(0, 500, 0, 45);
	G2L["136"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["136"]["Name"] = [[Bar]];

	-- StarterGui.LithiumAlpha.Console.Bar.UICorner
	G2L["137"] = Instance.new("UICorner", G2L["136"]);
	G2L["137"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Console.Bar.Logo
	G2L["138"] = Instance.new("ImageLabel", G2L["136"]);
	G2L["138"]["Active"] = true;
	G2L["138"]["BorderSizePixel"] = 0;
	G2L["138"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["138"]["Image"] = [[rbxassetid://18619803784]];
	G2L["138"]["Size"] = UDim2.new(0, 130, 0, 117);
	G2L["138"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["138"]["BackgroundTransparency"] = 1;
	G2L["138"]["Selectable"] = true;
	G2L["138"]["Name"] = [[Logo]];
	G2L["138"]["Position"] = UDim2.new(-0.032, 0, -0.8, 0);

	-- StarterGui.LithiumAlpha.Console.Bar.Logo.UICorner
	G2L["139"] = Instance.new("UICorner", G2L["138"]);
	G2L["139"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Console.Bar.DragManager
	G2L["13a"] = Instance.new("LocalScript", G2L["136"]);
	G2L["13a"]["Name"] = [[DragManager]];

	-- StarterGui.LithiumAlpha.Console.Bar.TextLabel
	G2L["13b"] = Instance.new("TextLabel", G2L["136"]);
	G2L["13b"]["BorderSizePixel"] = 0;
	G2L["13b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["13b"]["TextSize"] = 50;
	G2L["13b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
	G2L["13b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["13b"]["BackgroundTransparency"] = 1;
	G2L["13b"]["Size"] = UDim2.new(0, 200, 0, 34);
	G2L["13b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["13b"]["Text"] = [[Console]];
	G2L["13b"]["Position"] = UDim2.new(0.298, 0, 0.13333, 0);

	-- StarterGui.LithiumAlpha.Console.In
	G2L["13c"] = Instance.new("Frame", G2L["134"]);
	G2L["13c"]["BorderSizePixel"] = 0;
	G2L["13c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["13c"]["Size"] = UDim2.new(0, 100, 0, 100);
	G2L["13c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["13c"]["Name"] = [[In]];
	G2L["13c"]["BackgroundTransparency"] = 1;

	-- StarterGui.LithiumAlpha.Console.In.ConsoleBar
	G2L["13d"] = Instance.new("TextBox", G2L["13c"]);
	G2L["13d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["13d"]["BorderSizePixel"] = 0;
	G2L["13d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
	G2L["13d"]["TextWrapped"] = true;
	G2L["13d"]["TextSize"] = 24;
	G2L["13d"]["Name"] = [[ConsoleBar]];
	G2L["13d"]["TextScaled"] = true;
	G2L["13d"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["13d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
	G2L["13d"]["Size"] = UDim2.new(0, 500, 0, 33);
	G2L["13d"]["Position"] = UDim2.new(-0, 0, 2.76355, 0);
	G2L["13d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["13d"]["Text"] = [[]];

	-- StarterGui.LithiumAlpha.Console.In.ConsoleBar.UICorner
	G2L["13e"] = Instance.new("UICorner", G2L["13d"]);
	G2L["13e"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Console.In.ConsoleBar.LocalScript
	G2L["13f"] = Instance.new("LocalScript", G2L["13d"]);


	-- StarterGui.LithiumAlpha.Console.UICorner
	G2L["140"] = Instance.new("UICorner", G2L["134"]);
	G2L["140"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.Console.TextLabel
	G2L["141"] = Instance.new("TextLabel", G2L["134"]);
	G2L["141"]["TextWrapped"] = true;
	G2L["141"]["BorderSizePixel"] = 0;
	G2L["141"]["TextXAlignment"] = Enum.TextXAlignment.Left;
	G2L["141"]["TextYAlignment"] = Enum.TextYAlignment.Top;
	G2L["141"]["TextScaled"] = true;
	G2L["141"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["141"]["TextSize"] = 26;
	G2L["141"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
	G2L["141"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["141"]["BackgroundTransparency"] = 1;
	G2L["141"]["Size"] = UDim2.new(0, 492, 0, 26);
	G2L["141"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["141"]["Text"] = [[ ]];
	G2L["141"]["Position"] = UDim2.new(0.016, 0, 0.1754, 0);

	-- StarterGui.LithiumAlpha.Console.TextLabel.UICorner
	G2L["142"] = Instance.new("UICorner", G2L["141"]);
	G2L["142"]["CornerRadius"] = UDim.new(0.05, 30);

	-- StarterGui.LithiumAlpha.FriendManager
	G2L["143"] = Instance.new("ModuleScript", G2L["1"]);
	G2L["143"]["Name"] = [[FriendManager]];

	-- StarterGui.LithiumAlpha.AcManager
	G2L["144"] = Instance.new("ModuleScript", G2L["1"]);
	G2L["144"]["Name"] = [[AcManager]];

	-- StarterGui.LithiumAlpha.Coords
	G2L["145"] = Instance.new("Frame", G2L["1"]);
	G2L["145"]["Visible"] = false;
	G2L["145"]["BorderSizePixel"] = 0;
	G2L["145"]["BackgroundColor3"] = Color3.fromRGB(76, 112, 149);
	G2L["145"]["Size"] = UDim2.new(0, 279, 0, 50);
	G2L["145"]["Position"] = UDim2.new(0.00604, 0, 0.93465, 0);
	G2L["145"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["145"]["Name"] = [[Coords]];

	-- StarterGui.LithiumAlpha.Coords.TextLabel
	G2L["146"] = Instance.new("TextLabel", G2L["145"]);
	G2L["146"]["BorderSizePixel"] = 0;
	G2L["146"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["146"]["TextSize"] = 14;
	G2L["146"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
	G2L["146"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
	G2L["146"]["BackgroundTransparency"] = 1;
	G2L["146"]["Size"] = UDim2.new(0, 274, 0, 50);
	G2L["146"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	G2L["146"]["Text"] = [[AkaruiNeko]];

	-- StarterGui.LithiumAlpha.Coords.TextLabel.LocalScript
	G2L["147"] = Instance.new("LocalScript", G2L["146"]);


	-- StarterGui.LithiumAlpha.Coords.TextLabel.UICorner
	G2L["148"] = Instance.new("UICorner", G2L["146"]);


	-- StarterGui.LithiumAlpha.Coords.UICorner
	G2L["149"] = Instance.new("UICorner", G2L["145"]);


	-- StarterGui.LithiumAlpha.LoadManager
	G2L["14a"] = Instance.new("LocalScript", G2L["1"]);
	G2L["14a"]["Name"] = [[LoadManager]];

	-- StarterGui.LithiumAlpha.VerManager
	G2L["14b"] = Instance.new("LocalScript", G2L["1"]);
	G2L["14b"]["Name"] = [[VerManager]];

	-- StarterGui.LithiumAlpha.WebhookManager
	G2L["14c"] = Instance.new("LocalScript", G2L["1"]);
	G2L["14c"]["Name"] = [[WebhookManager]];

	-- Require G2L wrapper
	local G2L_REQUIRE = require;
	local G2L_MODULES = {};
	local function require(Module:ModuleScript)
		local ModuleState = G2L_MODULES[Module];
		if ModuleState then
			if not ModuleState.Required then
				ModuleState.Required = true;
				ModuleState.Value = ModuleState.Closure();
			end
			return ModuleState.Value;
		end;
		return G2L_REQUIRE(Module);
	end

	G2L_MODULES[G2L["11b"]] = {
		Closure = function()
			local script = G2L["11b"];
			-- NotificationManager Script

			-- Настройки уведомлений
			local notificationDuration = 3 -- Длительность уведомления в секундах
			local tweenTime = 0.5 -- Длительность анимации в секундах

			-- Иконки для различных типов уведомлений
			local icons = {
				error = "rbxassetid://18685706287", -- Замените на реальные AssetID для иконок
				info = "rbxassetid://18685623266",
				warning = "rbxassetid://18685593846"
			}

			-- Создаем NotificationManager
			local NotificationManager = {}
			NotificationManager.__index = NotificationManager

			-- Функция для инициализации GUI
			function NotificationManager:Initialize()
				local playerGui = script.Parent.Parent
				local screenGui = playerGui:WaitForChild("LithiumAlpha")
				self.NotificationFrame = screenGui:WaitForChild("NotificationFrame")

				-- Получаем ссылки на элементы
				self.Icon = self.NotificationFrame:WaitForChild("Icon")
				self.MessageLabel = self.NotificationFrame:WaitForChild("MessageLabel")

				-- Устанавливаем начальную позицию и скрываем уведомление
				self.NotificationFrame.Position = UDim2.new(0.35, 0, -0.2, 0)
				self.NotificationFrame.Visible = false
			end

			-- Функция для показа уведомления
			function NotificationManager:ShowNotification(message, type)
				-- Убедимся, что GUI инициализирован
				if not self.NotificationFrame then
					self:Initialize()
				end

				-- Устанавливаем текст и иконку
				self.MessageLabel.Text = message or "Нет сообщения"
				self.Icon.Image = icons[type] or icons.info -- Устанавливаем иконку по типу

				-- Делаем уведомление видимым и запускаем анимацию
				self.NotificationFrame.Visible = true

				-- Создаём tween для анимации появления
				local tweenIn = game:GetService("TweenService"):Create(
				self.NotificationFrame,
				TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Position = UDim2.new(0.35, 0, 0.05, 0)} -- Положение на экране
				)

				tweenIn:Play()
				tweenIn.Completed:Wait()

				-- Ждём указанное время
				task.wait(notificationDuration)

				-- Создаём tween для анимации исчезновения
				local tweenOut = game:GetService("TweenService"):Create(
				self.NotificationFrame,
				TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
				{Position = UDim2.new(0.35, 0, -0.2, 0)} -- Положение за экраном
				)

				tweenOut:Play()
				tweenOut.Completed:Wait()

				-- Скрываем уведомление
				self.NotificationFrame.Visible = false
			end

			-- Создание singleton instance
			local instance = setmetatable({}, NotificationManager)

			-- Возвращаем функцию для доступа к NotificationManager
			return function()
				return instance
			end

		end;
	};
	G2L_MODULES[G2L["120"]] = {
		Closure = function()
			local script = G2L["120"];
			local constants = {
				build = "5",
				ver = "Alpha"
			}

			return constants
		end;
	};
	G2L_MODULES[G2L["143"]] = {
		Closure = function()
			local script = G2L["143"];
			-- FriendManager module
			local FriendManager = {}
			FriendManager.__index = FriendManager

			local friends = {}  -- Initialize friends list as an empty table

			-- Add a new friend to the list
			function FriendManager:add(friend)
				table.insert(friends, friend)  -- Add the friend to the list
			end

			-- Remove a friend from the list
			function FriendManager:remove(friend)
				for i, f in ipairs(friends) do  -- Iterate through the list
					if f == friend then
						table.remove(friends, i)  -- Remove friend if found
						break
					end
				end
			end

			-- Clear all friends from the list
			function FriendManager:clear()
				friends = {}  -- Reset the list to an empty table
			end

			-- List all friends
			function FriendManager:list()
				return friends  -- Return the current list of friends
			end

			return FriendManager  -- Return the module
		end;
	};
	G2L_MODULES[G2L["144"]] = {
		Closure = function()
			local script = G2L["144"];
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			local ServerScriptService = game:GetService("ServerScriptService")
			local Workspace = game:GetService("Workspace")

			local acs = {
				vdefender = {
					name = "Vdefender",
					path = ReplicatedStorage:FindFirstChild("EasyAntiCheat")
				},
				anticheat = {
					name = "AntiCheat",
					path = ServerScriptService:FindFirstChild("AntiCheat")
				},
				FJCharacterAnticheat = {
					name = "FJ's Character Anticheat",
					path = Workspace:FindFirstChild("AntiCheat")
				},
				tacostew = {
					name = "TacoStew's AntiCheat v.1.0",
					path = Workspace:FindFirstChild("TacoStew's AntiCheat v.1.0")
				},
				speedac = {
					name = "yoin232`s Speed anticheat",
					path = Workspace:FindFirstChild("Speed anticheat (Made by yoin232)")
				},
				anticheat1 = {
					name = "ANTICHEAT1",
					path = (Workspace:FindFirstChild("Folder") and Workspace.Folder:FindFirstChild("ANTICHEAT1 - Against Teleporting, Speed hacks.")) or nil
				},
				anticheat2 = {
					name = "ANTICHEAT2",
					path = (Workspace:FindFirstChild("Folder") and Workspace.Folder:FindFirstChild("ANTICHEAT 2 - READ.")) or nil
				},
				anticheatpaid = {
					name = "Anti Cheat",
					path = ReplicatedStorage:FindFirstChild("Anti Cheat")
				},
				clowning = {
					name = "Clowning Anticheat",
					-- Check for the "Clowning Anticheat" object first
					path = (Workspace:FindFirstChild("Clowning Anticheat") and Workspace:FindFirstChild("Clowning Anticheat"):FindFirstChild("UpdateLog")) or nil
				},
				darksac = {
					name = "Dark's AntiCheat",
					path = game.StarterPlayer.StarterPlayerScripts:FindFirstChild("Dark's AntiCheat")
				},
				darksac1 = {
					name = "Dark's AntiCheat",
					path = game.StarterPlayer.StarterCharacterScripts:FindFirstChild("Dark's AntiCheat")
				}
			}

			return acs

		end;
	};
	-- StarterGui.LithiumAlpha.Main.Bar.DragManager
	local function C_11()
		local script = G2L["11"];
		local Bar = script.Parent
		local Main = Bar.Parent
		local UserInputService = game:GetService("UserInputService")
		local Players = game:GetService("Players")

		local dragging = false
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		Bar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = Main.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		Bar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if dragging and input == dragInput then
				update(input)
			end
		end)

	end;
	task.spawn(C_11);
	-- StarterGui.LithiumAlpha.Main.Bar.Close.Close
	local function C_14()
		local script = G2L["14"];
		local TweenService = game:GetService("TweenService")

		local function fadeOut(object, duration)
			local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.In)
			local goal = {}

			if object:IsA("GuiObject") then
				if object:IsA("ImageLabel") or object:IsA("ImageButton") then
					goal.ImageTransparency = 1
				elseif object:IsA("TextLabel") or object:IsA("TextButton") then
					goal.TextTransparency = 1
				elseif object:IsA("Frame") or object:IsA("ScrollingFrame") or object:IsA("SurfaceGui") then
					goal.BackgroundTransparency = 1
				elseif object:IsA("TextButton") or object:IsA("TextBox") then
					goal.BackgroundTransparency = 1
					goal.TextTransparency = 1
				else
					return
				end

				local tween = TweenService:Create(object, tweenInfo, goal)
				tween:Play()
				tween.Completed:Connect(function()
					game.ReplicatedStorage:FindFirstChild("LithiumAlphaIsLoaded").Value = false
					object:Destroy()
				end)
			else
				-- иди нахуй
			end
		end

		local function fadeOutAllDescendants(root, duration)
			for _, child in ipairs(root:GetChildren()) do
				fadeOut(child, duration)
				fadeOutAllDescendants(child, duration)
			end
		end

		local function onClick()
			local root = script.Parent.Parent.Parent
			fadeOut(root, 1)
			fadeOutAllDescendants(root, 1)
		end

		script.Parent.MouseButton1Click:Connect(onClick)

	end;
	task.spawn(C_14);
	-- StarterGui.LithiumAlpha.Main.Bar.Minimize.LocalScript
	local function C_17()
		local script = G2L["17"];
		local isMinimized = false
		local screenGui = script.Parent.Parent.Parent.Parent
		local main = screenGui.Main
		local rage = main.Rage
		local movement = main.Movement
		local visual = main.Visual
		local info = main.Info
		local misc = main.Misc
		local visual2 = main.Visual2

		local function hideAll()
			for _, item in pairs(movement:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = false
				end
			end
			for _, item in pairs(visual:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = false
				end
			end
			for _, item in pairs(info:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = false
				end
			end
			for _, item in pairs(rage:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = false
				end
			end
			for _, item in pairs(misc:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = false
				end
			end
			for _, item in pairs(visual2:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = false
				end
			end
		end

		local function showAll()
			for _, item in pairs(movement:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = true
				end
			end
			for _, item in pairs(visual:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = true
				end
			end
			for _, item in pairs(info:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = true
				end
			end
			for _, item in pairs(rage:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = true
				end
			end
			for _, item in pairs(misc:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = true
				end
			end
			for _, item in pairs(visual2:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = true
				end
			end
		end

		local function onClick()
			isMinimized = not isMinimized
			if isMinimized then
				hideAll()
				main.Bar.Tab1.Visible = false
				main.Bar.Tab2.Visible = false
				main.Bar.Tab3.Visible = false
				main.Bar.Tab4.Visible = false
				main.Bar.Tab5.Visible = false
				main.BackgroundTransparency = 1
			else
				main.BackgroundTransparency = 0
				main.Bar.Tab1.Visible = true
				main.Bar.Tab2.Visible = true
				main.Bar.Tab3.Visible = true
				main.Bar.Tab4.Visible = true
				main.Bar.Tab5.Visible = true
			end
		end

		script.Parent.MouseButton1Click:Connect(onClick)

	end;
	task.spawn(C_17);
	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.LocalScript
	local function C_1d()
		local script = G2L["1d"];
		-- Variable to keep track of whether the crosshair is enabled
		local isenabled = false
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		-- Get the local player
		local player = game.Players.LocalPlayer

		-- Function to update the crosshair image
		local function update(crosshair)
			-- Get the image asset ID from the TextBox
			local assetID = script.Parent.TextBox.Text

			-- Check if the asset ID is not empty or invalid
			if assetID and assetID ~= "" then
				crosshair.Image = "rbxassetid://" .. assetID
			else
				warn("Invalid asset ID")
			end
		end

		-- Function to enable the crosshair
		local function enabled()
			-- Check if the crosshair GUI already exists
			if not player.PlayerGui:FindFirstChild("Crosshair") then
				-- Create a new ScreenGui for the crosshair
				local crosshairmenu = Instance.new("ScreenGui")
				crosshairmenu.Name = "Crosshair"
				crosshairmenu.Parent = player.PlayerGui

				-- Create a new ImageLabel for the crosshair
				local crosshair = Instance.new("ImageLabel")
				crosshair.Name = "Crosshair"
				crosshair.Size = UDim2.new(0, 100, 0, 100)
				crosshair.AnchorPoint = Vector2.new(0.5, 0.5)
				crosshair.Position = UDim2.new(0.5, 0, 0.5, 0)
				crosshair.BackgroundTransparency = 1 -- Make the background transparent
				crosshair.Parent = crosshairmenu

				-- Initial update of the crosshair image
				update(crosshair)

				-- Connect a function to update the crosshair whenever the TextBox text changes
				script.Parent.TextBox:GetPropertyChangedSignal("Text"):Connect(function()
					update(crosshair)
				end)
			end
		end

		-- Function to disable the crosshair
		local function disabled()
			-- Find the crosshair GUI
			local crosshair = player.PlayerGui:FindFirstChild("Crosshair")
			if crosshair then
				-- Remove the crosshair GUI
				crosshair:Destroy()
			end
		end

		-- Function to toggle the crosshair state
		local function toggle()
			-- Toggle the isenabled variable
			isenabled = not isenabled
			if isenabled then

				-- Set the button text to green
				script.Parent.Image = "rbxassetid://18631456665"
				-- Enable the crosshair
				enabled()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				-- Set the button text to red
				script.Parent.Image = "rbxassetid://18631459897"
				-- Disable the crosshair
				disabled()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_1d);
	-- StarterGui.LithiumAlpha.Main.Visual.Crosshair.TextButton.LocalScript
	local function C_22()
		local script = G2L["22"];
		local defaultid = 18619850280

		-- Function to set the TextBox text to the default ID when the button is clicked
		local function clicked()
			-- Update the TextBox text with the default asset ID
			script.Parent.Parent.TextBox.Text = tostring(defaultid)
		end

		-- Connect the clicked function to the button's click event
		script.Parent.MouseButton1Click:Connect(clicked)

	end;
	task.spawn(C_22);
	-- StarterGui.LithiumAlpha.Main.Visual.ESP.LocalScript
	local function C_26()
		local script = G2L["26"];
		-- thanks to lithium 0.3
		-- Services
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local Workspace = game:GetService("Workspace")
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		-- Variables
		local button = script.Parent
		local isEnabled = false

		-- Create a function to enable ESP
		local function enableESP()
			local function drawESP(player)
				if not player.Character or not player.Character:FindFirstChild("Humanoid") then
					return
				end

				local espAdornee = Instance.new("Part")
				espAdornee.Name = "esppart"
				espAdornee.Size = Vector3.new(2, 4, 2)
				espAdornee.Anchored = true
				espAdornee.CanCollide = false
				espAdornee.Transparency = 1
				espAdornee.Parent = player.Character
				espAdornee.Position = Vector3.new(10000, 10000, 10000)

				local espBox = Instance.new("BoxHandleAdornment")
				espBox.Size = espAdornee.Size
				espBox.Name = "EspBox"
				espBox.Color3 = Color3.fromRGB(255, 0, 0)
				espBox.Transparency = 0.5
				espBox.ZIndex = 5
				espBox.AlwaysOnTop = true
				espBox.Adornee = espAdornee
				espBox.Parent = espAdornee

				local playerNameBillboard = Instance.new("BillboardGui")
				playerNameBillboard.Size = UDim2.new(0, 100, 0, 20)
				playerNameBillboard.Name = "playername"
				playerNameBillboard.StudsOffset = Vector3.new(0, 3, 0)
				playerNameBillboard.AlwaysOnTop = true
				playerNameBillboard.Parent = player.Character.Head

				local playerNameLabel = Instance.new("TextLabel")
				playerNameLabel.Text = player.Name
				playerNameLabel.Name = "playerName2"
				playerNameLabel.Size = UDim2.new(1, 0, 1, 0)
				playerNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				playerNameLabel.BackgroundTransparency = 1
				playerNameLabel.Font = Enum.Font.SourceSans
				playerNameLabel.TextSize = 18
				playerNameLabel.Parent = playerNameBillboard

				local head = player.Character:WaitForChild("Head")
				local rootPart = player.Character:WaitForChild("HumanoidRootPart")

				local function updateESP()
					if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
						local headPos, onScreen = Workspace.CurrentCamera:WorldToViewportPoint(head.Position)
						if onScreen then
							local distance = (Workspace.CurrentCamera.CFrame.Position - rootPart.Position).Magnitude
							local scale = 200 / distance
							espAdornee.Size = Vector3.new(4 / scale, 1 / scale, 2 / scale)
							espAdornee.Position = head.Position + Vector3.new(0, -2, 0)
							playerNameBillboard.Enabled = true
						else
							playerNameBillboard.Enabled = false
						end
					else
						playerNameBillboard.Enabled = false
					end
				end

				RunService.RenderStepped:Connect(updateESP)
			end

			for _, player in ipairs(Players:GetPlayers()) do
				drawESP(player)
			end

			Players.PlayerAdded:Connect(function(player)
				drawESP(player)
			end)
		end

		-- Create a function to disable ESP
		local function disableESP()
			local function removeESP()
				for _, player in ipairs(Players:GetPlayers()) do
					local character = player.Character
					if character then
						local espPart = character:FindFirstChild("esppart")
						local playername = character.Head:FindFirstChild("playername")
						if espPart then
							if playername then
								espPart:Destroy()
								playername:Destroy()
							end
						end
					end
				end
			end
			removeESP()
		end

		-- Function to handle button toggle
		local function toggleESP()
			isEnabled = not isEnabled
			if isEnabled then

				button.Image = "rbxassetid://18631456665"
				enableESP()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				button.Image = "rbxassetid://18631459897"
				disableESP()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the button click to toggle function
		button.MouseButton1Click:Connect(toggleESP)

		-- Update ESP status on player addition or removal
		local function updateOnPlayerChange()
			if isEnabled then
				disableESP()
				task.wait(0.2)
				enableESP()
			end
		end

		Players.PlayerAdded:Connect(updateOnPlayerChange)
		Players.PlayerRemoving:Connect(updateOnPlayerChange)
	end;
	task.spawn(C_26);
	-- StarterGui.LithiumAlpha.Main.Visual.watermark.LocalScript
	local function C_29()
		local script = G2L["29"];
		-- Thanks to Crimson Hub ❤️

		-- Variables
		local button = script.Parent
		local isEnabled = false
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Get access to buttons
		local button1 = script.Parent:WaitForChild("Type1")
		local button2 = script.Parent:WaitForChild("Type2")

		-- Define colors
		local pressedColor = Color3.fromHex("#4b6f94") -- Pressed button color
		local unpressedColor = Color3.fromHex("#6fa6dc") -- Unpressed button color

		-- Variable to store the selected button
		local selectedButton = button1 -- Default selection

		-- Function to update button colors based on selection
		local function updateButtonColors()
			button1.BackgroundColor3 = (selectedButton == button1) and pressedColor or unpressedColor
			button2.BackgroundColor3 = (selectedButton == button2) and pressedColor or unpressedColor
		end

		-- Function to enable ESP based on the selected button
		local function enable()
			if selectedButton == button1 then
				script.Parent.Parent.Parent.Parent.WaterMarks.watermark1.Visible = true
				script.Parent.Parent.Parent.Parent.WaterMarks.watermark2.Visible = false
			else
				script.Parent.Parent.Parent.Parent.WaterMarks.watermark1.Visible = false
				script.Parent.Parent.Parent.Parent.WaterMarks.watermark2.Visible = true
			end
		end

		-- Function to disable ESP
		local function disable()
			script.Parent.Parent.Parent.Parent.WaterMarks.watermark1.Visible = false
			script.Parent.Parent.Parent.Parent.WaterMarks.watermark2.Visible = false
		end

		-- Function to refresh watermarks based on the current state
		local function refreshWatermarks()
			if isEnabled then
				enable()
			else
				disable()
			end
		end

		-- Button click handlers
		button1.MouseButton1Click:Connect(function()
			selectedButton = button1
			updateButtonColors()
			print("Button1 selected")
			refreshWatermarks() -- Update watermark immediately when button type changes
		end)

		button2.MouseButton1Click:Connect(function()
			selectedButton = button2
			updateButtonColors()
			print("Button2 selected")
			refreshWatermarks() -- Update watermark immediately when button type changes
		end)

		-- Initialize button colors
		updateButtonColors()

		-- Function to handle button toggle
		local function toggle()
			isEnabled = not isEnabled
			if isEnabled then
				button.Image = "rbxassetid://18631456665"
				refreshWatermarks()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				button.Image = "rbxassetid://18631459897"
				refreshWatermarks()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the button click to the toggle function
		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_29);
	-- StarterGui.LithiumAlpha.Main.Visual.snow.LocalScript
	local function C_32()
		local script = G2L["32"];
		-- Variables
		local isEnabled = false
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		-- Folders
		local snowflakeFolder = game.Workspace:FindFirstChild("Snowflakes") or Instance.new("Folder", game.Workspace)
		snowflakeFolder.Name = "Snowflakes"
		local newsnowFolder = game.Workspace:FindFirstChild("NewSnowflakes") or Instance.new("Folder", game.Workspace)
		newsnowFolder.Name = "NewSnowflakes"
		local starFolder = game.Workspace:FindFirstChild("Starflakes") or Instance.new("Folder", game.Workspace)
		starFolder.Name = "Starflakes"

		-- Get access to buttons
		local button1 = script.Parent:WaitForChild("Type1")
		local button2 = script.Parent:WaitForChild("Type2")
		local button3 = script.Parent:WaitForChild("Type3")

		-- Define colors
		local pressedColor = Color3.fromHex("#4b6f94") -- Pressed button color
		local unpressedColor = Color3.fromHex("#6fa6dc") -- Unpressed button color

		-- Variable to store the selected button
		local selectedButton = button1 -- Default selection

		-- Function to update button colors based on selection
		local function updateButtonColors()
			button1.BackgroundColor3 = (selectedButton == button1) and pressedColor or unpressedColor
			button2.BackgroundColor3 = (selectedButton == button2) and pressedColor or unpressedColor
			button3.BackgroundColor3 = (selectedButton == button3) and pressedColor or unpressedColor
		end

		-- Button click handlers
		button1.MouseButton1Click:Connect(function()
			selectedButton = button1
			updateButtonColors()
			print("Button1 selected")
		end)

		button2.MouseButton1Click:Connect(function()
			selectedButton = button2
			updateButtonColors()
			print("Button2 selected")
		end)

		button3.MouseButton1Click:Connect(function()
			selectedButton = button3
			updateButtonColors()
			print("Button3 selected")
		end)

		-- Snowflake creation function
		local function createSnowflake(position)
			local snowflake = Instance.new("Part")
			snowflake.Shape = Enum.PartType.Ball
			snowflake.Name = "Snow"
			snowflake.Size = Vector3.new(0.5, 0.5, 0.5)
			snowflake.Position = position
			snowflake.Anchored = false
			snowflake.CanCollide = false
			snowflake.BrickColor = BrickColor.White()
			snowflake.CanTouch = false
			snowflake.CanCollide = false
			snowflake.Material = Enum.Material.SmoothPlastic

			local snowflakeVelocity = Instance.new("BodyVelocity", snowflake)
			snowflakeVelocity.Velocity = Vector3.new(0, -5, 0) -- Slowed down falling speed
			snowflakeVelocity.MaxForce = Vector3.new(0, math.huge, 0) -- Ensure snowflake falls straight down

			snowflake.Parent = snowflakeFolder

			-- Remove snowflake on touch or after a certain time
			snowflake.Touched:Connect(function(hit)
				if hit:IsA("BasePart") and hit.Position.Y < 1 then
					task.wait(1)
					snowflake:Destroy()
				end
			end)

			delay(5, function() -- Automatically remove after 5 seconds to prevent overflow
				if snowflake and snowflake.Parent then
					task.wait(1)
					snowflake:Destroy()
				end
			end)
		end

		-- Function to create falling effect with customizable image ID
		local function createFallingEffect(position, imageid, folder)
			local letterPart = Instance.new("Part")
			letterPart.Name = "Snow"
			letterPart.Size = Vector3.new(2.5, 2.5, 0.5)  -- Size of the part, can adjust
			letterPart.Position = position
			letterPart.Anchored = false
			letterPart.CanCollide = false
			letterPart.CanTouch = false
			letterPart.CanCollide = false
			letterPart.BrickColor = BrickColor.White()  -- Color doesn't matter as part is transparent
			letterPart.Material = Enum.Material.SmoothPlastic
			letterPart.Transparency = 1  -- Make part fully transparent

			-- Add decals on both sides
			local function createDecal(face)
				local decal = Instance.new("Decal")
				decal.Texture = "rbxassetid://" .. imageid
				decal.Face = face
				decal.Parent = letterPart
				return decal
			end

			createDecal(Enum.NormalId.Front)  -- Decal on front side
			createDecal(Enum.NormalId.Back)   -- Decal on back side

			-- Add physics for falling
			local bodyVelocity = Instance.new("BodyVelocity", letterPart)
			bodyVelocity.Velocity = Vector3.new(0, -5, 0) -- Slowed down falling speed
			bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0) -- Ensure it falls straight down

			local bodyAngularVelocity = Instance.new("BodyAngularVelocity", letterPart)
			bodyAngularVelocity.AngularVelocity = Vector3.new(math.random(-2, 2), math.random(-2, 2), math.random(-2, 2))  -- Set lesser angular velocity
			bodyAngularVelocity.MaxTorque = Vector3.new(250, 250, 250) -- Limited torque for rotation

			letterPart.Parent = folder

			-- Remove part on touch or after some time
			letterPart.Touched:Connect(function(hit)
				if hit:IsA("BasePart") and hit.Position.Y < 1 then
					task.wait(1)
					letterPart:Destroy()
				end
			end)

			delay(5, function()  -- Automatically remove after 5 seconds to prevent overflow
				if letterPart and letterPart.Parent then
					task.wait(1)
					letterPart:Destroy()
				end
			end)
		end

		-- Function to enable effects
		local function enabled()
			local player = Players.LocalPlayer
			if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local radius = 100 -- Increased radius for effect spawning
				local minDistance = 5 -- Minimum distance from the player

				-- Create effects around the player's position
				RunService.Heartbeat:Connect(function()
					if not isEnabled then return end

					local minDistance = tonumber(script.Parent.Radius.Bar.Thumb.percentage.Text) / 5
					local playerPosition = player.Character.HumanoidRootPart.Position
					local maxEffectsPerInterval = math.max(1, tonumber(script.Parent.Radius.Bar.Thumb.percentage.Text) or 1) -- Adjust the maximum effects per interval

					if selectedButton == button1 then
						for _ = 1, maxEffectsPerInterval do
							local offset
							repeat
								offset = Vector3.new(math.random(-radius, radius), 25, math.random(-radius, radius))
							until offset.Magnitude >= minDistance

							createSnowflake(playerPosition + offset)
						end
					elseif selectedButton == button3 then
						for _ = 1, maxEffectsPerInterval do
							local offset
							repeat
								offset = Vector3.new(math.random(-radius, radius), 25, math.random(-radius, radius))
							until offset.Magnitude >= minDistance

							createFallingEffect(playerPosition + offset, "18670131677", starFolder)
						end
					elseif selectedButton == button2 then
						for _ = 1, maxEffectsPerInterval do
							local offset
							repeat
								offset = Vector3.new(math.random(-radius, radius), 25, math.random(-radius, radius))
							until offset.Magnitude >= minDistance

							createFallingEffect(playerPosition + offset, "18670298477", newsnowFolder)
						end
					end

					wait(2) -- Increased the wait time to reduce the frequency of spawning
				end)
			end
		end

		-- Function to disable effects
		local function disabled()
			for _, effect in pairs(snowflakeFolder:GetChildren()) do
				effect:Destroy()
			end
			for _, effect in pairs(newsnowFolder:GetChildren()) do
				effect:Destroy()
			end
			for _, effect in pairs(starFolder:GetChildren()) do
				effect:Destroy()
			end
		end

		-- Toggle function
		local function toggle()
			isEnabled = not isEnabled
			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665" -- Image for enabled state
				spawn(enabled) -- Run in a new thread to avoid blocking
				notificationManager:ShowNotification("Enabled!", "info")
			else

				script.Parent.Image = "rbxassetid://18631459897" -- Image for disabled state
				disabled()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_32);
	-- StarterGui.LithiumAlpha.Main.Visual.snow.Radius.Bar.Thumb.SliderManager
	local function C_3a()
		local script = G2L["3a"];
		local thumb = script.Parent
		local bar = thumb.Parent
		local frame = bar.Parent
		local textLabel = thumb:WaitForChild("percentage")

		local dragging = false
		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local function updatePosition(input)
			local frameAbsoluteSize = frame.AbsoluteSize.X
			local frameAbsolutePosition = frame.AbsolutePosition.X
			local inputPosition = input.Position.X - 14
			local relativePosition = inputPosition - frameAbsolutePosition

			-- Обновление позиции ползунка, ограничивая его внутри полоски
			local newPosition = math.clamp(relativePosition, 0, frameAbsoluteSize - thumb.AbsoluteSize.X)
			thumb.Position = UDim2.new(0, newPosition, thumb.Position.Y.Scale, thumb.Position.Y.Offset)

			-- Обновление размеров Bar
			bar.Size = UDim2.new(0, newPosition + thumb.AbsoluteSize.X / 2, bar.Size.Y.Scale, bar.Size.Y.Offset)

			-- Обновление текста
			local percentage = math.floor((newPosition / (frameAbsoluteSize - thumb.AbsoluteSize.X)) * 15)
			textLabel.Text = tostring(percentage)

			-- Анимация появления текста
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 0})
			tween:Play()
		end

		thumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				updatePosition(input) -- Обновляем позицию сразу при клике
			end
		end)

		thumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false

				-- Анимация исчезновения текста
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 1})
				tween:Play()
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				updatePosition(input)
			end
		end)

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updatePosition(input)
			end
		end)
	end;
	task.spawn(C_3a);
	-- StarterGui.LithiumAlpha.Main.Movement.speed.LocalScript
	local function C_47()
		local script = G2L["47"];
		local isenabled = false

		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		defaultjump = nil

		local function getHumanoid()
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			return character:WaitForChild("Humanoid")
		end

		local textbox = script.Parent.Speed.Bar.Thumb.percentage

		local speedUpdateConnection = nil

		local function enable()
			local humanoid = getHumanoid()
			defaultjump = humanoid.WalkSpeed
			local function updateJumpPower()
				local jumpPowerText = textbox.Text
				local jumpPowerValue = tonumber(jumpPowerText)

				if jumpPowerValue and jumpPowerValue > 0 then
					humanoid.WalkSpeed = jumpPowerValue
				else
					humanoid.WalkSpeed = defaultjump
				end
			end

			speedUpdateConnection = game:GetService("RunService").Heartbeat:Connect(function()
				updateJumpPower()
			end)
		end

		local function disable()
			local humanoid = getHumanoid()
			humanoid.WalkSpeed = defaultjump

			if speedUpdateConnection then
				speedUpdateConnection:Disconnect()
				speedUpdateConnection = nil
			end
		end

		local function toggle()
			isenabled = not isenabled
			if isenabled then

				script.Parent.Image = "rbxassetid://18631456665"
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				script.Parent.Image = "rbxassetid://18631459897"
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_47);
	-- StarterGui.LithiumAlpha.Main.Movement.speed.Speed.Bar.Thumb.SliderManager
	local function C_4e()
		local script = G2L["4e"];
		local thumb = script.Parent
		local bar = thumb.Parent
		local frame = bar.Parent
		local textLabel = thumb:WaitForChild("percentage")

		local dragging = false
		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local function updatePosition(input)
			local frameAbsoluteSize = frame.AbsoluteSize.X
			local frameAbsolutePosition = frame.AbsolutePosition.X
			local inputPosition = input.Position.X - 14
			local relativePosition = inputPosition - frameAbsolutePosition

			-- Обновление позиции ползунка, ограничивая его внутри полоски
			local newPosition = math.clamp(relativePosition, 0, frameAbsoluteSize - thumb.AbsoluteSize.X)
			thumb.Position = UDim2.new(0, newPosition, thumb.Position.Y.Scale, thumb.Position.Y.Offset)

			-- Обновление размеров Bar
			bar.Size = UDim2.new(0, newPosition + thumb.AbsoluteSize.X / 2, bar.Size.Y.Scale, bar.Size.Y.Offset)

			-- Обновление текста
			local percentage = math.floor((newPosition / (frameAbsoluteSize - thumb.AbsoluteSize.X)) * 1000)
			textLabel.Text = tostring(percentage)

			-- Анимация появления текста
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 0})
			tween:Play()
		end

		thumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				updatePosition(input) -- Обновляем позицию сразу при клике
			end
		end)

		thumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false

				-- Анимация исчезновения текста
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 1})
				tween:Play()
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				updatePosition(input)
			end
		end)

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updatePosition(input)
			end
		end)
	end;
	task.spawn(C_4e);
	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.LocalScript
	local function C_52()
		local script = G2L["52"];
		-- Variable to keep track of whether the crosshair is enabled
		local isenabled = false
		local player = game.Players.LocalPlayer
		defaultjump = nil
		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		-- Ensure the player's character and humanoid are available
		local function getHumanoid()
			local character = player.Character or player.CharacterAdded:Wait()
			return character:WaitForChild("Humanoid")
		end

		-- Reference to the TextBox
		local textbox = script.Parent.Jump.Bar.Thumb.percentage

		-- Variable to store the connection for stopping the loop
		local speedUpdateConnection = nil

		-- Function to enable the crosshair and continuously adjust the jump power
		local function enable()
			local humanoid = getHumanoid()
			defaultjump = humanoid.JumpPower

			-- Function to update the player's jump power
			local function updateJumpPower()
				-- Get the jump power from the TextBox
				local jumpPowerText = textbox.Text
				local jumpPowerValue = tonumber(jumpPowerText)

				-- Validate jump power input
				if jumpPowerValue and jumpPowerValue > 0 then
					-- Set the player's jump power
					humanoid.JumpPower = jumpPowerValue
				else
					humanoid.JumpPower = defaultjump -- Default jump power
				end
			end

			-- Update the jump power every second using RunService.Heartbeat
			speedUpdateConnection = game:GetService("RunService").Heartbeat:Connect(function()
				updateJumpPower()
			end)
		end

		-- Function to disable the crosshair and stop updating jump power
		local function disable()
			local humanoid = getHumanoid()
			humanoid.JumpPower = defaultjump -- Default jump power

			-- Disconnect the jump power update connection to stop updating
			if speedUpdateConnection then
				speedUpdateConnection:Disconnect()
				speedUpdateConnection = nil
			end
		end

		-- Function to toggle the crosshair state
		local function toggle()
			-- Toggle the isenabled variable
			isenabled = not isenabled
			if isenabled then


				-- Set the button image to green (crosshair enabled)
				script.Parent.Image = "rbxassetid://18631456665"
				-- Enable the crosshair and start updating jump power
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				-- Set the button image to red (crosshair disabled)
				script.Parent.Image = "rbxassetid://18631459897"
				-- Disable the crosshair and stop updating jump power
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_52);
	-- StarterGui.LithiumAlpha.Main.Movement.Jumppower.Jump.Bar.Thumb.SliderManager
	local function C_5a()
		local script = G2L["5a"];
		local thumb = script.Parent
		local bar = thumb.Parent
		local frame = bar.Parent
		local textLabel = thumb:WaitForChild("percentage")

		local dragging = false
		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local function updatePosition(input)
			local frameAbsoluteSize = frame.AbsoluteSize.X
			local frameAbsolutePosition = frame.AbsolutePosition.X
			local inputPosition = input.Position.X - 14
			local relativePosition = inputPosition - frameAbsolutePosition

			-- Обновление позиции ползунка, ограничивая его внутри полоски
			local newPosition = math.clamp(relativePosition, 0, frameAbsoluteSize - thumb.AbsoluteSize.X)
			thumb.Position = UDim2.new(0, newPosition, thumb.Position.Y.Scale, thumb.Position.Y.Offset)

			-- Обновление размеров Bar
			bar.Size = UDim2.new(0, newPosition + thumb.AbsoluteSize.X / 2, bar.Size.Y.Scale, bar.Size.Y.Offset)

			-- Обновление текста
			local percentage = math.floor((newPosition / (frameAbsoluteSize - thumb.AbsoluteSize.X)) * 1000)
			textLabel.Text = tostring(percentage)

			-- Анимация появления текста
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 0})
			tween:Play()
		end

		thumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				updatePosition(input) -- Обновляем позицию сразу при клике
			end
		end)

		thumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false

				-- Анимация исчезновения текста
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 1})
				tween:Play()
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				updatePosition(input)
			end
		end)

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updatePosition(input)
			end
		end)
	end;
	task.spawn(C_5a);
	-- StarterGui.LithiumAlpha.Main.Movement.clicktp.LocalScript
	local function C_5e()
		local script = G2L["5e"];
		local isEnabled = false
		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")
		local userInputService = game:GetService("UserInputService")
		local camera = workspace.CurrentCamera
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		-- Create a preview part
		local previewPart = Instance.new("Part")
		previewPart.Size = Vector3.new(2, 1, 2)  -- Size of the preview part
		previewPart.Anchored = true
		previewPart.CanCollide = false
		previewPart.CanTouch = false
		previewPart.BrickColor = BrickColor.new("Bright red")
		previewPart.Transparency = 0.5
		previewPart.Parent = workspace
		previewPart.Position = Vector3.new(10000, 10000, 10000) -- Large values to move out of view

		-- Function to update the preview part position
		local function updatePreviewPosition(position)
			local offset = 0.45 -- Change this value to adjust how much higher you want the preview part
			previewPart.Position = position + Vector3.new(0, offset, 0)
		end

		-- Function to start
		local function start()
			-- Update preview position when mouse moves
			local mouseMovedConnection
			mouseMovedConnection = userInputService.InputChanged:Connect(function(input)
				if isEnabled and input.UserInputType == Enum.UserInputType.MouseMovement then
					local mouse = Players.LocalPlayer:GetMouse()
					if mouse and mouse.Target and mouse.Target ~= previewPart and mouse.Target.Name ~= "Snow" then
						updatePreviewPosition(mouse.Hit.Position)
					end
				end
			end)

			-- Teleport player when mouse is clicked
			local inputConnection
			inputConnection = userInputService.InputBegan:Connect(function(input)
				if isEnabled and input.UserInputType == Enum.UserInputType.MouseButton1 then
					local mouse = Players.LocalPlayer:GetMouse()
					if mouse and mouse.Target and mouse.Target ~= previewPart and mouse.Target.Name ~= "Snow" then
						local targetPosition = mouse.Hit.Position

						-- Teleport player to target position
						local player = Players.LocalPlayer
						local character = player.Character
						if character and character:FindFirstChild("HumanoidRootPart") then
							character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
						end

						-- Hide the preview part after teleportation
						previewPart.Position = Vector3.new(10000, 10000, 10000) -- Large values to move out of view
					end
				end
			end)

			-- Clean up connections when stopping
			local function cleanup()
				if inputConnection then
					inputConnection:Disconnect()
				end
				if mouseMovedConnection then
					mouseMovedConnection:Disconnect()
				end
			end

			return cleanup
		end

		-- Function to stop
		local function stop(cleanup)
			if cleanup then
				cleanup()
			end

			-- Make sure preview part is hidden when stopping
			previewPart.Position = Vector3.new(10000, 10000, 10000) -- Large values to move out of view
		end

		-- Function to toggle
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then

				script.Parent.Image = "rbxassetid://18631456665"
				local cleanup = start()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				script.Parent.Image = "rbxassetid://18631459897"
				stop()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_5e);
	-- StarterGui.LithiumAlpha.Main.Movement.fly.Speed.Bar.Thumb.SliderManager
	local function C_67()
		local script = G2L["67"];
		local thumb = script.Parent
		local bar = thumb.Parent
		local frame = bar.Parent
		local textLabel = thumb:WaitForChild("percentage")

		local dragging = false
		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local function updatePosition(input)
			local frameAbsoluteSize = frame.AbsoluteSize.X
			local frameAbsolutePosition = frame.AbsolutePosition.X
			local inputPosition = input.Position.X - 14
			local relativePosition = inputPosition - frameAbsolutePosition

			-- Обновление позиции ползунка, ограничивая его внутри полоски
			local newPosition = math.clamp(relativePosition, 0, frameAbsoluteSize - thumb.AbsoluteSize.X)
			thumb.Position = UDim2.new(0, newPosition, thumb.Position.Y.Scale, thumb.Position.Y.Offset)

			-- Обновление размеров Bar
			bar.Size = UDim2.new(0, newPosition + thumb.AbsoluteSize.X / 2, bar.Size.Y.Scale, bar.Size.Y.Offset)

			-- Обновление текста
			local percentage = math.floor((newPosition / (frameAbsoluteSize - thumb.AbsoluteSize.X)) * 100)
			textLabel.Text = tostring(percentage)

			-- Анимация появления текста
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 0})
			tween:Play()
		end

		thumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				updatePosition(input) -- Обновляем позицию сразу при клике
			end
		end)

		thumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false

				-- Анимация исчезновения текста
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 1})
				tween:Play()
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				updatePosition(input)
			end
		end)

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updatePosition(input)
			end
		end)
	end;
	task.spawn(C_67);
	-- StarterGui.LithiumAlpha.Main.Movement.fly.LocalScript
	local function C_6e()
		local script = G2L["6e"];
		local isEnabled = false
		local fly = false
		local userInputService = game:GetService("UserInputService")
		local rs = game:GetService("RunService")
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local bodyVelocity
		local moveConnection

		-- Get access to buttons
		local button1 = script.Parent:WaitForChild("Type1")
		local button2 = script.Parent:WaitForChild("Type2")

		-- Define colors
		local pressedColor = Color3.fromHex("#4b6f94")
		local unpressedColor = Color3.fromHex("#6fa6dc")

		-- Variable to store the selected button
		local selectedButton = button1

		-- Disable flight function
		local function disableFlight()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if fly then
				fly = false
				humanoid.PlatformStand = false
				if bodyVelocity then
					bodyVelocity:Destroy()
					bodyVelocity = nil
				end
				if moveConnection then
					moveConnection:Disconnect()
					moveConnection = nil
				end
			end
		end

		-- Enable flight function
		local function enableFlight()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if not fly then
				fly = true
				humanoid.PlatformStand = true

				-- Remove old BodyVelocity if present
				if bodyVelocity then
					bodyVelocity:Destroy()
				end

				if selectedButton == button2 then
					-- Create new BodyVelocity for mouse movement flight
					bodyVelocity = Instance.new("BodyVelocity")
					bodyVelocity.Velocity = Vector3.new(0, 0, 0)
					bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
					bodyVelocity.Parent = char.HumanoidRootPart

					-- Movement control
					moveConnection = userInputService.InputChanged:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseMovement then
							local speed = tonumber(script.Parent.Speed.Bar.Thumb.percentage.Text) or 50
							local moveVector = workspace.CurrentCamera.CFrame.LookVector * speed
							bodyVelocity.Velocity = moveVector + Vector3.new(0, 10, 0)
						end
					end)
				else
					-- Variable for keyboard control flight
					local keysDown = {}

					-- Input handlers
					userInputService.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.Keyboard then
							keysDown[input.KeyCode] = true
						end
					end)

					userInputService.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.Keyboard then
							keysDown[input.KeyCode] = false
						end
					end)

					-- Movement loop
					rs.RenderStepped:Connect(function()
						if not fly then return end

						local speed = tonumber(script.Parent.Speed.Bar.Thumb.percentage.Text) or 50
						local camera = workspace.CurrentCamera
						local lookVector = camera.CFrame.LookVector
						local direction = Vector3.new(0, 0, 0)

						-- Movement directions based on camera look vector
						if keysDown[Enum.KeyCode.W] then
							direction = direction + lookVector
						end
						if keysDown[Enum.KeyCode.S] then
							direction = direction - lookVector
						end
						if keysDown[Enum.KeyCode.A] then
							direction = direction - camera.CFrame.RightVector
						end
						if keysDown[Enum.KeyCode.D] then
							direction = direction + camera.CFrame.RightVector
						end
						if keysDown[Enum.KeyCode.Space] then
							direction = direction + Vector3.new(0, 1, 0)
						end
						if keysDown[Enum.KeyCode.LeftControl] then
							direction = direction - Vector3.new(0, 1, 0)
						end

						-- Normalize and apply velocity
						if direction.Magnitude > 0 then
							direction = direction.Unit * speed
						end

						char.HumanoidRootPart.Velocity = direction
						char.HumanoidRootPart.CFrame = CFrame.new(char.HumanoidRootPart.Position, char.HumanoidRootPart.Position + camera.CFrame.LookVector)
					end)
				end
			end
		end

		-- Update button colors based on selection
		local function updateButtonColors()
			button1.BackgroundColor3 = (selectedButton == button1) and pressedColor or unpressedColor
			button2.BackgroundColor3 = (selectedButton == button2) and pressedColor or unpressedColor
		end

		-- Refresh function to update flight settings based on current button selection
		local function refresh()
			if fly then
				disableFlight()
				enableFlight()
			end
		end

		-- Button click handlers
		button1.MouseButton1Click:Connect(function()
			selectedButton = button1
			updateButtonColors()
			if isEnabled then
				refresh()
			end
		end)

		button2.MouseButton1Click:Connect(function()
			selectedButton = button2
			updateButtonColors()
			if isEnabled then
				refresh()
			end
		end)

		-- Toggle function
		local function toggle()
			isEnabled = not isEnabled
			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665"
				enableFlight()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				script.Parent.Image = "rbxassetid://18631459897"
				disableFlight()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		script.Parent.MouseButton1Click:Connect(toggle)
		updateButtonColors()

	end;
	task.spawn(C_6e);
	-- StarterGui.LithiumAlpha.Main.Movement.airstuck.LocalScript
	local function C_70()
		local script = G2L["70"];
		local isenabled = false
		local airstuck = false
		local player = game.Players.LocalPlayer
		local userInputService = game:GetService("UserInputService")
		local rs = game:GetService("RunService")
		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local bodyVelocity
		local moveConnection
		local speedUpdateConnection

		local function disableAirstuck()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if airstuck then
				airstuck = false
				humanoid.PlatformStand = false
				if bodyVelocity then
					bodyVelocity:Destroy()
					bodyVelocity = nil
				end
				if moveConnection then
					moveConnection:Disconnect()
					moveConnection = nil
				end
				if speedUpdateConnection then
					speedUpdateConnection:Disconnect()
					speedUpdateConnection = nil
				end
			end
		end

		local function enableAirstuck()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if not airstuck then
				airstuck = true
				humanoid.PlatformStand = true

				if bodyVelocity then
					bodyVelocity:Destroy()
				end

				bodyVelocity = Instance.new("BodyVelocity")
				bodyVelocity.Velocity = Vector3.new(0, 0, 0)
				bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				bodyVelocity.Parent = char.HumanoidRootPart

				-- Управление движением
				moveConnection = userInputService.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						local moveVector = workspace.CurrentCamera.CFrame.LookVector * nil
						bodyVelocity.Velocity = moveVector + Vector3.new(0, 10, 0)
					end
				end)

				speedUpdateConnection = rs.RenderStepped:Connect(function()
					if airstuck then
						local moveVector = workspace.CurrentCamera.CFrame.LookVector * nil
						bodyVelocity.Velocity = moveVector + Vector3.new(0, 10, 0)
					end
				end)
			end
		end

		-- Функция для переключения состояния
		local function toggle()
			isenabled = not isenabled
			if isenabled then


				script.Parent.Image = "rbxassetid://18631456665"
				enableAirstuck()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				script.Parent.Image = "rbxassetid://18631459897"
				disableAirstuck()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_70);
	-- StarterGui.LithiumAlpha.Main.Rage.Aimbot.LocalScript
	local function C_78()
		local script = G2L["78"];
		-- thank to shinehub
		local button = script.Parent
		local isEnabled = false
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local respawnDelay = 4  -- Задержка после возрождения в секундах
		local lastRespawnTime = 0  -- Время последнего возрождения

		local function isPlayerVisible(player)
			if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
				local currentTime = tick()
				if currentTime - lastRespawnTime < respawnDelay then
					return false  -- В защищенном периоде после возрождения
				end

				local raycastParams = RaycastParams.new()
				raycastParams.FilterDescendantsInstances = {game.Players.LocalPlayer.Character, player.Character}
				raycastParams.IgnoreWater = true

				local localPlayerPosition = game.Players.LocalPlayer.Character.Head.Position
				local otherPlayerPosition = player.Character.Head.Position

				local result = workspace:Raycast(localPlayerPosition, otherPlayerPosition - localPlayerPosition, raycastParams)
				return not (result and result.Instance and result.Instance:IsA("BasePart") and result.Instance.Parent ~= player.Character)
			end
			return false
		end

		local function aimAtClosestPlayer()
			local players = game:GetService("Players"):GetPlayers()
			local closestPlayer = nil
			local closestDistance = math.huge

			for _, player in ipairs(players) do
				if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
					local distance = (player.Character.Head.Position - game.Players.LocalPlayer.Character.Head.Position).magnitude
					if distance < closestDistance and isPlayerVisible(player) then
						closestDistance = distance
						closestPlayer = player
					end
				end
			end

			if closestPlayer then
				local otherPlayerPosition = closestPlayer.Character.Head.Position
				local localPlayerPosition = game.Players.LocalPlayer.Character.Head.Position
				game.Workspace.CurrentCamera.CFrame = CFrame.new(localPlayerPosition, otherPlayerPosition)
			end
		end

		local function toggleImage()
			-- Toggle the isenabled variable
			isEnabled = not isEnabled
			if isEnabled then
				-- Set the button text to green

				script.Parent.Image = "rbxassetid://18631456665"
				-- Enable the crosshair
				aimAtClosestPlayer()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				-- Set the button text to red
				script.Parent.Image = "rbxassetid://18631459897"
				-- Disable the crosshair
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		button.MouseButton1Click:Connect(toggleImage)

		game.Players.PlayerAdded:Connect(function(player)
			player.CharacterAdded:Connect(function(character)
				character:WaitForChild("Humanoid").Died:Connect(function()
					lastRespawnTime = tick()  -- Update respawn time on death
				end)
			end)
		end)

		game:GetService("RunService").RenderStepped:Connect(function()
			if isEnabled then
				aimAtClosestPlayer()
			end
		end)

	end;
	task.spawn(C_78);
	-- StarterGui.LithiumAlpha.Main.Rage.hitbox.LocalScript
	local function C_7c()
		local script = G2L["7c"];
		local isEnabled = false -- состояние активации функционала
		local player = game.Players.LocalPlayer
		local playersService = game:GetService("Players")

		-- Correctly require the NotificationManager and FriendManager modules
		local NotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = NotificationManager() -- Ensure this returns an object with ShowNotification

		local friendManager = require(script.Parent.Parent.Parent.Parent.FriendManager)

		local connections = {} -- Store connections for each player

		-- Function to modify the hitbox of a player
		local function modifyHitbox(otherPlayer, enlarge)
			local character = otherPlayer.Character
			if character then
				local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
				if humanoidRootPart then
					if enlarge then
						humanoidRootPart.Size = Vector3.new(50, 25, 50)
						humanoidRootPart.CanCollide = false
						humanoidRootPart.CanTouch = true
					else
						humanoidRootPart.Size = Vector3.new(2, 2, 1)
						humanoidRootPart.CanCollide = true
						humanoidRootPart.CanTouch = true
					end
				end
			end
		end

		-- Enable function for non-friends
		local function enable()
			for _, otherPlayer in pairs(playersService:GetPlayers()) do
				-- Only enlarge hitboxes for non-friends
				if otherPlayer ~= player and not table.find(friendManager:list(), otherPlayer.Name) then
					-- Listen for character respawn and modify hitbox
					if not connections[otherPlayer] then
						local connection = otherPlayer.CharacterAdded:Connect(function(character)
							-- Wait for HumanoidRootPart to exist
							character:WaitForChild("HumanoidRootPart")
							modifyHitbox(otherPlayer, true)
						end)
						connections[otherPlayer] = connection

						-- Immediately apply to existing characters
						modifyHitbox(otherPlayer, true)
					end
				end
			end
		end

		-- Disable function for non-friends
		local function disable()
			for _, otherPlayer in pairs(playersService:GetPlayers()) do
				-- Only reset hitboxes for non-friends
				if otherPlayer ~= player and not table.find(friendManager:list(), otherPlayer.Name) then
					-- Reset hitbox and disconnect events
					modifyHitbox(otherPlayer, false)

					if connections[otherPlayer] then
						connections[otherPlayer]:Disconnect()
						connections[otherPlayer] = nil
					end
				end
			end
		end

		-- Toggle function for enabling/disabling hitboxes
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665"
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				script.Parent.Image = "rbxassetid://18631459897"
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		script.Parent.MouseButton1Click:Connect(toggle)

		-- Handle new players joining the game
		playersService.PlayerAdded:Connect(function(newPlayer)
			-- Enlarge hitbox only if the player is not a friend
			if isEnabled and newPlayer ~= player and not table.find(friendManager:list(), newPlayer.Name) then
				local connection = newPlayer.CharacterAdded:Connect(function(character)
					-- Wait for HumanoidRootPart to exist
					character:WaitForChild("HumanoidRootPart")
					modifyHitbox(newPlayer, true)
				end)
				connections[newPlayer] = connection

				-- Immediately apply to existing characters
				if newPlayer.Character then
					modifyHitbox(newPlayer, true)
				end
			end
		end)

		-- Handle players leaving the game
		playersService.PlayerRemoving:Connect(function(leavingPlayer)
			if connections[leavingPlayer] then
				connections[leavingPlayer]:Disconnect()
				connections[leavingPlayer] = nil
			end
		end)

	end;
	task.spawn(C_7c);
	-- StarterGui.LithiumAlpha.Main.Rage.aa.LocalScript
	local function C_80()
		local script = G2L["80"];
		local player = game.Players.LocalPlayer
		local button = script.Parent
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local isEnabled = false
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local UserInputService = game:GetService("UserInputService")

		local player = Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

		-- Function to perform anti-aim (rotation only)
		local function performAntiAim()
			local player = Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			if not isEnabled then return end

			-- Get the current CFrame of the HumanoidRootPart
			local currentCFrame = humanoidRootPart.CFrame

			-- Randomly change the Y-axis rotation to create the anti-aim effect
			local randomAngle = math.rad(math.random(-180, 180))
			local newCFrame = CFrame.new(currentCFrame.Position) * CFrame.Angles(0, randomAngle, 0)

			-- Set the new CFrame back to the HumanoidRootPart
			humanoidRootPart.CFrame = newCFrame
		end

		-- Hook the anti-aim function to render step
		RunService.RenderStepped:Connect(function()
			performAntiAim()
		end)

		local function toggle(targetPlayer)
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665"
				notificationManager:ShowNotification("Enabled!", "info")
			else
				button.Image = "rbxassetid://18631459897"
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		button.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_80);
	-- StarterGui.LithiumAlpha.Main.Info.Frame.Build.init
	local function C_85()
		local script = G2L["85"];
		local player = game.Players.LocalPlayer
		local RunService = game:GetService("RunService")

		-- Загружаем модуль с константами
		local constants = require(script.Parent.Parent.Parent.Parent.Parent.Constants)

		-- Подключаемся к Heartbeat
		local buildConnection
		buildConnection = RunService.Heartbeat:Connect(function(deltaTime)
			-- Обновляем текст на экране
			script.Parent.Text = "Build: #" .. constants.build
		end)

		-- Отключение цикла через 10 секунд (опционально, если хотите остановить обновление)
		task.delay(1, function()
			if buildConnection then
				buildConnection:Disconnect()
			end
		end)

	end;
	task.spawn(C_85);
	-- StarterGui.LithiumAlpha.Main.Info.Frame.Version.init
	local function C_87()
		local script = G2L["87"];
		local player = game.Players.LocalPlayer
		local RunService = game:GetService("RunService")

		-- Загружаем модуль с константами
		local constants = require(script.Parent.Parent.Parent.Parent.Parent.Constants)

		-- Подключаемся к Heartbeat
		local buildConnection
		buildConnection = RunService.Heartbeat:Connect(function(deltaTime)
			-- Обновляем текст на экране
			script.Parent.Text = "Version: " .. constants.ver
		end)

		-- Отключение цикла через 10 секунд (опционально, если хотите остановить обновление)
		task.delay(1, function()
			if buildConnection then
				buildConnection:Disconnect()
			end
		end)

	end;
	task.spawn(C_87);
	-- StarterGui.LithiumAlpha.Main.Misc.animbreaker.LocalScript
	local function C_8c()
		local script = G2L["8c"];
		local isenabled = false
		local airstuck = false
		local player = game.Players.LocalPlayer
		local userInputService = game:GetService("UserInputService")
		local rs = game:GetService("RunService")
		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local bodyVelocity
		local moveConnection
		local speedUpdateConnection

		local flySpeed = 60 -- Определите скорость полета

		-- Функция для выключения полета
		local function disableAirstuck()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if airstuck then
				airstuck = false
				humanoid.PlatformStand = false
				if bodyVelocity then
					bodyVelocity:Destroy()
					bodyVelocity = nil
				end
				if moveConnection then
					moveConnection:Disconnect()
					moveConnection = nil
				end
				if speedUpdateConnection then
					speedUpdateConnection:Disconnect()
					speedUpdateConnection = nil
				end
			end
		end

		-- Функция для включения полета
		local function enableAirstuck()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if not airstuck then
				airstuck = true
				humanoid.PlatformStand = true

				-- Удаляем старый BodyVelocity, если он есть
				if bodyVelocity then
					bodyVelocity:Destroy()
				end

				-- Создаем новый BodyVelocity
				bodyVelocity = Instance.new("BodyVelocity")
				bodyVelocity.Velocity = Vector3.new(0, 0, 0)
				bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				bodyVelocity.Parent = char.HumanoidRootPart

				-- Управление движением
				moveConnection = userInputService.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						local moveVector = workspace.CurrentCamera.CFrame.LookVector * (flySpeed / (0)) -- Избегаем деления на ноль
						bodyVelocity.Velocity = moveVector + Vector3.new(0, 10, 0)
					end
				end)

				-- Обновление скорости полета
				speedUpdateConnection = rs.RenderStepped:Connect(function()
					if airstuck then
						local moveVector = workspace.CurrentCamera.CFrame.LookVector * (flySpeed / (0)) -- Избегаем деления на ноль
						bodyVelocity.Velocity = moveVector + Vector3.new(0, 10, 0)
					end
				end)
			end
		end

		-- Функция для переключения состояния
		local function button()
			enableAirstuck()
			wait(0.5)
			disableAirstuck()
			wait(0.5)
			enableAirstuck()
			wait(0.5)
			notificationManager:ShowNotification("Clicked!", "info")
		end

		script.Parent.MouseButton1Click:Connect(button)

	end;
	task.spawn(C_8c);
	-- StarterGui.LithiumAlpha.Main.Misc.lage.LocalScript
	local function C_90()
		local script = G2L["90"];
		local isenabled = false
		local airstuck = false
		local player = game.Players.LocalPlayer
		local userInputService = game:GetService("UserInputService")
		local rs = game:GetService("RunService")
		-- Получаем функцию для доступа к NotificationManager
		-- Загружаем модуль с константами
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local bodyVelocity
		local moveConnection
		local speedUpdateConnection
		local animbreakerUpdateConnection

		local flySpeed = 60 -- Определите скорость полета

		-- Функция для выключения полета
		local function disableAirstuck()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if airstuck then
				airstuck = false
				humanoid.PlatformStand = false
				if bodyVelocity then
					bodyVelocity:Destroy()
					bodyVelocity = nil
				end
				if moveConnection then
					moveConnection:Disconnect()
					moveConnection = nil
				end
				if speedUpdateConnection then
					speedUpdateConnection:Disconnect()
					speedUpdateConnection = nil
				end
			end
		end

		-- Функция для включения полета
		local function enableAirstuck()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			if not airstuck then
				airstuck = true
				humanoid.PlatformStand = true

				-- Удаляем старый BodyVelocity, если он есть
				if bodyVelocity then
					bodyVelocity:Destroy()
				end

				-- Создаем новый BodyVelocity
				bodyVelocity = Instance.new("BodyVelocity")
				bodyVelocity.Velocity = Vector3.new(0, 0, 0)
				bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				bodyVelocity.Parent = char.HumanoidRootPart

				-- Управление движением
				moveConnection = userInputService.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						local moveVector = workspace.CurrentCamera.CFrame.LookVector * (flySpeed / (0)) -- Избегаем деления на ноль
						bodyVelocity.Velocity = moveVector + Vector3.new(0, 10, 0)
					end
				end)

				-- Обновление скорости полета
				speedUpdateConnection = rs.RenderStepped:Connect(function()
					if airstuck then
						local moveVector = workspace.CurrentCamera.CFrame.LookVector * (flySpeed / (0)) -- Избегаем деления на ноль
						bodyVelocity.Velocity = moveVector + Vector3.new(0, 10, 0)
					end
				end)
			end
		end

		-- Функция для переключения состояния
		local function button()
			-- Обновление скорости полета

			isenabled = not isenabled
			if isenabled then
				animbreakerUpdateConnection = rs.RenderStepped:Connect(function()

					script.Parent.Image = "rbxassetid://18631456665"
					enableAirstuck()
					wait(0.5)
					disableAirstuck()
					script.Parent.Image = "rbxassetid://18631459897"
				end)
				notificationManager:ShowNotification("Enabled!", "info")
			else 
				animbreakerUpdateConnection:Disconnect()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		script.Parent.MouseButton1Click:Connect(button)

	end;
	task.spawn(C_90);
	-- StarterGui.LithiumAlpha.Main.Misc.nfd.LocalScript
	local function C_94()
		local script = G2L["94"];
		local player = game.Players.LocalPlayer

		local button = script.Parent

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local friendmanager = require(script.Parent.Parent.Parent.Parent.FriendManager)

		local list = friendmanager:list() -- table list of friends 

		local isEnabled = false

		local function enabled()
			for _, targetPlayer in pairs(game.Players:GetPlayers()) do
				if table.find(list, targetPlayer.Name) then
					local character = targetPlayer.Character
					if character and character:FindFirstChild("HumanoidRootPart") then
						character.HumanoidRootPart.Size = Vector3.new(0, 0, 0) -- Make hitbox invisible

						local parts = targetPlayer:GetChildren()
						parts.CanCollide = false
					end
				end
			end
		end

		local function disabled()
			for _, targetPlayer in pairs(game.Players:GetPlayers()) do
				if table.find(list, targetPlayer.Name) then
					local character = targetPlayer.Character
					if character and character:FindFirstChild("HumanoidRootPart") then
						character.HumanoidRootPart.Size = Vector3.new(2, 2, 1) -- Restore hitbox size

						local parts = targetPlayer:GetChildren()
						parts.CanCollide = true
					end
				end
			end
		end

		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665" -- Иконка включенного состояния
				enabled()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				script.Parent.Image = "rbxassetid://18631459897" -- Иконка выключенного состояния
				disabled()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_94);
	-- StarterGui.LithiumAlpha.Main.Misc.acsinfo.LocalScript
	local function C_97()
		local script = G2L["97"];
		local player = game.Players.LocalPlayer
		local button = script.Parent

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local acs = require(script.Parent.Parent.Parent.Parent.AcManager)

		-- Создаем пустую таблицу для хранения имен античитов
		local antiCheatNames = {}

		-- Проходим по всем элементам в таблице acs
		for key, value in pairs(acs) do
			-- Проверяем, существует ли путь к античиту
			if value.path then
				-- Добавляем имя античита в таблицу antiCheatNames
				table.insert(antiCheatNames, value.name)
			else
				-- Если путь не существует, выводим предупреждение (не обязательно)
				print("Path not found for: " .. value.name)
			end
		end

		-- Преобразуем таблицу antiCheatNames в строку, разделенную запятыми
		local antiCheatList = table.concat(antiCheatNames, ", ")

		-- Функция для проверки и показа уведомления
		local function enabled()
			if next(antiCheatNames) then
				notificationManager:ShowNotification("AntiCheats found: " .. antiCheatList, "info")
			else
				notificationManager:ShowNotification("AntiCheats not found", "info")
			end
		end

		-- Функция переключения
		local function toggle()
			enabled()
		end

		-- Подключаем обработчик события нажатия на кнопку
		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_97);
	-- StarterGui.LithiumAlpha.Main.Misc.Console.LocalScript
	local function C_9c()
		local script = G2L["9c"];
		local player = game.Players.LocalPlayer

		local button = script.Parent

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local isEnabled = false

		local function enabled()
			script.Parent.Parent.Parent.Parent.Console.Visible = true
		end

		local function disabled()
			script.Parent.Parent.Parent.Parent.Console.Visible = false
		end

		local function toggle(targetPlayer)
			isEnabled = not isEnabled

			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665" -- Иконка включенного состояния
				enabled()
				notificationManager:ShowNotification("Enabled!", "info") -- именно тут никак иначе
			else
				script.Parent.Image = "rbxassetid://18631459897" -- Иконка выключенного состояния
				disabled()
				notificationManager:ShowNotification("Disabled!", "info") -- именно тут никак иначе
			end
		end

		button.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_9c);
	-- StarterGui.LithiumAlpha.Main.Visual2.Fog.LocalScript
	local function C_a1()
		local script = G2L["a1"];
		-- Variable to keep track of whether the fog is enabled
		local isEnabled = false

		-- Save the original fog settings
		local originalFogStart = game.Lighting.FogStart
		local originalFogEnd = game.Lighting.FogEnd
		local originalFogColor = game.Lighting.FogColor
		local originaltimeofday = game.Lighting.TimeOfDay
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Function to update fog settings
		local function updateFog()
			if isEnabled then
				game.Lighting.FogStart = 10 
				game.Lighting.FogEnd = 120 
				game.Lighting.FogColor = Color3.new(0,0,0)
				game.Lighting.TimeOfDay = "00:00"
			else
				game.Lighting.FogStart = originalFogStart
				game.Lighting.FogEnd = originalFogEnd
				game.Lighting.FogColor = originalFogColor
				game.Lighting.TimeOfDay = originaltimeofday
			end
		end

		-- Function to toggle fog state
		local function toggleFog()
			isEnabled = not isEnabled
			if isEnabled then

				-- Set the button image to 'enabled'
				script.Parent.Image = "rbxassetid://18631456665" -- Image ID for 'enabled' state
				notificationManager:ShowNotification("Enabled!", "info")
			else

				-- Set the button image to 'disabled'
				script.Parent.Image = "rbxassetid://18631459897" -- Image ID for 'disabled' state
				notificationManager:ShowNotification("Disabled!", "info")
			end
			updateFog()
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggleFog)

	end;
	task.spawn(C_a1);
	-- StarterGui.LithiumAlpha.Main.Visual2.coords.LocalScript
	local function C_a8()
		local script = G2L["a8"];
		-- Variable to keep track of whether the fog is enabled
		local isEnabled = false

		-- Save the original fog settings
		local originalFogStart = game.Lighting.FogStart
		local originalFogEnd = game.Lighting.FogEnd
		local originalFogColor = game.Lighting.FogColor
		local originaltimeofday = game.Lighting.TimeOfDay
		local player = game.Players.LocalPlayer
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Function to update fog settings
		local function disable()
			script.Parent.Parent.Parent.Parent.Coords.Visible = false
		end

		-- Function to update fog settings
		local function enable()
			script.Parent.Parent.Parent.Parent.Coords.Visible = true
		end

		-- Function to toggle fog state
		local function toggleFog()
			isEnabled = not isEnabled
			if isEnabled then
				enable()
				-- Set the button image to 'enabled'
				script.Parent.Image = "rbxassetid://18631456665" -- Image ID for 'enabled' state
				notificationManager:ShowNotification("Enabled!", "info")
			else
				disable()
				-- Set the button image to 'disabled'
				script.Parent.Image = "rbxassetid://18631459897" -- Image ID for 'disabled' state
				notificationManager:ShowNotification("Disabled!", "info")
			end

		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggleFog)

	end;
	task.spawn(C_a8);
	-- StarterGui.LithiumAlpha.Main.Visual2.fov.LocalScript
	local function C_ac()
		local script = G2L["ac"];
		local isEnabled = false
		local enhancedFOV = nil
		local defaultFOV = nil

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local player = game.Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		local RunService = game:GetService("RunService")
		local updateconnection

		-- Function to update the camera FOV
		local function setFOV(fov)
			if camera then
				camera.FieldOfView = fov
			end
		end

		-- Function to start
		local function enable()
			if not defaultFOV then
				defaultFOV = camera.FieldOfView  -- Запоминаем текущее значение FOV, если оно не задано
			end

			updateconnection = RunService.Heartbeat:Connect(function()
				enhancedFOV = tonumber(script.Parent.fov.Bar.Thumb.percentage.Text)
				if enhancedFOV then
					setFOV(enhancedFOV)  -- Устанавливаем увеличенное FOV
				end
			end)
		end

		-- Function to disable
		local function disable()
			if updateconnection then
				updateconnection:Disconnect()
				updateconnection = nil  -- Обязательно обнуляем ссылку на соединение
			end

			if defaultFOV then
				setFOV(defaultFOV)  -- Возвращаем стандартное FOV
			end
		end

		-- Function to toggle
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665"  -- Иконка для включенного состояния
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				script.Parent.Image = "rbxassetid://18631459897"  -- Иконка для выключенного состояния
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_ac);
	-- StarterGui.LithiumAlpha.Main.Visual2.fov.fov.Bar.Thumb.SliderManager
	local function C_b4()
		local script = G2L["b4"];
		local thumb = script.Parent
		local bar = thumb.Parent
		local frame = bar.Parent
		local textLabel = thumb:WaitForChild("percentage")

		local dragging = false
		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local function updatePosition(input)
			local frameAbsoluteSize = frame.AbsoluteSize.X
			local frameAbsolutePosition = frame.AbsolutePosition.X
			local inputPosition = input.Position.X - 14
			local relativePosition = inputPosition - frameAbsolutePosition

			-- Обновление позиции ползунка, ограничивая его внутри полоски
			local newPosition = math.clamp(relativePosition, 0, frameAbsoluteSize - thumb.AbsoluteSize.X)
			thumb.Position = UDim2.new(0, newPosition, thumb.Position.Y.Scale, thumb.Position.Y.Offset)

			-- Обновление размеров Bar
			bar.Size = UDim2.new(0, newPosition + thumb.AbsoluteSize.X / 2, bar.Size.Y.Scale, bar.Size.Y.Offset)

			-- Обновление текста
			local percentage = math.floor((newPosition / (frameAbsoluteSize - thumb.AbsoluteSize.X)) * 120)
			textLabel.Text = tostring(percentage)

			-- Анимация появления текста
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 0})
			tween:Play()
		end

		thumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				updatePosition(input) -- Обновляем позицию сразу при клике
			end
		end)

		thumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false

				-- Анимация исчезновения текста
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 1})
				tween:Play()
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				updatePosition(input)
			end
		end)

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updatePosition(input)
			end
		end)
	end;
	task.spawn(C_b4);
	-- StarterGui.LithiumAlpha.Main.Visual2.optimization.LocalScript
	local function C_b8()
		local script = G2L["b8"];
		local player = game.Players.LocalPlayer
		local button = script.Parent
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local isEnabled = false

		-- Получение сервиса для обработки частоты обновления
		local lighting = game:GetService("Lighting")
		local terrain = workspace.Terrain

		-- Таблицы для хранения исходных настроек
		local originalMaterials = {}
		local originalShadows = {}
		local originalPostProcessing = {}
		local originalTerrainSettings = {}

		-- Сохранение постобработки
		local function savePostProcessing()
			local effects = lighting:FindFirstChild("PostProcessingEffects")
			if effects then
				originalPostProcessing.Bloom = effects.Bloom.Enabled
				originalPostProcessing.ColorCorrection = effects.ColorCorrection.Enabled
				originalPostProcessing.DepthOfField = effects.DepthOfField.Enabled
				originalPostProcessing.SunRays = effects.SunRays.Enabled
				originalPostProcessing.ThreeD = effects.ThreeD.Enabled
			end
		end

		-- Восстановление постобработки
		local function restorePostProcessing()
			local effects = lighting:FindFirstChild("PostProcessingEffects")
			if effects then
				effects.Bloom.Enabled = originalPostProcessing.Bloom
				effects.ColorCorrection.Enabled = originalPostProcessing.ColorCorrection
				effects.DepthOfField.Enabled = originalPostProcessing.DepthOfField
				effects.SunRays.Enabled = originalPostProcessing.SunRays
				effects.ThreeD.Enabled = originalPostProcessing.ThreeD
			end
		end

		-- Сохранение настроек теней и материалов
		local function saveSettings()
			for _, obj in ipairs(workspace:GetDescendants()) do
				if obj:IsA("BasePart") then
					if not originalMaterials[obj] then
						originalMaterials[obj] = obj.Material
						originalShadows[obj] = obj.CastShadow
					end
				end
			end

			-- Сохранение настроек Terrain
			originalTerrainSettings.WaterColor = terrain.WaterColor
			originalTerrainSettings.WaterTransparency = terrain.WaterTransparency
		end

		-- Восстановление настроек теней и материалов
		local function restoreSettings()
			for obj, originalMaterial in pairs(originalMaterials) do
				if obj and obj:IsA("BasePart") then
					obj.Material = originalMaterial
					obj.CastShadow = originalShadows[obj]
				end
			end

			-- Восстановление настроек Terrain
			terrain.WaterColor = originalTerrainSettings.WaterColor
			terrain.WaterTransparency = originalTerrainSettings.WaterTransparency
		end

		-- Оптимизация: Отключение теней, бликов и изменение материалов
		local function enableOptimization()
			saveSettings()
			savePostProcessing()

			-- Отключение теней и изменение материалов
			for _, obj in ipairs(workspace:GetDescendants()) do
				if obj:IsA("BasePart") then
					obj.CastShadow = false
					obj.Material = Enum.Material.SmoothPlastic
				end
			end

			-- Отключение постобработки
			local effects = lighting:FindFirstChild("PostProcessingEffects")
			if effects then
				effects.Bloom.Enabled = false
				effects.ColorCorrection.Enabled = false
				effects.DepthOfField.Enabled = false
				effects.SunRays.Enabled = false
				effects.ThreeD.Enabled = false
			end

			-- Оптимизация Terrain
			terrain.WaterColor = Color3.fromRGB(0, 0, 0) -- Пример, меняет цвет воды на черный
			terrain.WaterTransparency = 0 -- Прозрачность воды на 100%
		end

		-- Восстановление настроек по умолчанию
		local function disableOptimization()
			restoreSettings()
			restorePostProcessing()
		end

		-- Переключение состояния оптимизации
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665"
				enableOptimization()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				button.Image = "rbxassetid://18631459897"
				disableOptimization()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_b8);
	-- StarterGui.LithiumAlpha.Main.Visual2.jumpcircles.LocalScript
	local function C_bc()
		local script = G2L["bc"];
		local player = game.Players.LocalPlayer
		local button = script.Parent
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local isEnabled = false

		-- Получение сервиса для обработки частоты обновления
		local TweenService = game:GetService("TweenService")

		-- Create a new circle part
		local function createCircle(position)
			local circle = Instance.new("Part")
			circle.Parent = game.Workspace
			circle.Name = "jumpcirclel"
			circle.Shape = Enum.PartType.Cylinder
			circle.Size = Vector3.new(0.001, 3.424, 3.507)
			circle.Position = position - Vector3.new(0, 3, 0) -- Position circle beneath player
			circle.Orientation = Vector3.new(0, 0, -90) -- Correct orientation setting
			circle.CanQuery = true
			circle.CanTouch = true
			circle.CanCollide = false
			circle.Anchored = true
			circle.Transparency = 1

			local decal = Instance.new("Decal")
			decal.Parent = circle
			decal.Name = "DecalL" -- Correctly name the decal
			decal.ZIndex = 1
			decal.Transparency = 0
			decal.Texture = "rbxassetid://18766153688"
			decal.Face = Enum.NormalId.Left

			-- Define the tween info (time, easing style, and easing direction)
			local tweenInfo = TweenInfo.new(
				0.5, -- Time for the tween (seconds)
				Enum.EasingStyle.Bounce, -- Easing style (Bounce for a cool effect)
				Enum.EasingDirection.Out, -- Easing direction
				0, -- Number of times to repeat (0 means no repeat)
				true, -- Should it reverse?
				0 -- Delay before the tween starts
			)

			-- Define the size tween goals (what properties to change)
			local sizeGoals = {
				Size = circle.Size * 2, -- Double the size for the effect
			}

			-- Create the size tween
			local sizeTween = TweenService:Create(circle, tweenInfo, sizeGoals)

			-- Play the size tween
			sizeTween:Play()

			-- Remove circle after a short delay
			game:GetService("Debris"):AddItem(circle, 1)
		end

		-- Get the player character and humanoid
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")

		-- Listen for the Jumping event
		humanoid.StateChanged:Connect(function(oldState, newState)
			if isEnabled then
				if newState == Enum.HumanoidStateType.Jumping then
					local rootPart = character:WaitForChild("HumanoidRootPart")
					local position = rootPart.Position

					-- Create a circle when jumping
					createCircle(position)
				end
			end
		end)

		-- Переключение состояния оптимизации
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665"
				notificationManager:ShowNotification("Enabled!", "info")
			else
				button.Image = "rbxassetid://18631459897"
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_bc);
	-- StarterGui.LithiumAlpha.Main.Movement2.noclip.LocalScript
	local function C_c4()
		local script = G2L["c4"];
		local isenabled = false
		local noclipEnabled = false -- состояние активации noclip
		-- Получаем локального игрока
		local player = game.Players.LocalPlayer
		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Функция для включения Noclip
		local function enableNoclip()
			noclipEnabled = true
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()

			local function noclipStep()
				if noclipEnabled and character then
					for _, part in ipairs(character:GetDescendants()) do
						if part:IsA("BasePart") then
							part.CanCollide = false -- отключаем столкновения для всех частей модели персонажа
						end
					end
				end
			end

			game:GetService("RunService").Stepped:Connect(noclipStep)
		end

		-- Функция для отключения Noclip
		local function disableNoclip()
			noclipEnabled = false
			local player = game.Players.LocalPlayer
			local character = player.Character

			if character then
				for _, part in ipairs(character:GetDescendants()) do
					if part:IsA("BasePart") then
						part.CanCollide = true -- включаем столкновения для всех частей модели персонажа
					end
				end
			end
		end

		local function toggle()
			isenabled = not isenabled
			if isenabled then

				script.Parent.Image = "rbxassetid://18631456665"
				enableNoclip()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				script.Parent.Image = "rbxassetid://18631459897"
				disableNoclip()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_c4);
	-- StarterGui.LithiumAlpha.Main.Movement2.levitation.LocalScript
	local function C_c7()
		local script = G2L["c7"];
		-- Получаем локального игрока
		local player = game.Players.LocalPlayer

		-- Получаем кнопку
		local button = script.Parent

		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Переменная для отслеживания включения
		local isEnabled = false

		-- Переменная для отслеживания прыжка
		local isJumping = false

		-- Функция включения прыжка
		local function enabled()
			isJumping = true
			while isJumping do
				local character = player.Character
				if character and character:FindFirstChild("Humanoid") then
					character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				end
				wait(0.1) -- Добавляем задержку для более плавных прыжков
			end
		end

		-- Функция выключения прыжка
		local function disabled()
			isJumping = false
		end

		-- Функция переключения состояния
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665" -- Иконка включенного состояния
				spawn(enabled) -- Запускаем fling в отдельном потоке
				notificationManager:ShowNotification("Enabled!", "info") -- Показываем уведомление о включении
			else
				button.Image = "rbxassetid://18631459897" -- Иконка выключенного состояния
				disabled() -- Останавливаем прыжки
				notificationManager:ShowNotification("Disabled!", "info") -- Показываем уведомление о выключении
			end
		end

		-- Подключаем функцию toggle к событию нажатия кнопки
		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_c7);
	-- StarterGui.LithiumAlpha.Main.Movement2.InfiniteJump.LocalScript
	local function C_ca()
		local script = G2L["ca"];
		-- Получаем локального игрока
		local player = game.Players.LocalPlayer

		-- Получаем кнопку
		local button = script.Parent

		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Переменная для отслеживания включения
		local isEnabled = false

		-- Функция для включения бесконечного прыжка
		local function enabled()
			-- Подключаем обработчик события для нажатия клавиши
			game:GetService("UserInputService").InputBegan:Connect(function(input, isTyping)
				if isTyping then return end -- Игнорируем ввод, если игрок печатает в чате
				if input.KeyCode == Enum.KeyCode.Space then
					if isEnabled then
						local character = player.Character
						if character and character:FindFirstChild("Humanoid") then
							character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						end
					end
				end
			end)
		end

		-- Функция для выключения бесконечного прыжка
		local function disabled()
			-- Здесь мы можем добавить логику, если нужно что-то делать при выключении
		end

		-- Функция переключения состояния
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665" -- Иконка включенного состояния
				enabled() -- Включаем бесконечный прыжок
				notificationManager:ShowNotification("Enabled!", "info") -- Уведомление о включении
			else
				button.Image = "rbxassetid://18631459897" -- Иконка выключенного состояния
				disabled() -- Выключаем бесконечный прыжок
				notificationManager:ShowNotification("Disabled!", "info") -- Уведомление о выключении
			end
		end

		-- Подключаем функцию toggle к событию нажатия кнопки
		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_ca);
	-- StarterGui.LithiumAlpha.Main.Movement2.nws.LocalScript
	local function C_cd()
		local script = G2L["cd"];
		-- Получаем локального игрока
		local player = game.Players.LocalPlayer

		-- Получаем кнопку
		local button = script.Parent

		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Переменная для отслеживания включения
		local isEnabled = false

		-- Variables
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		local humanoid = character:WaitForChild("Humanoid")
		local userInputService = game:GetService("UserInputService")
		local runService = game:GetService("RunService")

		-- Function to check if the player is on water
		local function isOnWater()
			local rayOrigin = humanoidRootPart.Position
			local rayDirection = Vector3.new(0, -10, 0) -- Raycast downwards
			local raycastParams = RaycastParams.new()
			raycastParams.FilterDescendantsInstances = {character} -- Ignore the player's own character

			-- Cast the ray
			local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

			if raycastResult then
				local hitPart = raycastResult.Instance
				if hitPart:IsA("Terrain") then
					local region = Region3.new(
						raycastResult.Position - Vector3.new(1, 1, 1),
						raycastResult.Position + Vector3.new(1, 1, 1)
					)
					local material = workspace.Terrain:ReadVoxels(region, 4)
					return material == Enum.Material.Water
				end
			end
			return false
		end

		-- Function to make the player walk on water
		local function walkOnWater()
			if isEnabled then
				if isOnWater() then
					humanoid:ChangeState(Enum.HumanoidStateType.Physics) -- Disable default physics
					humanoidRootPart.Velocity = Vector3.new(humanoidRootPart.Velocity.X, 0, humanoidRootPart.Velocity.Z) -- Maintain horizontal velocity
					humanoidRootPart.Position = humanoidRootPart.Position + Vector3.new(0, humanoidRootPart.Size.Y / 2, 0) -- Set position above water
				else
					humanoid:ChangeState(Enum.HumanoidStateType.Running) -- Enable default physics when not on water
				end
			else
				humanoid:ChangeState(Enum.HumanoidStateType.Running) -- Ensure default physics when disabled
			end
		end

		-- Функция переключения состояния
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665" -- Иконка включенного состояния
				notificationManager:ShowNotification("Enabled!", "info") -- Уведомление о включении
			else
				button.Image = "rbxassetid://18631459897" -- Иконка выключенного состояния
				notificationManager:ShowNotification("Disabled!", "info") -- Уведомление о выключении
			end
		end

		-- Подключаем функцию toggle к событию нажатия кнопки
		button.MouseButton1Click:Connect(toggle)

		-- Bind the function to the RenderStepped event for smooth execution
		runService.RenderStepped:Connect(function()
			if isEnabled then
				walkOnWater()
			end
		end)

	end;
	task.spawn(C_cd);
	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.LocalScript
	local function C_d0()
		local script = G2L["d0"];
		-- Получаем локального игрока
		local player = game.Players.LocalPlayer

		-- Получаем кнопку
		local button = script.Parent

		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Переменная для отслеживания включения
		local isEnabled = false

		-- Переменная для хранения текущего значения гравитации
		local originalGravity = workspace.Gravity

		-- Получаем ссылку на слайдер и его значение
		local slider = script.Parent:WaitForChild("Speed"):WaitForChild("Bar"):WaitForChild("Thumb"):WaitForChild("percentage")

		-- Переменная для хранения связи с Heartbeat
		local heartbeatConnection

		-- Функция для активации/деактивации антигравитации
		local function setAntiGravity(enabled)
			if enabled then
				-- Обновляем гравитацию на основе значения слайдера каждое обновление кадра
				heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
					local sliderValue = tonumber(slider.Text) or 0
					workspace.Gravity = sliderValue
				end)
			else
				-- Возвращаем оригинальное значение гравитации и отключаем Heartbeat
				workspace.Gravity = originalGravity
				if heartbeatConnection then
					heartbeatConnection:Disconnect()
					heartbeatConnection = nil
				end
			end
		end

		-- Функция для включения антигравитации
		local function enableAntiGravity()
			setAntiGravity(true)
		end

		-- Функция для отключения антигравитации
		local function disableAntiGravity()
			setAntiGravity(false)
		end

		-- Функция для включения/выключения антигравитации
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665" -- Иконка включенного состояния
				enableAntiGravity() -- Запускаем антигравитацию
				notificationManager:ShowNotification("AntiGravity Enabled!", "info") -- именно тут никак иначе
			else
				button.Image = "rbxassetid://18631459897" -- Иконка выключенного состояния
				disableAntiGravity() -- Отключаем антигравитацию
				notificationManager:ShowNotification("AntiGravity Disabled!", "info") -- именно тут никак иначе
			end
		end

		-- Подключение функции toggle к клику на кнопку
		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_d0);
	-- StarterGui.LithiumAlpha.Main.Movement2.gravity.Speed.Bar.Thumb.SliderManager
	local function C_d8()
		local script = G2L["d8"];
		local thumb = script.Parent
		local bar = thumb.Parent
		local frame = bar.Parent
		local textLabel = thumb:WaitForChild("percentage")

		local dragging = false
		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local function updatePosition(input)
			local frameAbsoluteSize = frame.AbsoluteSize.X
			local frameAbsolutePosition = frame.AbsolutePosition.X
			local inputPosition = input.Position.X - 14
			local relativePosition = inputPosition - frameAbsolutePosition

			-- Обновление позиции ползунка, ограничивая его внутри полоски
			local newPosition = math.clamp(relativePosition, 0, frameAbsoluteSize - thumb.AbsoluteSize.X)
			thumb.Position = UDim2.new(0, newPosition, thumb.Position.Y.Scale, thumb.Position.Y.Offset)

			-- Обновление размеров Bar
			bar.Size = UDim2.new(0, newPosition + thumb.AbsoluteSize.X / 2, bar.Size.Y.Scale, bar.Size.Y.Offset)

			-- Обновление текста
			local percentage = math.floor((newPosition / (frameAbsoluteSize - thumb.AbsoluteSize.X)) * 1000)
			textLabel.Text = tostring(percentage)

			-- Анимация появления текста
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 0})
			tween:Play()
		end

		thumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				updatePosition(input) -- Обновляем позицию сразу при клике
			end
		end)

		thumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false

				-- Анимация исчезновения текста
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 1})
				tween:Play()
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				updatePosition(input)
			end
		end)

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updatePosition(input)
			end
		end)
	end;
	task.spawn(C_d8);
	-- StarterGui.LithiumAlpha.Main.Movement3.tptoplayer.LocalScript
	local function C_df()
		local script = G2L["df"];
		local isEnabled = false
		local noclipEnabled = false -- состояние активации noclip

		-- Получаем локального игрока
		local player = game.Players.LocalPlayer

		-- Получаем функцию для доступа к NotificationManager
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Функция для включения Noclip
		local function enable()
			local Players = game:GetService("Players")
			local player = Players.LocalPlayer
			local character = player.Character
			local targetPlayerName = script.Parent.TextBox.Text
			local targetPlayer = Players:FindFirstChild(targetPlayerName)

			if character and character:FindFirstChild("HumanoidRootPart") then
				print("Player's HumanoidRootPart found.")
			else
				print("Player's HumanoidRootPart not found.")
			end

			if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
				print("Target player's HumanoidRootPart found.")
			else
				print("Target player's HumanoidRootPart not found.")
			end

			if character and targetPlayer and targetPlayer.Character then
				-- Установка позиции игрока на позицию целевого игрока
				character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
				print("tptoplayer enabled: Player's position set to target player's position.")
			else
				print("Character or target player not found.")
			end
		end

		local function toggle()
			enable()
			notificationManager:ShowNotification("Clicked!", "info")
		end

		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_df);
	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.LocalScript
	local function C_e4()
		local script = G2L["e4"];
		-- AirWalkToggleScript
		local userInputService = game:GetService("UserInputService")
		local runService = game:GetService("RunService")
		local button = script.Parent
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local isEnabled = false
		local bodyVelocity

		local function getHumanoidRootPart(character)
			return character:WaitForChild("HumanoidRootPart", 5) -- Установите таймаут в 5 секунд
		end

		local function updateAirWalk()
			if not isEnabled then
				if bodyVelocity then
					bodyVelocity:Destroy()
					bodyVelocity = nil
				end
				return
			end

			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = getHumanoidRootPart(character)
			if not humanoidRootPart then
				return
			end

			local walkSpeed = character:WaitForChild("Humanoid").WalkSpeed
			local camera = workspace.CurrentCamera
			local moveDirection = Vector3.new()

			if userInputService:IsKeyDown(Enum.KeyCode.W) then
				moveDirection = moveDirection + camera.CFrame.LookVector
			end
			if userInputService:IsKeyDown(Enum.KeyCode.S) then
				moveDirection = moveDirection - camera.CFrame.LookVector
			end
			if userInputService:IsKeyDown(Enum.KeyCode.A) then
				moveDirection = moveDirection - camera.CFrame.RightVector
			end
			if userInputService:IsKeyDown(Enum.KeyCode.D) then
				moveDirection = moveDirection + camera.CFrame.RightVector
			end

			if moveDirection.Magnitude > 0 then
				moveDirection = moveDirection.Unit * walkSpeed
				if not bodyVelocity then
					bodyVelocity = Instance.new("BodyVelocity")
					bodyVelocity.MaxForce = Vector3.new(4000, 0, 4000)
					bodyVelocity.Parent = humanoidRootPart
				end
				bodyVelocity.Velocity = Vector3.new(moveDirection.X, humanoidRootPart.Velocity.Y, moveDirection.Z)
			else
				if bodyVelocity then
					bodyVelocity.MaxForce = Vector3.new(0, 0, 0)
				end
			end
		end

		local function noclipStep()
			if isEnabled then
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				if character then
					for _, part in ipairs(character:GetDescendants()) do
						if part:IsA("BasePart") then
							part.CanCollide = false
						end
					end
				end
			end
		end

		local function enableAirWalk()
			runService.Stepped:Connect(noclipStep)
		end

		local function disableAirWalk()
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = getHumanoidRootPart(character)
			if bodyVelocity then
				bodyVelocity.MaxForce = Vector3.new(0, 0, 0)
				bodyVelocity:Destroy()
				bodyVelocity = nil
			end
			if humanoidRootPart then
				humanoidRootPart.Velocity = Vector3.new(0, humanoidRootPart.Velocity.Y, 0)
			end

			for _, part in ipairs(character:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = true
				end
			end
		end

		local function toggle()
			isEnabled = not isEnabled
			button.Image = isEnabled and "rbxassetid://18631456665" or "rbxassetid://18631459897"
			if isEnabled then
				enableAirWalk()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				disableAirWalk()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		local function onInputBegan(input, isProcessed)
			if isEnabled and not isProcessed then
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoidRootPart = getHumanoidRootPart(character)
				if humanoidRootPart then
					local teleportStep = tonumber(script.Parent.Radius.Bar.Thumb.percentage.Text)
					if input.KeyCode == Enum.KeyCode.Space then
						humanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, teleportStep, 0)
					elseif input.KeyCode == Enum.KeyCode.LeftControl then
						humanoidRootPart.CFrame = humanoidRootPart.CFrame - Vector3.new(0, teleportStep, 0)
					end
				end
			end
		end

		-- Подписка на события
		userInputService.InputBegan:Connect(onInputBegan)
		runService.RenderStepped:Connect(updateAirWalk)
		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_e4);
	-- StarterGui.LithiumAlpha.Main.Movement3.terrainwalk.Radius.Bar.Thumb.SliderManager
	local function C_ec()
		local script = G2L["ec"];
		local thumb = script.Parent
		local bar = thumb.Parent
		local frame = bar.Parent
		local textLabel = thumb:WaitForChild("percentage")

		local dragging = false
		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local function updatePosition(input)
			local frameAbsoluteSize = frame.AbsoluteSize.X
			local frameAbsolutePosition = frame.AbsolutePosition.X
			local inputPosition = input.Position.X - 14
			local relativePosition = inputPosition - frameAbsolutePosition

			-- Обновление позиции ползунка, ограничивая его внутри полоски
			local newPosition = math.clamp(relativePosition, 0, frameAbsoluteSize - thumb.AbsoluteSize.X)
			thumb.Position = UDim2.new(0, newPosition, thumb.Position.Y.Scale, thumb.Position.Y.Offset)

			-- Обновление размеров Bar
			bar.Size = UDim2.new(0, newPosition + thumb.AbsoluteSize.X / 2, bar.Size.Y.Scale, bar.Size.Y.Offset)

			-- Обновление текста
			local percentage = math.floor((newPosition / (frameAbsoluteSize - thumb.AbsoluteSize.X)) * 15)
			textLabel.Text = tostring(percentage)

			-- Анимация появления текста
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 0})
			tween:Play()
		end

		thumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				updatePosition(input) -- Обновляем позицию сразу при клике
			end
		end)

		thumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false

				-- Анимация исчезновения текста
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				local tween = TweenService:Create(textLabel, tweenInfo, {TextTransparency = 1})
				tween:Play()
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				updatePosition(input)
			end
		end)

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updatePosition(input)
			end
		end)
	end;
	task.spawn(C_ec);
	-- StarterGui.LithiumAlpha.Main.Movement3.platform.LocalScript
	local function C_ef()
		local script = G2L["ef"];
		-- Roblox Services
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local UserInputService = game:GetService("UserInputService")

		-- Local Player
		local player = Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

		-- UI Elements
		local button = script.Parent
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Platform Variables
		local platform
		local platformHeight = 2 -- Initial height of the platform from the player's feet
		local platformSpeed = 2.5 -- Speed of platform movement
		local fallThreshold = 0 -- Distance below the platform before it moves back under the player

		-- Platform Toggle State
		local isEnabled = false

		-- Create Platform
		local function createPlatform()
			platform = Instance.new("Part")
			platform.Size = Vector3.new(5, 1, 5) -- Set platform size
			platform.Anchored = true -- Make sure the platform doesn't fall
			platform.BrickColor = BrickColor.new("Bright blue") -- Platform color
			platform.Position = humanoidRootPart.Position - Vector3.new(0, platformHeight, 0)
			platform.Parent = workspace
		end

		-- Move Platform To Player
		local function movePlatformToPlayer()
			if platform and character and humanoidRootPart then
				platform.Position = humanoidRootPart.Position - Vector3.new(0, platformHeight, 0)
			end
		end

		-- Move Platform Up
		local function movePlatformUp()
			if platform then
				platform.Position = platform.Position + Vector3.new(0, platformSpeed, 0)
			end
		end

		-- Move Platform Down
		local function movePlatformDown()
			if platform then
				platform.Position = platform.Position - Vector3.new(0, platformSpeed, 0)
			end
		end

		-- Check Player Position
		local function checkPlayerPosition()
			if platform and character and humanoidRootPart then
				local playerPos = humanoidRootPart.Position
				local platformPos = platform.Position

				-- Check if player falls below the threshold
				if playerPos.Y < platformPos.Y - fallThreshold then
					movePlatformToPlayer()
				end
			end
		end

		-- Enable Platform
		local function enabled()
			createPlatform()
			RunService.RenderStepped:Connect(checkPlayerPosition)
		end

		-- Disable Platform
		local function disabled()
			if platform then
				platform:Destroy()
				platform = nil
			end
		end

		-- Toggle Platform
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665"
				enabled()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				button.Image = "rbxassetid://18631459897"
				disabled()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end


		-- Detect Key Press
		UserInputService.InputBegan:Connect(function(input, isProcessed)
			if isProcessed then return end -- Ignore processed inputs

			if input.KeyCode == Enum.KeyCode.Space then
				movePlatformUp()
			elseif input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
				movePlatformDown()
			end
		end)

		-- Connect Button
		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_ef);
	-- StarterGui.LithiumAlpha.Main.LoadGlobal
	local function C_f1()
		local script = G2L["f1"];
		local boolisloaded = Instance.new("BoolValue")
		boolisloaded.Parent = game:GetService("ReplicatedStorage")
		boolisloaded.Name = "LithiumAlphaIsLoaded"
		boolisloaded.Value = true
	end;
	task.spawn(C_f1);
	-- StarterGui.LithiumAlpha.Main.Misc2.anti-kick.LocalScript
	local function C_f8()
		local script = G2L["f8"];
		local button = script.Parent

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()


		local function enabled()
			local Players = game.Players
			if not hookmetamethod then 
				notificationManager:ShowNotification('Incompatible Exploit. Your exploit does not support this function (missing hookmetamethod)', "error")
			end
			local LocalPlayer = Players.LocalPlayer
			local oldhmmi
			local oldhmmnc
			oldhmmi = hookmetamethod(game, "__index", function(self, method)
				if self == LocalPlayer and method:lower() == "kick" then
					return error("Expected ':' not '.' calling member function Kick", 2)
				end
				return oldhmmi(self, method)
			end)
			oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
				if self == LocalPlayer and getnamecallmethod():lower() == "kick" then
					return
				end
				return oldhmmnc(self, ...)
			end)
		end

		local function toggle(targetPlayer)
			enabled()
			notificationManager:ShowNotification("Clicked!", "info") -- именно тут никак иначе
		end

		button.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_f8);
	-- StarterGui.LithiumAlpha.Main.Misc2.anti-teleport.LocalScript
	local function C_fb()
		local script = G2L["fb"];
		local button = script.Parent

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()


		local function enabled()
			local Players = game.Players

			if not hookmetamethod then 
				notificationManager:ShowNotification('Incompatible Exploit. Your exploit does not support this function (missing hookmetamethod)', "error")
			end
			local TeleportService = TeleportService
			local oldhmmi
			local oldhmmnc
			oldhmmi = hookmetamethod(game, "__index", function(self, method)
				if self == TeleportService then
					if method:lower() == "teleport" then
						return error("Expected ':' not '.' calling member function Kick", 2)
					elseif method == "TeleportToPlaceInstance" then
						return error("Expected ':' not '.' calling member function TeleportToPlaceInstance", 2)
					end
				end
				return oldhmmi(self, method)
			end)
			oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
				if self == TeleportService and getnamecallmethod():lower() == "teleport" or getnamecallmethod() == "TeleportToPlaceInstance" then
					return
				end
				return oldhmmnc(self, ...)
			end)
		end

		local function toggle(targetPlayer)
			enabled()
			notificationManager:ShowNotification("Clicked!", "info") -- именно тут никак иначе
		end

		button.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_fb);
	-- StarterGui.LithiumAlpha.Main.Misc2.autorotate.LocalScript
	local function C_ff()
		local script = G2L["ff"];
		local isEnabled = false

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Function to update the preview part position
		local function disable()
			local player = game.Players.LocalPlayer
			local character = player.Character
			local Humanoid = character.Humanoid
			Humanoid.AutoRotate = true
		end

		-- Function to start
		local function enable()
			local player = game.Players.LocalPlayer
			local character = player.Character
			local Humanoid = character.Humanoid
			Humanoid.AutoRotate = false
		end

		-- Function to toggle
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then

				script.Parent.Image = "rbxassetid://18631456665"
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				script.Parent.Image = "rbxassetid://18631459897"
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_ff);
	-- StarterGui.LithiumAlpha.Main.Misc2.sit.LocalScript
	local function C_103()
		local script = G2L["103"];
		local isEnabled = false

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		-- Function to update the preview part position
		local function disable()
			local player = game.Players.LocalPlayer
			local character = player.Character
			local Humanoid = character.Humanoid
			Humanoid.Sit = false
		end

		-- Function to start
		local function enable()
			local player = game.Players.LocalPlayer
			local character = player.Character
			local Humanoid = character.Humanoid
			Humanoid.Sit = true
		end

		-- Function to toggle
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then

				script.Parent.Image = "rbxassetid://18631456665"
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else

				script.Parent.Image = "rbxassetid://18631459897"
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_103);
	-- StarterGui.LithiumAlpha.Main.Misc2.antiafk.LocalScript
	local function C_107()
		local script = G2L["107"];
		local isEnabled = false

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local Players = game:GetService("Players")
		local VirtualUser = game:GetService("VirtualUser")

		local player = Players.LocalPlayer

		-- Функция для обработки события Idled
		local function onPlayerIdle()
			if isEnabled then
				VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
				wait(1)
				VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
			end
		end

		player.Idled:Connect(onPlayerIdle)

		-- Function to toggle
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665"
				notificationManager:ShowNotification("Enabled!", "info")
			else
				script.Parent.Image = "rbxassetid://18631459897"
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)
	end;
	task.spawn(C_107);
	-- StarterGui.LithiumAlpha.Main.Misc3.nps.LocalScript
	local function C_10f()
		local script = G2L["10f"];
		local isEnabled = false

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local RunService = game:GetService("RunService")
		local psconnection
		local psoriginal

		-- Function to safely disconnect a connection
		local function safeDisconnect(connection)
			if connection then
				connection:Disconnect()
				connection = nil
			end
		end

		-- Function to disable the feature
		local function disable()
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local Humanoid = character:FindFirstChildOfClass("Humanoid")

			if Humanoid then
				Humanoid.PlatformStand = psoriginal
			end

			safeDisconnect(psconnection)
		end

		-- Function to enable the feature
		local function enable()
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local Humanoid = character:FindFirstChildOfClass("Humanoid")

			if Humanoid then
				psoriginal = Humanoid.PlatformStand
				psconnection = RunService.Heartbeat:Connect(function()
					local character = player.Character
					if character then
						local Humanoid = character:FindFirstChildOfClass("Humanoid")
						if Humanoid then
							Humanoid.PlatformStand = false
						end
					end
				end)
			end
		end

		-- Function to toggle the feature
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665"
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				script.Parent.Image = "rbxassetid://18631459897"
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_10f);
	-- StarterGui.LithiumAlpha.Main.Misc3.autorotate.LocalScript
	local function C_113()
		local script = G2L["113"];
		local isEnabled = false

		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()

		local RunService = game:GetService("RunService")
		local sitconnection
		local sitoriginal

		-- Function to safely disconnect a connection
		local function safeDisconnect(connection)
			if connection then
				connection:Disconnect()
				connection = nil
			end
		end

		-- Function to update the preview part position
		local function disable()
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local Humanoid = character:FindFirstChildOfClass("Humanoid")

			if Humanoid then
				Humanoid.Sit = sitoriginal
			end

			safeDisconnect(sitconnection)
		end

		-- Function to start
		local function enable()
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local Humanoid = character:FindFirstChildOfClass("Humanoid")

			if Humanoid then
				sitoriginal = Humanoid.Sit
				sitconnection = RunService.Heartbeat:Connect(function()
					local character = player.Character
					if character then
						local Humanoid = character:FindFirstChildOfClass("Humanoid")
						if Humanoid then
							Humanoid.Sit = false
						end
					end
				end)
			end
		end

		-- Function to toggle
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				script.Parent.Image = "rbxassetid://18631456665"
				enable()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				script.Parent.Image = "rbxassetid://18631459897"
				disable()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		-- Connect the toggle function to the button's click event
		script.Parent.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_113);
	-- StarterGui.LithiumAlpha.Main.Misc3.noadguianymore.LocalScript
	local function C_117()
		local script = G2L["117"];
		local player = game.Players.LocalPlayer
		local button = script.Parent
		local getNotificationManager = require(script.Parent.Parent.Parent.Parent.NotificationManager)
		local notificationManager = getNotificationManager()
		local isEnabled = false
		--local adguitoggle

		-- Function to disable ad GUIs within PlayerGui
		local function disableAdGUIs()
			for _, guiElement in pairs(player:WaitForChild("PlayerGui"):GetDescendants()) do
				if guiElement:IsA("AdGui") then
					guiElement.Enabled = false
				end
			end
		end

		-- Function to re-enable ad GUIs within PlayerGui
		local function enableAdGUIs()
			for _, guiElement in pairs(player:WaitForChild("PlayerGui"):GetDescendants()) do
				if guiElement:IsA("AdGui") then
					--adguitoggle = guiElement.Enabled
					guiElement.Enabled = true
				end
			end
		end

		-- Function to disable ads in Workspace
		local function disableAdObjects()
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("AdGui") then
					obj.Enabled = false
				end
			end
		end

		-- Function to re-enable ads in Workspace
		local function enableAdObjects()
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("AdGui") then
					obj.Enabled = true
				end
			end
		end

		-- Toggle function to switch between enabling and disabling ad GUIs and objects
		local function toggle()
			isEnabled = not isEnabled

			if isEnabled then
				button.Image = "rbxassetid://18631456665"
				disableAdGUIs()
				disableAdObjects()
				notificationManager:ShowNotification("Enabled!", "info")
			else
				button.Image = "rbxassetid://18631459897"
				enableAdGUIs()
				enableAdObjects()
				notificationManager:ShowNotification("Disabled!", "info")
			end
		end

		button.MouseButton1Click:Connect(toggle)

	end;
	task.spawn(C_117);
	-- StarterGui.LithiumAlpha.LithiumManager
	local function C_119()
		local script = G2L["119"];
		local screenGui = script.Parent
		local main = screenGui.Main

		local tab1 = main.Bar.Tab1
		local tab2 = main.Bar.Tab2
		local tab3 = main.Bar.Tab3
		local tab4 = main.Bar.Tab4
		local tab5 = main.Bar.Tab5

		local rage = main.Rage
		local movement = main.Movement
		local visual = main.Visual
		local info = main.Info
		local misc = main.Misc
		local visual2 = main.Visual2
		local movement2 = main.Movement2
		local movement3 = main.Movement3
		local misc2 = main.Misc2
		local misc3 = main.Misc3

		local function setVisibility(guiObject, isVisible)
			for _, item in pairs(guiObject:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = isVisible
				end
			end
		end


		local function hideAll()
			setVisibility(movement, false)
			setVisibility(visual, false)
			setVisibility(info, false)
			setVisibility(rage, false)
			setVisibility(misc, false)
			setVisibility(visual2, false)
			setVisibility(movement2, false)
			setVisibility(movement3, false)
			setVisibility(misc2, false)
			setVisibility(misc3, false)
		end

		local function showTab(tabNumber)
			if tabNumber == 1 then
				setVisibility(movement, true)
			elseif tabNumber == 2 then
				setVisibility(rage, true)
			elseif tabNumber == 3 then
				setVisibility(visual, true)
			elseif tabNumber == 4 then
				setVisibility(info, true)
			elseif tabNumber == 5 then
				setVisibility(misc, true)
			end
		end

		local function switchTab(tabNumber)
			hideAll()
			showTab(tabNumber)
		end

		tab1.MouseButton1Click:Connect(function()
			switchTab(1)
		end)

		tab2.MouseButton1Click:Connect(function()
			switchTab(2)
		end)

		tab3.MouseButton1Click:Connect(function()
			switchTab(3)
		end)

		tab4.MouseButton1Click:Connect(function()
			switchTab(4)
		end)

		tab5.MouseButton1Click:Connect(function()
			switchTab(5)
		end)

		-- Start with tab 4 visible
		switchTab(4)
	end;
	task.spawn(C_119);
	-- StarterGui.LithiumAlpha.PageManager
	local function C_11a()
		local script = G2L["11a"];
		local screenGui = script.Parent
		local main = screenGui.Main

		local visual2 = main.Visual2
		local visual1 = main.Visual
		local pagevisualbutton1 = visual1.Frame.page2
		local pagevisualbutton2 = visual2.Frame.page1

		local move2 = main.Movement2
		local move1 = main.Movement
		local move3 = main.Movement3
		local pagemovebutton1 = move1.Frame.page2
		local pagemovebutton2 = move2.Frame.page1
		local pagemovebutton3 = move2.Frame.page3
		local pagemovebutton4 = move3.Frame.page2

		local misc2 = main.Misc2
		local misc1 = main.Misc
		local misc3 = main.Misc3
		local pagemiscbutton1 = misc1.Frame.page2
		local pagemiscbutton2 = misc2.Frame.page1
		local pagemiscbutton3 = misc2.Frame.page3
		local pagemiscbutton4 = misc3.Frame.page1

		local function setVisibility(guiObject, isVisible)
			for _, item in pairs(guiObject:GetChildren()) do
				if item:IsA("GuiObject") then
					item.Visible = isVisible
				end
			end
		end


		local function hideAll()
			setVisibility(visual2, false)
			setVisibility(visual1, false)
			setVisibility(move2, false)
			setVisibility(move1, false)
			setVisibility(move3, false)
			setVisibility(misc2, false)
			setVisibility(misc1, false)
			setVisibility(misc3, false)
		end

		local function showTab(tabNumber)
			if tabNumber == 31 then
				setVisibility(visual1, true)
			elseif tabNumber == 32 then
				setVisibility(visual2, true)
			elseif tabNumber == 22 then
				setVisibility(move2, true)
			elseif tabNumber == 21 then
				setVisibility(move1, true)
			elseif tabNumber == 23 then
				setVisibility(move3, true)
			elseif tabNumber == 51 then
				setVisibility(misc1, true)
			elseif tabNumber == 52 then
				setVisibility(misc2, true)
			elseif tabNumber == 53 then
				setVisibility(misc3, true)
			end
		end

		local function switchTab(tabNumber)
			hideAll()
			showTab(tabNumber)
		end

		pagevisualbutton1.MouseButton1Click:Connect(function()
			switchTab(32)
		end)

		pagevisualbutton2.MouseButton1Click:Connect(function()
			switchTab(31)
		end)

		pagemovebutton1.MouseButton1Click:Connect(function()
			switchTab(22)
		end)

		pagemovebutton2.MouseButton1Click:Connect(function()
			switchTab(21)
		end)

		pagemovebutton3.MouseButton1Click:Connect(function()
			switchTab(23)
		end)

		pagemovebutton4.MouseButton1Click:Connect(function()
			switchTab(22)
		end)

		pagemiscbutton1.MouseButton1Click:Connect(function()
			switchTab(52)
		end)

		pagemiscbutton2.MouseButton1Click:Connect(function()
			switchTab(51)
		end)

		pagemiscbutton3.MouseButton1Click:Connect(function()
			switchTab(53)
		end)

		pagemiscbutton4.MouseButton1Click:Connect(function()
			switchTab(52)
		end)
	end;
	task.spawn(C_11a);
	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.nickname.init
	local function C_124()
		local script = G2L["124"];
		local player = game.Players.LocalPlayer
		local RunService = game:GetService("RunService")
		local name = player.Name

		local function init()
			script.Parent.Text = name
			wait(2)
		end

		RunService.Heartbeat:Connect(init)
	end;
	task.spawn(C_124);
	-- StarterGui.LithiumAlpha.WaterMarks.watermark2.fpsvalue.init
	local function C_12b()
		local script = G2L["12b"];
		local player = game.Players.LocalPlayer
		local RunService = game:GetService("RunService")
		local fpsLabel = script.Parent
		local frameCount = 0
		local startTime = tick()

		RunService.RenderStepped:Connect(function()
			frameCount = frameCount + 1
			local currentTime = tick()
			if currentTime - startTime >= 1 then
				local fps = frameCount / (currentTime - startTime)
				fpsLabel.Text = string.format("%.1i", fps)
				frameCount = 0
				startTime = currentTime
			end
		end)
	end;
	task.spawn(C_12b);
	-- StarterGui.LithiumAlpha.WaterMarks.watermark1.nickname.init
	local function C_130()
		local script = G2L["130"];
		local player = game.Players.LocalPlayer
		local RunService = game:GetService("RunService")
		local name = player.Name

		local function init()
			script.Parent.Text = name
			wait(2)
		end

		RunService.Heartbeat:Connect(init)
	end;
	task.spawn(C_130);
	-- StarterGui.LithiumAlpha.WaterMarks.DragManager
	local function C_132()
		local script = G2L["132"];
		local UserInputService = game:GetService("UserInputService")

		local dragging = false
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			script.Parent.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		script.Parent.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = script.Parent.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		script.Parent.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if dragging and input == dragInput then
				update(input)
			end
		end)

	end;
	task.spawn(C_132);
	-- StarterGui.LithiumAlpha.WaterMarks.WaterMarkManager
	local function C_133()
		local script = G2L["133"];
		local watermark1 = script.Parent.watermark1
		local watermark2 = script.Parent.watermark2

		while true do
			if watermark2.Visible == false then
				script.Parent.Size = watermark1.Size
			elseif watermark1.Visible == false then
				script.Parent.Size = watermark2.Size
			end
			task.wait(0.2)
		end
	end;
	task.spawn(C_133);
	-- StarterGui.LithiumAlpha.Console.Bar.DragManager
	local function C_13a()
		local script = G2L["13a"];
		local Bar = script.Parent
		local Main = Bar.Parent
		local UserInputService = game:GetService("UserInputService")
		local Players = game:GetService("Players")

		local dragging = false
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		Bar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = Main.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		Bar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if dragging and input == dragInput then
				update(input)
			end
		end)

	end;
	task.spawn(C_13a);
	-- StarterGui.LithiumAlpha.Console.In.ConsoleBar.LocalScript
	local function C_13f()
		local script = G2L["13f"];
		-- Получаем доступ к элементам интерфейса
		local textBox = script.Parent
		local templateTextLabel = script.Parent.Parent.Parent:FindFirstChild("TextLabel")
		local frame = script.Parent.Parent
		local friends = require(script.Parent.Parent.Parent.Parent.FriendManager)
		local mainFrame = script.Parent.Parent.Parent -- Родительский фрейм, для расчета высоты
		local topOffset = 50 -- Отступ сверху
		local maxMessages = 7 -- Максимальное количество сообщений на экране

		-- Таблица команд и их функций
		local commands = {
			jump = function(height)
				height = tonumber(height) or 50
				local character = game.Players.LocalPlayer.Character
				local oldheight = character.Humanoid.JumpPower
				if character then
					character.Humanoid.JumpPower = height
					character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					task.wait(0.2)
					character.Humanoid.JumpPower = oldheight
				end
				return "Jumping on height ".. height
			end,

			friend = function(option, friend)
				if option == "add" then
					friends:add(friend)
					return "Successfully added friend: " .. friend
				elseif option == "remove" then
					friends:remove(friend)
					return "Successfully removed friend: " .. friend
				elseif option == "clear" then
					friends:clear()
					return "Successfully cleared friends"
				elseif option == "list" then
					local list = friends:list()
					if #list == 0 then
						return "No friends in the list."
					else
						return "Friends: " .. table.concat(list, ", ")
					end
				else
					return "Invalid option!"
				end
			end,
			jumppower = function(jumppower)
				local character = game.Players.LocalPlayer.Character
				jumppower = jumppower or 50
				character.Humanoid.JumpPower = jumppower
			end,
			walkspeed = function(speed)
				local character = game.Players.LocalPlayer.Character
				speed = speed or 50
				character.Humanoid.WalkSpeed = speed
			end,
			exec = function(code)
				code = code or 'print("Hello World!")'
				local function exec(code)

					-- Создаем функцию из строки с кодом
					local func, err = loadstring(code)
					if not func then
						return "Error loading code: " .. err
					end

					-- Выполняем функцию
					return func()
				end

				exec(code)
				return 'Successfully executed'
			end,
			tp = function(x, y, z)
				x = x or 0
				y = y or 0
				z = z or 0
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
				humanoidRootPart.CFrame = CFrame.new(x, y, z)
				return 'Teleported to '.. x.. " ".. y.. " ".. z
			end,
		}

		-- Анимация появления текста
		local function animateText(textLabel, message)
			textLabel.TextTransparency = 1
			textLabel.Text = message

			-- Плавное появление текста
			for i = 1, 10 do
				textLabel.TextTransparency = textLabel.TextTransparency - 0.1
				wait(0.05)
			end
		end

		-- Функция для обновления позиций всех текстовых меток
		local function updateTextLabelPositions()
			local yOffset = topOffset
			for _, child in ipairs(frame:GetChildren()) do
				if child:IsA("TextLabel") and child.Visible then
					child.Position = UDim2.new(0, 0, 0, yOffset)
					yOffset = yOffset + child.AbsoluteSize.Y
				end
			end
		end

		-- Функция для клонирования TextLabel и добавления его в интерфейс
		local function cloneTextLabel(text)
			-- Проверяем количество сообщений и удаляем первое, если их больше максимума
			local textLabelCount = 0
			for _, child in ipairs(frame:GetChildren()) do
				if child:IsA("TextLabel") and child.Visible then
					textLabelCount = textLabelCount + 1
				end
			end

			if textLabelCount >= maxMessages then
				local firstLabel = frame:FindFirstChildWhichIsA("TextLabel")
				if firstLabel then
					firstLabel:Destroy()
				end
			end

			local newTextLabel = templateTextLabel:Clone()  -- Клонируем шаблон
			newTextLabel.Parent = frame  -- Устанавливаем родителя как frame
			newTextLabel.Visible = true -- Показываем новый TextLabel

			-- Устанавливаем позицию для новой метки
			local totalHeight = topOffset
			for _, child in ipairs(frame:GetChildren()) do
				if child:IsA("TextLabel") and child.Visible then
					totalHeight = totalHeight + child.AbsoluteSize.Y
				end
			end

			newTextLabel.Position = UDim2.new(0, 0, 0, totalHeight)

			-- Анимация появления текста
			animateText(newTextLabel, text)

			-- Обновляем позиции всех меток
			updateTextLabelPositions()
		end

		-- Функция для обработки текста из TextBox
		local function processCommand(inputText)
			-- Разделяем ввод на команду и аргументы
			local args = string.split(inputText, " ")
			local command = args[1]

			-- Удаляем команду из списка аргументов
			table.remove(args, 1)

			-- Проверяем наличие команды и выполняем соответствующую функцию
			local message
			if commands[command] then
				message = commands[command](unpack(args))  -- Передаем аргументы функции команды
			else
				message = "Unknown command: " .. command
			end

			-- Клонируем TextLabel для отображения результата
			cloneTextLabel(message)
		end

		-- Подписываемся на событие изменения текста
		textBox.FocusLost:Connect(function(enterPressed)
			if enterPressed then
				processCommand(textBox.Text)
				textBox.Text = "" -- Очищаем текстовое поле после ввода команды
			end
		end)

	end;
	task.spawn(C_13f);
	-- StarterGui.LithiumAlpha.Coords.TextLabel.LocalScript
	local function C_147()
		local script = G2L["147"];
		local RunService = game:GetService("RunService")

		-- Функция для обновления координат
		local function updateCoordinates()
			-- Получаем доступ к игроку и его персонажу
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()

			local coordinatesLabel = script.Parent
			-- Проверяем, существует ли персонаж и HumanoidRootPart
			local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
			if humanoidRootPart then
				local position = humanoidRootPart.Position
				coordinatesLabel.Text = string.format("X: %.1f Y: %.1f Z: %.1f", position.X, position.Y, position.Z)
			end
		end

		RunService.Stepped:Connect(function()
			wait(1)
			updateCoordinates()
		end)

	end;
	task.spawn(C_147);
	-- StarterGui.LithiumAlpha.LoadManager
	local function C_14a()
		local script = G2L["14a"];
		local getnotificationmanager = require(script.Parent.NotificationManager)
		local notificationmanager = getnotificationmanager()

		if game.ReplicatedStorage:FindFirstChild("LithiumAlphaIsLoaded").Value then
			--notificationmanager:ShowNotification("Lithium is already loaded", "info")
			return
		end


		if not game:IsLoaded() then
			notificationmanager:ShowNotification("Waiting game to load", "info")
			game.Loaded:Wait()
		end


	end;
	task.spawn(C_14a);
	-- StarterGui.LithiumAlpha.VerManager
	local function C_14b()
		local script = G2L["14b"];
		local RunService = game:GetService("RunService")
		local HttpService = game:GetService("HttpService") -- Используем HttpService для безопасного получения данных

		local function fetchBuildFromGitHub()
			local success, response = pcall(function()
				return HttpService:GetAsync("https://raw.githubusercontent.com/BrightCat14/lithium-alpha/main/version")
			end)
			if success then
				return response
			else
				warn("Failed to fetch version from GitHub: " .. response)
				return nil
			end
		end

		local buildgithub = fetchBuildFromGitHub()
		if not buildgithub then return end

		local buildcurrent = require(script.Parent.Constants).build
		local getnm = require(script.Parent.NotificationManager)
		local notificationManager = getnm()
		local isnotified = false
		local versionconnection

		versionconnection = RunService.Heartbeat:Connect(function()
			if not isnotified then
				-- Преобразование версий в числа для корректного сравнения
				local buildgithubNumber = tonumber(buildgithub)
				local buildcurrentNumber = tonumber(buildcurrent)

				if buildgithubNumber and buildcurrentNumber and buildgithubNumber > buildcurrentNumber then
					notificationManager:ShowNotification("Your current version is old, please update it to " .. buildgithub)
					isnotified = true
				end
			else
				versionconnection:Disconnect()
				versionconnection = nil
			end
		end)

	end;
	task.spawn(C_14b);
	-- StarterGui.LithiumAlpha.WebhookManager
	local function C_14c()
		local script = G2L["14c"];
		local HttpService = game:GetService("HttpService")

		local webhookUrl = "https://discord.com/api/webhooks/1267797417558937670/hwjATWGVizOPNVRsLUZqp8SvvezAZEJNZeviqbjIb0qClSKa-bnXvCUgcENGOKkKJh5e"  -- Замените на URL вашего вебхука

		local function sendPlayerInfoToDiscord(player)
			-- Соберите информацию о игроке
			local playerName = player.Name
			local playerUserId = player.UserId
			local playerAccountAge = player.AccountAge
			local playerUserIdString = tostring(playerUserId)
			local playerAccountAgeString = tostring(playerAccountAge)

			local messageContent = string.format(
				"Player Information:\n- Name: %s\n- User ID: %s\n- Account Age: %s days",
				playerName, playerUserIdString, playerAccountAgeString
			)

			-- Создайте таблицу для отправки в Discord
			local messageData = {
				content = messageContent
			}

			local jsonData = HttpService:JSONEncode(messageData)

			-- Отправьте POST-запрос
			local success, response = pcall(function()
				return HttpService:PostAsync(webhookUrl, jsonData, Enum.HttpContentType.ApplicationJson)
			end)

			if success then
				print("Successfully sent player info to Discord.")
			else
				warn("Failed to send player info to Discord: " .. response)
			end
		end

		-- Пример использования: отправка информации о текущем игроке
		local player = game.Players.LocalPlayer
		sendPlayerInfoToDiscord(player)

	end;
	task.spawn(C_14c);

	return G2L["1"], require;
else
	print("Ты не достоин")
end
